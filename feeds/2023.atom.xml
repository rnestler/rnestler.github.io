<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.rnstlr.ch - 2023</title><link href="https://blog.rnstlr.ch/" rel="alternate"></link><link href="https://blog.rnstlr.ch/feeds/2023.atom.xml" rel="self"></link><id>https://blog.rnstlr.ch/</id><updated>2023-12-05T00:00:00+01:00</updated><entry><title>Installing ArchLinux ARM on the Raspberry Pi 3</title><link href="https://blog.rnstlr.ch/installing-archlinux-arm-on-the-raspberry-pi-3.html" rel="alternate"></link><published>2023-12-05T00:00:00+01:00</published><updated>2023-12-05T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-12-05:/installing-archlinux-arm-on-the-raspberry-pi-3.html</id><summary type="html">&lt;p&gt;Replacing my RetroPie installation with ArchLinux ARM on my Raspberry Pi 3&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I plugged in my Raspberry Pi 3 which had
&lt;a href="https://retropie.org.uk/"&gt;RetroPie&lt;/a&gt; installed on it. It notified me, that the
installation is out of date and not longer supported and I should reinstall the
system.&lt;/p&gt;
&lt;p&gt;Since I had to do a reinstall anyway and didn't want to be bothered again in
the future, I decided to try out ArchLinux ARM, so I just get the rolling
releases without a need to do re-installs.&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;To install the base image I followed mostly the guide from ArchLinux ARM:
&lt;a href="https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3"&gt;https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the setup I needed to connect it with an Ethernet cable, since the guide
doesn't explain how to set up WiFi prior to first booting it.&lt;/p&gt;
&lt;p&gt;After that I logged in via ssh. I needed to enforce password authentication,
since otherwise ssh would just try all my ssh keys to authenticate which lead
to a &lt;code&gt;Received disconnect from 192.168.0.31 port 22:2: Too many authentication
failures&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PreferredAuthentications&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;alarm@alarmpi
&lt;span class="c1"&gt;# switch to root user&lt;/span&gt;
su
&lt;span class="c1"&gt;# From the install guide&lt;/span&gt;
pacman-key&lt;span class="w"&gt; &lt;/span&gt;--init
pacman-key&lt;span class="w"&gt; &lt;/span&gt;--populate&lt;span class="w"&gt; &lt;/span&gt;archlinuxarm
&lt;span class="c1"&gt;# Update the whole system&lt;/span&gt;
pacman&lt;span class="w"&gt; &lt;/span&gt;-Syu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;During the update step I got a scary warning while building the initramfs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(12/14) Updating linux-rpi initcpios...
==&amp;gt; Building image from preset: /etc/mkinitcpio.d/linux-rpi.preset: &amp;#39;default&amp;#39;
==&amp;gt; Using configuration file: &amp;#39;/etc/mkinitcpio.conf&amp;#39;
  -&amp;gt; -k 6.1.64-2-rpi-ARCH -c /etc/mkinitcpio.conf -g /boot/initramfs-linux.img
==&amp;gt; Starting build: &amp;#39;6.1.64-2-rpi-ARCH&amp;#39;
  -&amp;gt; Running build hook: [base]
  -&amp;gt; Running build hook: [udev]
  -&amp;gt; Running build hook: [autodetect]
  -&amp;gt; Running build hook: [modconf]
  -&amp;gt; Running build hook: [kms]
  -&amp;gt; Running build hook: [keyboard]
  -&amp;gt; Running build hook: [keymap]
  -&amp;gt; Running build hook: [consolefont]
==&amp;gt; WARNING: consolefont: no font found in configuration
  -&amp;gt; Running build hook: [block]
  -&amp;gt; Running build hook: [filesystems]
  -&amp;gt; Running build hook: [fsck]
==&amp;gt; Generating module dependencies
==&amp;gt; Creating gzip-compressed initcpio image: &amp;#39;/boot/initramfs-linux.img&amp;#39;
==&amp;gt; WARNING: errors were encountered during the build. The image may not be complete.
error: command failed to execute correctly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I tried to figure out what went wrong and then decided to just reboot and see
if we can still do that, which worked without problems.&lt;/p&gt;
&lt;h2&gt;Configuring WiFi&lt;/h2&gt;
&lt;p&gt;Since I didn't want to bother with connecting the raspi with an ethernet cable
at the location were I wanted to run it, I needed to configure WiFi before
continuing.&lt;/p&gt;
&lt;p&gt;Since it will run stationary, it is enough to just hard-code a single network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wpa_passphrase&lt;span class="w"&gt; &lt;/span&gt;SSID&lt;span class="w"&gt; &lt;/span&gt;PSK&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/wpa_supplicant/wpa_supplicant@wlan0.service
systemctl&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt; &lt;/span&gt;wpa_supplicant@wlan0.service
systemctl&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wpa_supplicant@wlan0.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we tell systemd-network to enable DHCP for the wlan0 interface by creating
&lt;code&gt;/etc/systemd/network/wlan0.network&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Match]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;wlan0&lt;/span&gt;

&lt;span class="k"&gt;[Network]&lt;/span&gt;
&lt;span class="na"&gt;DHCP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;IgnoreCarrierLoss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;3s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After reloading with &lt;code&gt;systemctl reload systemd-networkd.service&lt;/code&gt; WiFi was
connected.&lt;/p&gt;
&lt;h1&gt;Installing Kodi&lt;/h1&gt;
&lt;p&gt;Since I wanted to run Kodi on the Pi (along side RetroPi / Emulation station)
I followed this guide: &lt;a href="https://kodi.wiki/view/HOW-TO:Install_Kodi_on_Raspberry_Pi"&gt;https://kodi.wiki/view/HOW-TO:Install_Kodi_on_Raspberry_Pi&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacman -S kodi
# selecting kodi-rpi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After installing the output of pacman showed the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Remove any manual tweaks made to /boot/config.txt particulary a line such
    as gpu_mem=xxx.  Driver setup for Kodi is stored in /boot/kodi.config.txt

    Manually append the following to /boot/config.txt to make them active:
    [all]
    include kodi.config.txt

    A reboot will be required to activate them if this is a fresh install.`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Optional kodi dependencies&lt;/summary&gt;
Kodi showed the following optional dependencies: Since I currently don't want
to use bluetooth for anything, nor want to use pipewire or pulseaudio but plain
ALSA, I didn't install any of them.

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Optional dependencies for kodi-rpi
    afpfs-ng: Apple shares support
    bluez: Blutooth support
    linux-rpi: HW accelerated decoding [installed]
    python-pybluez: Bluetooth support
    pulseaudio: PulseAudio support
    pipewire: PipeWire support
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;So I edited it accordingly, enabled the kodi service and rebooted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo systemctl enable kodi.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So far everything is working quite nicely and one of the next things will be to
get a spotify plugin to run on the Raspberry Pi.&lt;/p&gt;</content><category term="2023"></category><category term="Raspberry Pi"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="ARM"></category></entry><entry><title>Building an out-of-tree Rust Kernel Module Part Three</title><link href="https://blog.rnstlr.ch/building-an-out-of-tree-rust-kernel-module-part-three.html" rel="alternate"></link><published>2023-06-15T00:00:00+02:00</published><updated>2023-06-15T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-06-15:/building-an-out-of-tree-rust-kernel-module-part-three.html</id><summary type="html">&lt;p&gt;Trying to build a hello world out-of-tree Rust kernel module for Linux. Part Three.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last &lt;a href="/building-an-out-of-tree-rust-kernel-module-part-two.html"&gt;blog post&lt;/a&gt;,
I managed to build an out-of-tree kernel module in Rust for a custom 6.1 Linux
kernel I packaged for ArchLinux:
&lt;a href="https://aur.archlinux.org/packages/linux-rust"&gt;https://aur.archlinux.org/packages/linux-rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While this worked, I couldn't manage to package the correct metadata to build
the out-of-tree kernel module without a local build of the kernel, which kind
of defeats the purpose of the exercise.&lt;/p&gt;
&lt;p&gt;In the meantime Linux 6.2 got released so I thought I'd try again.&lt;/p&gt;
&lt;h2&gt;Updating our own ArchLinux kernel&lt;/h2&gt;
&lt;p&gt;So I went ahead and updated my &lt;a href="https://aur.archlinux.org/packages/linux-rust"&gt;linux-rust&lt;/a&gt; package to a 6.2 kernel. While
doing this I tried to stay as close as possible to the default ArchLinux kernel
packages &lt;a href="https://gitlab.archlinux.org/archlinux/packaging/packages/linux/-/blob/6.2.10.arch1-1/config?ref_type=tags"&gt;config&lt;/a&gt; file to make it generally usable.&lt;/p&gt;
&lt;h2&gt;Building the out-of-tree module&lt;/h2&gt;
&lt;p&gt;Linux 6.2 changed the module metadata strings from byte arrays to proper
&lt;code&gt;str&lt;/code&gt;s. For that we needed to update the kernel module. See:
&lt;a href="https://github.com/Rust-for-Linux/rust-out-of-tree-module/pull/5"&gt;https://github.com/Rust-for-Linux/rust-out-of-tree-module/pull/5&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Same error as before&lt;/h2&gt;
&lt;p&gt;So I went ahead recompiled the kernel, rebooted, tried to compile the kernel
module and got the same error as before:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[main] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0461]: couldn&amp;#39;t find crate `core` with expected target triple target-12809083303779448358
  |
  = note: the following crate versions were found:
          crate `core`, target triple target-5559158138856098584: /usr/lib/modules/6.2.10-arch1-1-rust/build/rust/libcore.rmeta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Finding the root cause for the error&lt;/h2&gt;
&lt;p&gt;But this time I wanted to find out what the cause for this issue is! It turns
out that it is a bug in rustc, where the file &lt;em&gt;path&lt;/em&gt; instead of the &lt;em&gt;content&lt;/em&gt;
of the &lt;code&gt;target.json&lt;/code&gt; where used. See&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rust-for-Linux/linux/issues/792"&gt;https://github.com/Rust-for-Linux/linux/issues/792&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98225"&gt;https://github.com/rust-lang/rust/pull/98225&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Compiling with Rust 1.63.0&lt;/h2&gt;
&lt;p&gt;So since this bug got fix in Rust 1.63.0 I decided to try to compile the kernel
with a newer (and thus unsupported, since the Linux kernel uses unstable Rust
features) version.&lt;/p&gt;
&lt;p&gt;This will print a scary warning during the build process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;***
*** Rust compiler &amp;#39;rustc&amp;#39; is too new. This may or may not work.
***   Your version:     1.63.0
***   Expected version: 1.62.0
***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also there were a few warnings from the Rust compiler itself about features
that got now stabilized:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;warning: the feature `nll` has been stable since 1.63.0 and no longer requires an attribute to enable
   --&amp;gt; rust/alloc/lib.rs:170:12
    |
170 | #![feature(nll)] // Not necessary, but here to test the `nll` feature.
    |            ^^^
    |
    = note: `#[warn(stable_features)]` on by default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Successfully building an out-of-tree kernel module!&lt;/h2&gt;
&lt;p&gt;So finally I was able to compile the out-of-tree module without a local build
of the kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[main] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
  MODPOST /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/Module.symvers
  CC [M]  /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.mod.o
  LD [M]  /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which also loaded successfully:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[125766.698929] rust_out_of_tree: loading out-of-tree module taints kernel.
[125766.698985] rust_out_of_tree: module verification failed: signature and/or required key missing - tainting kernel
[125766.699611] rust_out_of_tree: Rust out-of-tree sample (init)
[125771.403175] rust_out_of_tree: My numbers are [72, 108, 200]
[125771.403183] rust_out_of_tree: Rust out-of-tree sample (exit)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also spent some time figuring out which parts of the build metadata are
really needed, since previously I just copied the whole &lt;code&gt;rust/&lt;/code&gt; folder. In the
end we just need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rust/target.json&lt;/code&gt; the custom target description&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rust/*.rmeta&lt;/code&gt; the compiled rust libraries&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rust/*.so&lt;/code&gt; the pre-compiled procedural macros&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rust-toolchain&lt;/code&gt; such that we use the same Rust compiler version that was
   used to compile the kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Looking forward&lt;/h2&gt;
&lt;p&gt;In the meantime Linux 6.3 got released and 6.4 will be released shortly. But it
doesn't look like they will bump the minimum version of Rust needed to compile:
&lt;a href="https://github.com/torvalds/linux/blob/v6.4-rc6/scripts/min-tool-version.sh#L29"&gt;https://github.com/torvalds/linux/blob/v6.4-rc6/scripts/min-tool-version.sh#L29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But reading &lt;a href="https://rust-for-linux.com/rust-version-policy"&gt;https://rust-for-linux.com/rust-version-policy&lt;/a&gt; it looks like
there are plans to start tracking the latest Rust release for Linux:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It remains to be decided how often the Rust version upgrades will land.
Ideally we would track the latest Rust release, but it remains to be seen how
other kernel developers feel about it.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="2023"></category><category term="rust"></category><category term="kernel"></category><category term="Linux"></category><category term="ArchLinux"></category></entry><entry><title>Switching my Desktop to PipeWire</title><link href="https://blog.rnstlr.ch/switching-my-desktop-to-pipewire.html" rel="alternate"></link><published>2023-05-29T00:00:00+02:00</published><updated>2023-05-29T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-05-29:/switching-my-desktop-to-pipewire.html</id><summary type="html">&lt;p&gt;How I switched my desktop from PulseAudio to PipeWire&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Background&lt;/h1&gt;
&lt;p&gt;While I did setup my new laptop directly with PipeWire back in December 2021,
my existing desktop PC did remain with a PulseAudio setup.&lt;/p&gt;
&lt;h2&gt;What is PipeWire?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://pipewire.org/"&gt;PipeWire&lt;/a&gt; is a new low-level multimedia framework. It aims to offer capture
and playback for both audio and video with minimal latency and support for
PulseAudio, JACK, ALSA and GStreamer-based applications. &lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://wiki.archlinux.org/title/PipeWire"&gt;https://wiki.archlinux.org/title/PipeWire&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The reason I wanted to switch was, that I had some troubles with my bluetooth
headphones (only the SBC codec was available in the A2DP profile and I had some
reliability issues) and I heard that PipeWire should make this better.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Most of the pipewire packages were already installed as dependencies for other packages:&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;

&lt;tt&gt;pacman -Qi pipewire&lt;/tt&gt;

&lt;/summary&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Name            : pipewire
Version         : 1:0.3.71-1
Description     : Low-latency audio/video router and processor
Architecture    : x86_64
URL             : https://pipewire.org
Licenses        : MIT  LGPL
Groups          : None
Provides        : None
Depends On      : libpipewire=1:0.3.71-1  libcamera-base.so=0.0.5-64  libcamera.so=0.0.5-64  libdbus-1.so=3-64  libglib-2.0.so=0-64  libncursesw.so=6-64  libpipewire-0.3.so=0-64  libreadline.so=8-64  libsystemd.so=0-64  libudev.so=1-64
Optional Deps   : gst-plugin-pipewire: GStreamer plugin
                  pipewire-alsa: ALSA configuration
                  pipewire-audio: Audio support
                  pipewire-docs: Documentation
                  pipewire-jack: JACK support
                  pipewire-pulse: PulseAudio replacement
                  pipewire-roc: ROC streaming
                  pipewire-session-manager: Session manager [installed]
                  pipewire-v4l2: V4L2 interceptor
                  pipewire-x11-bell: X11 bell
                  pipewire-zeroconf: Zeroconf support
                  realtime-privileges: realtime privileges with rt module
                  rtkit: realtime privileges with rtkit module [installed]
Required By     : lib32-pipewire  obs-studio  telegram-desktop  wireplumber  xdg-desktop-portal  xdg-desktop-portal-wlr
Optional For    : chromium  electron  electron19  qt5-webengine  qt6-webengine  sdl2
Conflicts With  : None
Replaces        : None
Installed Size  : 3.11 MiB
Packager        : David Runge &amp;lt;dvzrv@archlinux.org&amp;gt;
Build Date      : So 21 Mai 2023 15:17:29
Install Date    : Di 23 Mai 2023 22:53:42
Install Reason  : Installed as a dependency for another package
Install Script  : Yes
Validated By    : Signature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;But first we install &lt;code&gt;pipewire-audio&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pacman -S pipewire-audio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we remove &lt;code&gt;pulseaudio-alsa&lt;/code&gt; and install &lt;code&gt;pipewire-alsa&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pacman -Rs pulseaudio-alsa
$ sudo pacman -S pipewire-alsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we install &lt;code&gt;pipewire-pulse&lt;/code&gt; (which will remove &lt;code&gt;pulseaudio&lt;/code&gt; and &lt;code&gt;pulseaudio-bluetooth&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pacman -S pipewire-pulse
resolving dependencies...
looking for conflicting packages...
:: pipewire-pulse and pulseaudio are in conflict. Remove pulseaudio? [y/N] y
:: pipewire-pulse and pulseaudio-bluetooth are in conflict. Remove pulseaudio-bluetooth? [y/N] y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When trying to stop the (now uninstalled) pulseaudio service to start pipewire
I got an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;Failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loaded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since I didn't want to invest too much time (maybe I should just have stopped
it before uninstalling it?) I just logged out and back in to restart my
session.&lt;sup id="fnref:session"&gt;&lt;a class="footnote-ref" href="#fn:session"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;Problems&lt;/h2&gt;
&lt;p&gt;After restarting the session pulseaudio clients seemed to be broken:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pactl&lt;span class="w"&gt; &lt;/span&gt;stat
Connection&lt;span class="w"&gt; &lt;/span&gt;failure:&lt;span class="w"&gt; &lt;/span&gt;Connection&lt;span class="w"&gt; &lt;/span&gt;refused
pa_context_connect&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;failed:&lt;span class="w"&gt; &lt;/span&gt;Connection&lt;span class="w"&gt; &lt;/span&gt;refused
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It turns out that for some reason the pipewire-pulse.socket listener wasn't
active:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;status&lt;span class="w"&gt; &lt;/span&gt;pipewire-pulse.socket
○&lt;span class="w"&gt; &lt;/span&gt;pipewire-pulse.socket&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;PipeWire&lt;span class="w"&gt; &lt;/span&gt;PulseAudio
&lt;span class="w"&gt;     &lt;/span&gt;Loaded:&lt;span class="w"&gt; &lt;/span&gt;loaded&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;/usr/lib/systemd/user/pipewire-pulse.socket&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;enabled&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;preset:&lt;span class="w"&gt; &lt;/span&gt;enabled&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;Active:&lt;span class="w"&gt; &lt;/span&gt;inactive&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;dead&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;Triggers:&lt;span class="w"&gt; &lt;/span&gt;●&lt;span class="w"&gt; &lt;/span&gt;pipewire-pulse.service
&lt;span class="w"&gt;     &lt;/span&gt;Listen:&lt;span class="w"&gt; &lt;/span&gt;/run/user/1000/pulse/native&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Stream&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Starting it is as easy as &lt;code&gt;systemctl --user start pipewire-pulse.socket&lt;/code&gt; and
now &lt;code&gt;pactl&lt;/code&gt; shows some output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pactl&lt;span class="w"&gt; &lt;/span&gt;stat
Currently&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;use:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blocks&lt;span class="w"&gt; &lt;/span&gt;containing&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.0&lt;span class="w"&gt; &lt;/span&gt;KiB&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;total.
Allocated&lt;span class="w"&gt; &lt;/span&gt;during&lt;span class="w"&gt; &lt;/span&gt;whole&lt;span class="w"&gt; &lt;/span&gt;lifetime:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blocks&lt;span class="w"&gt; &lt;/span&gt;containing&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.0&lt;span class="w"&gt; &lt;/span&gt;KiB&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;total.
Sample&lt;span class="w"&gt; &lt;/span&gt;cache&lt;span class="w"&gt; &lt;/span&gt;size:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also pavucontrol now shows me LDAC, AAC, and SBC-XQ in addition to just SBC:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pavucontrol showing more codecs" src="https://blog.rnstlr.ch/images/pipewire/pavucontrol-bluetooth-profiles.png" width="100%"&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:session"&gt;
&lt;p&gt;I should probably have used &lt;code&gt;systemctl --user stop pulseaudio.service&lt;/code&gt;, since these are user units.&amp;#160;&lt;a class="footnote-backref" href="#fnref:session" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="2023"></category><category term="PipeWire"></category><category term="PulseAudio"></category></entry><entry><title>Limiting process RAM usage with systemd-run</title><link href="https://blog.rnstlr.ch/limiting-process-ram-usage-with-systemd-run.html" rel="alternate"></link><published>2023-01-17T00:00:00+01:00</published><updated>2023-01-17T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-01-17:/limiting-process-ram-usage-with-systemd-run.html</id><summary type="html">&lt;p class="first last"&gt;Limiting RAM usage of a build process with systemd-run&lt;/p&gt;
</summary><content type="html">&lt;p&gt;While building the Linux kernel with &lt;a class="reference external" href="/building-an-out-of-tree-rust-kernel-module-part-two.html"&gt;Rust support for ArchLinux&lt;/a&gt;, I ran into a
problem where sphinx-build started using excessive amounts of RAM while
building the HTML documentation.&lt;/p&gt;
&lt;p&gt;This caused the system to become unresponsive before the OOM killer decided to
just kill my user session.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 100%"&gt;
&lt;a class="reference external image-reference" href="https://blog.rnstlr.ch/images/limiting_ram_usage/sphinx-build-excessive-ram-usage.png"&gt;&lt;img alt="htop just shortly before killing the build process" src="https://blog.rnstlr.ch/images/limiting_ram_usage/sphinx-build-excessive-ram-usage.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;htop output just before killing the build process&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Looking for a way to not have the OOM killer kill my session, but kill the
build process before it uses up all my available RAM, I found
&lt;a class="reference external" href="https://unix.stackexchange.com/a/536046"&gt;https://unix.stackexchange.com/a/536046&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, spawning the build with the following command will kill the build process
as soon as it uses more than 20GB of RAM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;systemd-run&lt;span class="w"&gt; &lt;/span&gt;--scope&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;MemoryMax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;20G&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;makepkg
&lt;span class="go"&gt;Running scope as unit: run-r44087c0ea5d445fda135dc0db42b36ab.scope&lt;/span&gt;
&lt;span class="go"&gt;[1]    426653 killed     systemd-run --scope -p MemoryMax=20G --user makepkg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="2023"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="systemd"></category><category term="kernel"></category></entry><entry><title>Building an out-of-tree Rust Kernel Module Part Two</title><link href="https://blog.rnstlr.ch/building-an-out-of-tree-rust-kernel-module-part-two.html" rel="alternate"></link><published>2023-01-15T00:00:00+01:00</published><updated>2023-01-15T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-01-15:/building-an-out-of-tree-rust-kernel-module-part-two.html</id><summary type="html">&lt;p&gt;Trying to build a hello world out-of-tree Rust kernel module for Linux 6.1. Part two.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last &lt;a href="/building-an-out-of-tree-rust-kernel-module.html"&gt;blog post&lt;/a&gt;, I
tried to build an out-of-tree kernel module in Rust for the 6.1 stock ArchLinux kernel.&lt;/p&gt;
&lt;p&gt;During this process I noticed that while &lt;code&gt;CONFIG_HAVE_RUST=y&lt;/code&gt; is set in the
&lt;a href="https://github.com/archlinux/svntogit-packages/blob/706494f4555dca158c9f02932717550e7b66b534/trunk/config"&gt;ArchLinux kernel config&lt;/a&gt;,
Rust support get's silently disabled since conflicting options are set.&lt;/p&gt;
&lt;h2&gt;Building our own ArchLinux kernel&lt;/h2&gt;
&lt;p&gt;So I went ahead and started to build my own kernel with a custom config:
&lt;a href="https://aur.archlinux.org/packages/linux-rust"&gt;https://aur.archlinux.org/packages/linux-rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I based it off the official ArchLinux kernel package, disabled the conflicting
options, ran &lt;code&gt;make menuconfig&lt;/code&gt; and enabled Rust support.&lt;/p&gt;
&lt;p&gt;A few iterations on the configuration and &lt;code&gt;PKGBUILD&lt;/code&gt; later, I had a successfully
building kernel with Rust support enabled!&lt;/p&gt;
&lt;p&gt;After installing the custom kernel and booting into it, we should finally be
ready!&lt;/p&gt;
&lt;h2&gt;Building the out-of-tree module&lt;/h2&gt;
&lt;p&gt;So back to the
&lt;a href="https://github.com/rnestler/rust-out-of-tree-module/tree/fix-build-for-linux-6.1"&gt;Rust-for-Linux/rust-out-of-tree-module&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;KDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/projects/archpkg/linux-rust/src/archlinux-linux&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;LLVM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;insmod&lt;span class="w"&gt; &lt;/span&gt;rust_out_of_tree.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And we see in the &lt;code&gt;dmesg&lt;/code&gt; output that the module successfully loaded! 🎉&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;451.297415&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;taints&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;451.297460&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;verification&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tainting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;451.297724&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Rust&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we unload it with &lt;code&gt;sudo rmmod rust_out_of_tree.ko&lt;/code&gt; we get the following in
&lt;code&gt;dmesg&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[  461.206748] rust_out_of_tree: My numbers are [72, 108, 200]&lt;/span&gt;
&lt;span class="na"&gt;[  461.206753] rust_out_of_tree&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Rust out-of-tree sample (exit)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Packing the correct metadata&lt;/h2&gt;
&lt;p&gt;You may have noticed, that we passed
&lt;code&gt;KDIR=~/projects/archpkg/linux-rust/src/archlinux-linux&lt;/code&gt; to the make call. This
is because the build requires the Rust metadata which is generated during the
kernel build. To make it easier for other people installing the &lt;code&gt;linux-rust&lt;/code&gt;
kernel, we should package it in &lt;code&gt;linux-rust-headers&lt;/code&gt; (&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;If we don't pass the &lt;code&gt;KDIR&lt;/code&gt; option, we get the following build error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error: target file &amp;quot;./rust/target.json&amp;quot; does not exist

make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So let's add this file to the package and try to rebuild:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0463]: can&amp;#39;t find crate for `core`
  |
  = note: the `target` target may not be installed
  = help: consider downloading the target with `rustup target add target`
  = help: consider building the standard library from source with `cargo build -Zbuild-std`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Rest of the terminal output ...&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;error[E0463]: can&amp;#39;t find crate for `compiler_builtins`

error[E0463]: can&amp;#39;t find crate for `kernel`
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:5:5
  |
5 | use kernel::prelude::*;
  |     ^^^^^^ can&amp;#39;t find crate

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `module` in this scope
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
  |
7 | module! {
  | ^^^^^^

error[E0463]: can&amp;#39;t find crate for `kernel`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:19:6
   |
19 | impl kernel::Module for RustOutOfTree {
   |      ^^^^^^ can&amp;#39;t find crate

error[E0433]: failed to resolve: use of undeclared type `Vec`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:23:27
   |
23 |         let mut numbers = Vec::new();
   |                           ^^^ use of undeclared type `Vec`

error[E0412]: cannot find type `Vec` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:16:14
   |
16 |     numbers: Vec&amp;lt;i32&amp;gt;,
   |              ^^^ not found in this scope

error[E0412]: cannot find type `ThisModule` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:31
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                               ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Result` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:46
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                                              ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Drop` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:32:6
   |
32 | impl Drop for RustOutOfTree {
   |      ^^^^ not found in this scope

error[E0635]: unknown feature `core_ffi_c`
 --&amp;gt; &amp;lt;crate attribute&amp;gt;:1:9
  |
1 | feature(core_ffi_c)
  |         ^^^^^^^^^^

error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:28:9
   |
28 |         Ok(RustOutOfTree { numbers })
   |         ^^ not found in this scope

error: aborting due to 15 previous errors

Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0463, E0635.
For more information about an error, try `rustc --explain E0405`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;Ok, so the build system is unable to find all the required crates that got
built as part of the kernel.&lt;/p&gt;
&lt;p&gt;So to keep it simple, we just add everything form the &lt;code&gt;rust/&lt;/code&gt; folder into the
package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0514]: found crate `core` compiled by an incompatible version of rustc
  |
  = note: the following crate versions were found:
          crate `core` compiled by rustc 1.62.0 (a8314ef7d 2022-06-27): /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libcore.rmeta
  = help: please recompile that crate using this compiler (rustc 1.66.0 (69f9c33d7 2022-12-12)) (consider running `cargo clean` first)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Rest of the terminal output ...&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;error[E0514]: found crate `kernel` compiled by an incompatible version of rustc
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:5:5
  |
5 | use kernel::prelude::*;
  |     ^^^^^^
  |
  = note: the following crate versions were found:
          crate `kernel` compiled by rustc 1.62.0 (a8314ef7d 2022-06-27): /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta
  = help: please recompile that crate using this compiler (rustc 1.66.0 (69f9c33d7 2022-12-12)) (consider running `cargo clean` first)

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `module` in this scope
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
  |
7 | module! {
  | ^^^^^^

error[E0514]: found crate `kernel` compiled by an incompatible version of rustc
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:19:6
   |
19 | impl kernel::Module for RustOutOfTree {
   |      ^^^^^^
   |
   = note: the following crate versions were found:
           crate `kernel` compiled by rustc 1.62.0 (a8314ef7d 2022-06-27): /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta
   = help: please recompile that crate using this compiler (rustc 1.66.0 (69f9c33d7 2022-12-12)) (consider running `cargo clean` first)

error[E0433]: failed to resolve: use of undeclared type `Vec`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:23:27
   |
23 |         let mut numbers = Vec::new();
   |                           ^^^ use of undeclared type `Vec`

error[E0412]: cannot find type `Vec` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:16:14
   |
16 |     numbers: Vec&amp;lt;i32&amp;gt;,
   |              ^^^ not found in this scope

error[E0412]: cannot find type `ThisModule` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:31
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                               ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Result` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:46
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                                              ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Drop` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:32:6
   |
32 | impl Drop for RustOutOfTree {
   |      ^^^^ not found in this scope

error[E0635]: unknown feature `core_ffi_c`
 --&amp;gt; &amp;lt;crate attribute&amp;gt;:1:9
  |
1 | feature(core_ffi_c)
  |         ^^^^^^^^^^

error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:28:9
   |
28 |         Ok(RustOutOfTree { numbers })
   |         ^^ not found in this scope

error: aborting due to 14 previous errors

Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0635.
For more information about an error, try `rustc --explain E0405`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;Alright, so it finds the crates, but the &lt;code&gt;rustc&lt;/code&gt; versions do not match.
Apparently, the build is executed in
&lt;code&gt;/usr/lib/modules/6.1.5-arch2-1-rust/build&lt;/code&gt;, so we need to tell &lt;code&gt;rustup&lt;/code&gt; that we
want the 1.62.0 toolchain for that folder.&lt;/p&gt;
&lt;p&gt;For that, we just add the &lt;code&gt;rust-toolchain&lt;/code&gt; to the package as well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make  LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0461]: couldn&amp;#39;t find crate `core` with expected target triple target-12809083303779448358
  |
  = note: the following crate versions were found:
          crate `core`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libcore.rmeta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Rest of the terminal output ...&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;error[E0461]: couldn&amp;#39;t find crate `compiler_builtins` with expected target triple target-12809083303779448358
  |
  = note: the following crate versions were found:
          crate `compiler_builtins`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libcompiler_builtins.rmeta

error[E0461]: couldn&amp;#39;t find crate `kernel` with expected target triple target-12809083303779448358
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:5:5
  |
5 | use kernel::prelude::*;
  |     ^^^^^^
  |
  = note: the following crate versions were found:
          crate `kernel`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `module` in this scope
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
  |
7 | module! {
  | ^^^^^^

error[E0461]: couldn&amp;#39;t find crate `kernel` with expected target triple target-12809083303779448358
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:19:6
   |
19 | impl kernel::Module for RustOutOfTree {
   |      ^^^^^^
   |
   = note: the following crate versions were found:
           crate `kernel`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta

error[E0433]: failed to resolve: use of undeclared type `Vec`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:23:27
   |
23 |         let mut numbers = Vec::new();
   |                           ^^^ use of undeclared type `Vec`

error[E0412]: cannot find type `Vec` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:16:14
   |
16 |     numbers: Vec&amp;lt;i32&amp;gt;,
   |              ^^^ not found in this scope

error[E0412]: cannot find type `ThisModule` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:31
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                               ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Result` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:46
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                                              ^^^^^^ not found in this scope

error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:28:9
   |
28 |         Ok(RustOutOfTree { numbers })
   |         ^^ not found in this scope

error[E0405]: cannot find trait `Drop` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:32:6
   |
32 | impl Drop for RustOutOfTree {
   |      ^^^^ not found in this scope

error[E0635]: unknown feature `core_ffi_c`
 --&amp;gt; &amp;lt;crate attribute&amp;gt;:1:9
  |
1 | feature(core_ffi_c)
  |         ^^^^^^^^^^

error: aborting due to 15 previous errors

Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0635.
For more information about an error, try `rustc --explain E0405`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;I didn't really understand what the strange target triple meant. Usually a
target triple looks something like &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; (&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;). But in
our case we are using a &lt;code&gt;target.json&lt;/code&gt; to define the target, so I've no clue
where the difference comes from, since we are using the same JSON file.&lt;/p&gt;
&lt;h2&gt;Summing it up&lt;/h2&gt;
&lt;p&gt;While we managed to compile and run our out-of-tree kernel module in Rust, we
couldn't get the build metadata packaged in a way to do it without a local
build of the kernel.&lt;/p&gt;
&lt;p&gt;Well, let's see if anything changes with the 6.2 Linux kernel which should get
released in February. In the meantime, this kernel provides an easy way to start
playing with Rust kernel modules on ArchLinux.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The name of the package may be a bit misleading, since the package not
  only bundles the headers but also build scripts and other metadata required
  to build modules.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;See also &lt;a href="https://doc.rust-lang.org/rustc/targets/index.html"&gt;https://doc.rust-lang.org/rustc/targets/index.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="2023"></category><category term="rust"></category><category term="kernel"></category><category term="Linux"></category><category term="ArchLinux"></category></entry></feed>