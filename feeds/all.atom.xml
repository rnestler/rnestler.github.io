<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.rnstlr.ch</title><link href="https://blog.rnstlr.ch/" rel="alternate"></link><link href="https://blog.rnstlr.ch/feeds/all.atom.xml" rel="self"></link><id>https://blog.rnstlr.ch/</id><updated>2024-07-31T00:00:00+02:00</updated><entry><title>Switching from wpa_supplicant to iwd on my Raspberry Pi</title><link href="https://blog.rnstlr.ch/switching-from-wpa_supplicant-to-iwd-on-my-raspberry-pi.html" rel="alternate"></link><published>2024-07-31T00:00:00+02:00</published><updated>2024-07-31T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2024-07-31:/switching-from-wpa_supplicant-to-iwd-on-my-raspberry-pi.html</id><summary type="html">&lt;p&gt;Switching from the broken &lt;code&gt;wpa_supplicant&lt;/code&gt; to &lt;code&gt;iwd&lt;/code&gt; for my Kodi installation on a Raspberry Pi 3&lt;/p&gt;</summary><content type="html">&lt;p&gt;After upgrading my archlinuxarm based Kodi media center as usual with just
running &lt;code&gt;pacman -Syu&lt;/code&gt; over ssh I didn't suspect anything. But on the next
reboot the system blocked with waiting for wlan0 to get online.&lt;/p&gt;
&lt;p&gt;At first I suspected the kernel or linux-firmware upgrade, since a quick search
found that this caused trouble in the past: &lt;a href="https://archlinuxarm.org/forum/viewtopic.php?t=15833"&gt;firmware update breaks wifi on
Rpi3&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Downgrading &lt;code&gt;linux-firmware&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Since remote connection was broken I sat with the keyboard in front of the TV
screen and tried to downgrade the &lt;code&gt;linux-firmware&lt;/code&gt; package from the pkg cache:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pacman&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pacman&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;firmware&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;20240610.9&lt;/span&gt;&lt;span class="n"&gt;c10a208&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;My hope for this easy fix were crushed, when the network still didn't start
correctly after the next reboot. So I started to look into system logs with
&lt;code&gt;sudo systemctl status --all&lt;/code&gt; and realized that &lt;code&gt;wpa_supplicant@wlan0.service&lt;/code&gt;
couldn't start.&lt;/p&gt;
&lt;h1&gt;Investigating Further&lt;/h1&gt;
&lt;p&gt;Searching again I found &lt;a href="https://bbs.archlinux.org/viewtopic.php?id=298025"&gt;https://bbs.archlinux.org/viewtopic.php?id=298025&lt;/a&gt;
from 2024-07-25 indicating that WiFi on Broadcom devices seems broken after the
upgrade to &lt;code&gt;wpa_supplicant&lt;/code&gt; 2.11.&lt;/p&gt;
&lt;p&gt;Looking again in &lt;code&gt;/var/cache/pacman/pkg/&lt;/code&gt; I realized that the old
&lt;code&gt;wpa_supplicant&lt;/code&gt; package was missing. Probably since it 2.10 was the current
version when I installed the whole system.&lt;/p&gt;
&lt;p&gt;Moving forward I decided to switch to &lt;code&gt;iwd&lt;/code&gt;, which seems better maintained and
I also use it on my Laptop.&lt;/p&gt;
&lt;h1&gt;Switching to &lt;code&gt;iwd&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;So I headed to &lt;a href="https://archlinuxarm.org/packages/armv7h/iwd"&gt;https://archlinuxarm.org/packages/armv7h/iwd&lt;/a&gt;, downloaded the
package and its dependency &lt;code&gt;ell&lt;/code&gt; manually, copied it together with the WiFi
configuration from my laptop from &lt;code&gt;/var/lib/iwd/&lt;/code&gt; to a USB flash drive and
installed them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mount /dev/sda1 /mnt
sudo pacman -U /mnt/iwd-2.19-1-armv7h.pkg.tar.xz /mnt/ell-0.67-1-armv7h.pkg.tar.xz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then I replaced &lt;code&gt;wpa_supplicant&lt;/code&gt; with &lt;code&gt;iwd&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wpa_supplicant&lt;/span&gt;&lt;span class="nv"&gt;@wlan0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wpa_supplicant&lt;/span&gt;&lt;span class="nv"&gt;@wlan0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pacman&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wpa_supplicant&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;iwd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;iwd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And 🎉 working WiFi again on my Kodi system!&lt;/p&gt;</content><category term="2024"></category><category term="Raspberry Pi"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="ARM"></category><category term="Kodi"></category></entry><entry><title>YouTube plugin for Kodi on the Raspberry Pi 3</title><link href="https://blog.rnstlr.ch/youtube-plugin-for-kodi-on-the-raspberry-pi-3.html" rel="alternate"></link><published>2024-04-11T00:00:00+02:00</published><updated>2024-04-11T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2024-04-11:/youtube-plugin-for-kodi-on-the-raspberry-pi-3.html</id><summary type="html">&lt;p&gt;Getting the YouTube plugin for Kodi to work on the Raspberry Pi 3&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last year I installed Kodi on my RaspberryPi 3 to use as a media system. While
it runs quite nicely to stream stuff from my NAS with remote controlling from
&lt;a href="https://f-droid.org/packages/org.xbmc.kore/"&gt;Kore&lt;/a&gt;, every now and then I
wanted to play something from YouTube, which didn't work.&lt;/p&gt;
&lt;p&gt;Installing the YouTube plugin always failed with Kodi being unable to install a
dependency called &lt;code&gt;inputstream-adaptive&lt;/code&gt;. Looking at
&lt;a href="https://kodi.tv/addons/omega/inputstream.adaptive/"&gt;https://kodi.tv/addons/omega/inputstream.adaptive/&lt;/a&gt;` it seems, that the plugin
is only available for Windows, OSX and Android.&lt;/p&gt;
&lt;p&gt;Looking at the ArchLinuxARM forums I found
&lt;a href="https://archlinuxarm.org/forum/viewtopic.php?f=60&amp;amp;t=13189&amp;amp;p=59774&amp;amp;hilit=kodi+inputstream#p59774"&gt;https://archlinuxarm.org/forum/viewtopic.php?f=60&amp;amp;t=13189&amp;amp;p=59774&amp;amp;hilit=kodi+inputstream#p59774&lt;/a&gt;
which shows that people built the plugin themselves to get other plugins to
work.&lt;/p&gt;
&lt;h1&gt;Installing from AUR&lt;/h1&gt;
&lt;p&gt;Luckily there is a PKGBUILD available on the AUR:
&lt;a href="https://aur.archlinux.org/packages/kodi-addon-inputstream-adaptive-git"&gt;https://aur.archlinux.org/packages/kodi-addon-inputstream-adaptive-git&lt;/a&gt;. Since
I didn't want to bother with cross-compiling for the Pi I thought I'll just
compile it on the Pi itself: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;base-devel&lt;span class="w"&gt; &lt;/span&gt;git
git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://aur.archlinux.org/kodi-addon-inputstream-adaptive-git.git
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;kodi-addon-inputstream-adaptive-git/
makepkg&lt;span class="w"&gt; &lt;/span&gt;-s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Trouble&lt;/h1&gt;
&lt;p&gt;The first error I ran into was that the build wants to use an unsupported flag
for the compiler:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;==&amp;gt; Starting build()...
-- The C compiler identification is GNU 12.1.0
-- The CXX compiler identification is GNU 12.1.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc - broken
CMake Error at /usr/share/cmake/Modules/CMakeTestCCompiler.cmake:67 (message):
  The C compiler

    &amp;quot;/usr/bin/cc&amp;quot;

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: &amp;#39;/home/alarm/archpkg/kodi-addon-inputstream-adaptive-git/src/kodi-addon-inputstream-adaptive-git/kodi-addon-inputstream-adaptive-git-build/CMakeFiles/CMakeScratch/TryCompile-SzNkS5&amp;#39;

    Run Build Command(s): /usr/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_def07/fast
    /usr/bin/make  -f CMakeFiles/cmTC_def07.dir/build.make CMakeFiles/cmTC_def07.dir/build
    make[1]: Entering directory &amp;#39;/home/alarm/archpkg/kodi-addon-inputstream-adaptive-git/src/kodi-addon-inputstream-adaptive-git/kodi-addon-inputstream-adaptive-git-build/CMakeFiles/CMakeScratch/TryCompile-SzNkS5&amp;#39;
    Building C object CMakeFiles/cmTC_def07.dir/testCCompiler.c.o
    /usr/bin/cc   -march=armv7-a -mfloat-abi=hard -mfpu=neon -O2 -pipe -fstack-protector-strong -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=3 -Wformat -Werror=format-security         -fstack-clash-protection         -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer  -o CMakeFiles/cmTC_def07.dir/testCCompiler.c.o -c /home/alarm/archpkg/kodi-addon-inputstream-adaptive-git/src/kodi-addon-inputstream-adaptive-git/kodi-addon-inputstream-adaptive-git-build/CMakeFiles/CMakeScratch/TryCompile-SzNkS5/testCCompiler.c
    cc: error: unrecognized command-line option &amp;#39;-mno-omit-leaf-frame-pointer&amp;#39;; did you mean &amp;#39;-fno-omit-frame-pointer&amp;#39;?
    make[1]: *** [CMakeFiles/cmTC_def07.dir/build.make:78: CMakeFiles/cmTC_def07.dir/testCCompiler.c.o] Error 1
    make[1]: Leaving directory &amp;#39;/home/alarm/archpkg/kodi-addon-inputstream-adaptive-git/src/kodi-addon-inputstream-adaptive-git/kodi-addon-inputstream-adaptive-git-build/CMakeFiles/CMakeScratch/TryCompile-SzNkS5&amp;#39;
    make: *** [Makefile:127: cmTC_def07/fast] Error 2


  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:5 (project)


-- Configuring incomplete, errors occurred!
==&amp;gt; ERROR: A failure occurred in build().
    Aborting...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The culprit was &lt;code&gt;cc: error: unrecognized command-line option '-mno-omit-leaf-frame-pointer'; did you mean '-fno-omit-frame-pointer'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It turns out that it was due to a wrong default configuration in
&lt;code&gt;/etc/makepkg.conf&lt;/code&gt;. This issue was already reported twice in the forums, so I
didn't bother to report it as well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://archlinuxarm.org/forum/viewtopic.php?f=15&amp;amp;t=16837&amp;amp;p=72357"&gt;https://archlinuxarm.org/forum/viewtopic.php?f=15&amp;amp;t=16837&amp;amp;p=72357&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://archlinuxarm.org/forum/viewtopic.php?f=57&amp;amp;t=16830&amp;amp;p=72344"&gt;https://archlinuxarm.org/forum/viewtopic.php?f=57&amp;amp;t=16830&amp;amp;p=72344&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Removing &lt;code&gt;-mno-omit-leaf-frame-pointer&lt;/code&gt; from &lt;code&gt;/etc/makepkg.conf&lt;/code&gt; got me a bit
further: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
  Could NOT find RAPIDJSON (missing: RAPIDJSON_INCLUDES)
Call Stack (most recent call first):
  /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE)
  FindRAPIDJSON.cmake:19 (find_package_handle_standard_args)
  CMakeLists.txt:18 (find_package)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was just a missing dependency in the PKGBUILD, which I could just install
with &lt;code&gt;sudo pacman -S rapidjson&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Success&lt;/h1&gt;
&lt;p&gt;After the two bumps the build finished without further problems and I could
install the addon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-U&lt;span class="w"&gt; &lt;/span&gt;kodi-addon-inputstream-adaptive-git-21.4.4.Omega.r9.g109c0e7a-1-armv7h.pkg.tar.xz
sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;restart&lt;span class="w"&gt; &lt;/span&gt;kodi.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Installing the YouTube addon" src="https://blog.rnstlr.ch/images/kodi/kodi-youtube-addon-install.png" width="100%"&gt;&lt;/p&gt;</content><category term="2024"></category><category term="Raspberry Pi"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="ARM"></category><category term="Kodi"></category></entry><entry><title>Setting up Home Assistant on the Raspberry Pi 3</title><link href="https://blog.rnstlr.ch/setting-up-home-assistant-on-the-raspberry-pi-3.html" rel="alternate"></link><published>2024-01-06T00:00:00+01:00</published><updated>2024-01-06T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2024-01-06:/setting-up-home-assistant-on-the-raspberry-pi-3.html</id><summary type="html">&lt;p&gt;Setting up Home Assistant to automate stuff at home&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;From my time working at Sensirion I still have a lot of sensors like the &lt;a href="https://www.sensirion.com/products/catalog/SCD4x-CO2-Gadget"&gt;SCD4x
CO2 Gadget&lt;/a&gt; and
&lt;a href="https://sensirion.com/de/produkte/katalog/SHT4x-Smart-Gadget"&gt;SHT4x Smart
Gadget&lt;/a&gt; running.
Also I decided that I want to use smart plugs to power on my coffee machine in
the morning.&lt;/p&gt;
&lt;p&gt;While one can see the sensor data perfectly fine with the &lt;a href="https://play.google.com/store/apps/details?id=com.sensirion.myam"&gt;Sensirion MyAmbience
App&lt;/a&gt; and also
use the specific apps for the smart plugs, I wanted a bit more integration for
everything and thus decided to try out &lt;a href="https://www.home-assistant.io"&gt;Home
Assistant&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Installing Home Assistant&lt;/h1&gt;
&lt;p&gt;Installing Home Assistant on a Raspberry Pi is very easy: Just follow the guide
at &lt;a href="https://www.home-assistant.io/installation/raspberrypi"&gt;https://www.home-assistant.io/installation/raspberrypi&lt;/a&gt;. Since I didn't
want to use the GUI tools to flash the SD card I used the command line
directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;https://github.com/home-assistant/operating-system/releases/download/11.3/haos_rpi3-64-11.3.img.xz
$&lt;span class="w"&gt; &lt;/span&gt;xz&lt;span class="w"&gt; &lt;/span&gt;--decompress&lt;span class="w"&gt; &lt;/span&gt;--stdout&lt;span class="w"&gt; &lt;/span&gt;haos_rpi3-64-11.3.img.xz&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;dd&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sda&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;64k&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;oflag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dsync&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;progress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After that I inserted the SD card into the Raspberry Pi and plugged in power.&lt;/p&gt;
&lt;h1&gt;Setting it up&lt;/h1&gt;
&lt;p&gt;I mostly followed the guide at
&lt;a href="https://www.home-assistant.io/getting-started/onboarding/"&gt;https://www.home-assistant.io/getting-started/onboarding/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When connecting to &lt;a href="http://homeassistant.local:8123/"&gt;http://homeassistant.local:8123/&lt;/a&gt; I was greeted by the
setup screen:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Home Assistant Setup Screen" src="https://blog.rnstlr.ch/images/home_assistant/preparing-home-assistant.png"&gt;&lt;/p&gt;
&lt;p&gt;This setup screen seemed stuck at the following step in the logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;supervisor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;completed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Full logs&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;s6-rc: info: service s6rc-oneshot-runner: starting
s6-rc: info: service s6rc-oneshot-runner successfully started
s6-rc: info: service fix-attrs: starting
s6-rc: info: service fix-attrs successfully started
s6-rc: info: service legacy-cont-init: starting
cont-init: info: running /etc/cont-init.d/udev.sh
INFO: Using udev information from host
cont-init: info: /etc/cont-init.d/udev.sh exited 0
s6-rc: info: service legacy-cont-init successfully started
s6-rc: info: service legacy-services: starting
services-up: info: copying legacy longrun supervisor (no readiness notification)
services-up: info: copying legacy longrun watchdog (no readiness notification)
s6-rc: info: service legacy-services successfully started
INFO: Starting local supervisor watchdog...
[__main__] Initializing Supervisor setup
[supervisor.docker.network] Can&amp;#39;t find Supervisor network, creating a new network
[supervisor.bootstrap] Seting up coresys for machine: raspberrypi3-64
[supervisor.docker.supervisor] Attaching to Supervisor ghcr.io/home-assistant/aarch64-hassio-supervisor with version 2023.12.0
[supervisor.docker.supervisor] Connecting Supervisor to hassio-network
[supervisor.resolution.evaluate] Starting system evaluation with state initialize
[supervisor.resolution.evaluate] System evaluation complete
[__main__] Setting up Supervisor
[supervisor.api] Starting API on 172.30.32.2
[supervisor.hardware.monitor] Started Supervisor hardware monitor
[supervisor.dbus.manager] Connected to system D-Bus.
[supervisor.dbus.agent] Load dbus interface io.hass.os
[supervisor.dbus.hostname] Load dbus interface org.freedesktop.hostname1
[supervisor.dbus.logind] Load dbus interface org.freedesktop.login1
[supervisor.dbus.network] Load dbus interface org.freedesktop.NetworkManager
[supervisor.dbus.rauc] Load dbus interface de.pengutronix.rauc
[supervisor.dbus.resolved] Load dbus interface org.freedesktop.resolve1
[supervisor.dbus.systemd] Load dbus interface org.freedesktop.systemd1
[supervisor.dbus.timedate] Load dbus interface org.freedesktop.timedate1
[supervisor.host.services] Updating service information
[supervisor.host.sound] Updating PulseAudio information
[supervisor.host.sound] Can&amp;#39;t update PulseAudio data: Failed to connect to pulseaudio server
[supervisor.host.network] Updating local network information
[supervisor.host.apparmor] Loading AppArmor Profiles: {&amp;#39;hassio-supervisor&amp;#39;}
[supervisor.docker.monitor] Started docker events monitor
[supervisor.updater] Fetching update data from https://version.home-assistant.io/stable.json
[supervisor.docker.interface] Found ghcr.io/home-assistant/aarch64-hassio-cli versions: []
[supervisor.docker.interface] Attaching to ghcr.io/home-assistant/aarch64-hassio-cli with version 2023.11.0
[supervisor.plugins.cli] Starting CLI plugin
[supervisor.docker.cli] Starting CLI ghcr.io/home-assistant/aarch64-hassio-cli with version 2023.11.0 - 172.30.32.5
[supervisor.docker.interface] Found ghcr.io/home-assistant/aarch64-hassio-dns versions: []
[supervisor.docker.interface] Attaching to ghcr.io/home-assistant/aarch64-hassio-dns with version 2023.06.2
[supervisor.plugins.dns] Starting CoreDNS plugin
[supervisor.docker.dns] Starting DNS ghcr.io/home-assistant/aarch64-hassio-dns with version 2023.06.2 - 172.30.32.3
[supervisor.plugins.dns] Updated /etc/resolv.conf
[supervisor.docker.interface] Found ghcr.io/home-assistant/aarch64-hassio-audio versions: []
[supervisor.docker.interface] Attaching to ghcr.io/home-assistant/aarch64-hassio-audio with version 2023.12.0
[supervisor.plugins.audio] Starting Audio plugin
[supervisor.docker.audio] Starting Audio ghcr.io/home-assistant/aarch64-hassio-audio with version 2023.12.0 - 172.30.32.4
[supervisor.docker.interface] Found ghcr.io/home-assistant/aarch64-hassio-observer versions: []
[supervisor.docker.interface] Attaching to ghcr.io/home-assistant/aarch64-hassio-observer with version 2023.06.0
[supervisor.plugins.observer] Starting observer plugin
[supervisor.docker.observer] Starting Observer ghcr.io/home-assistant/aarch64-hassio-observer with version 2023.06.0 - 172.30.32.6
[supervisor.docker.interface] Found ghcr.io/home-assistant/aarch64-hassio-multicast versions: []
[supervisor.docker.interface] Attaching to ghcr.io/home-assistant/aarch64-hassio-multicast with version 2023.06.2
[supervisor.plugins.multicast] Starting Multicast plugin
[supervisor.docker.multicast] Starting Multicast ghcr.io/home-assistant/aarch64-hassio-multicast with version 2023.06.2 - Host
[supervisor.homeassistant.secrets] Loaded 0 Home Assistant secrets
[supervisor.docker.interface] No version found for ghcr.io/home-assistant/raspberrypi3-64-homeassistant
[supervisor.homeassistant.core] No Home Assistant Docker image ghcr.io/home-assistant/raspberrypi3-64-homeassistant found.
[supervisor.docker.interface] Attaching to ghcr.io/home-assistant/raspberrypi3-64-homeassistant with version landingpage
[supervisor.homeassistant.core] Using preinstalled landingpage
[supervisor.homeassistant.core] Starting HomeAssistant landingpage
[supervisor.homeassistant.module] Update pulse/client.config: /data/tmp/homeassistant_pulse
[supervisor.docker.homeassistant] Starting Home Assistant ghcr.io/home-assistant/raspberrypi3-64-homeassistant with version landingpage
[supervisor.os.manager] Detect Home Assistant Operating System 11.3 / BootSlot A
[supervisor.store.git] Cloning add-on https://github.com/esphome/home-assistant-addon repository
[supervisor.store.git] Cloning add-on https://github.com/hassio-addons/repository repository
[supervisor.store.git] Cloning add-on https://github.com/home-assistant/addons repository
[supervisor.store] Loading add-ons from store: 72 all - 72 new - 0 remove
[supervisor.addons.manager] Found 0 installed add-ons
[supervisor.backups.manager] Found 0 backup files
[supervisor.discovery] Loaded 0 messages
[supervisor.ingress] Loaded 0 ingress sessions
[supervisor.resolution.check] Starting system checks with state setup
[supervisor.resolution.check] System checks complete
[supervisor.resolution.evaluate] Starting system evaluation with state setup
[supervisor.resolution.evaluate] System evaluation complete
[supervisor.jobs] &amp;#39;ResolutionFixup.run_autofix&amp;#39; blocked from execution, system is not running - setup
[supervisor.resolution.evaluate] Starting system evaluation with state setup
[supervisor.resolution.evaluate] System evaluation complete
[__main__] Running Supervisor
[supervisor.os.manager] Rauc: A - marked slot kernel.0 as good
[supervisor.addons.manager] Phase &amp;#39;initialize&amp;#39; starting 0 add-ons
[supervisor.addons.manager] Phase &amp;#39;system&amp;#39; starting 0 add-ons
[supervisor.addons.manager] Phase &amp;#39;services&amp;#39; starting 0 add-ons
[supervisor.core] Skipping start of Home Assistant
[supervisor.addons.manager] Phase &amp;#39;application&amp;#39; starting 0 add-ons
[supervisor.misc.tasks] All core tasks are scheduled
[supervisor.core] Supervisor is up and running
[supervisor.homeassistant.core] Home Assistant setup
[supervisor.docker.interface] Updating image ghcr.io/home-assistant/raspberrypi3-64-homeassistant:landingpage to ghcr.io/home-assistant/raspberrypi3-64-homeassistant:2024.1.1
[supervisor.docker.interface] Downloading docker image ghcr.io/home-assistant/raspberrypi3-64-homeassistant with tag 2024.1.1.
[supervisor.host.info] Updating local host information
[supervisor.resolution.check] Starting system checks with state running
[supervisor.resolution.checks.base] Run check for dns_server_failed/dns_server
[supervisor.resolution.checks.base] Run check for pwned/addon
[supervisor.resolution.checks.base] Run check for ipv4_connection_problem/system
[supervisor.resolution.checks.base] Run check for dns_server_ipv6_error/dns_server
[supervisor.resolution.checks.base] Run check for security/core
[supervisor.resolution.checks.base] Run check for docker_config/system
[supervisor.resolution.checks.base] Run check for trust/supervisor
[supervisor.resolution.checks.base] Run check for no_current_backup/system
[supervisor.resolution.module] Create new suggestion create_full_backup - system / None
[supervisor.resolution.module] Create new issue no_current_backup - system / None
[supervisor.resolution.checks.base] Run check for free_space/system
[supervisor.resolution.checks.base] Run check for multiple_data_disks/system
[supervisor.resolution.check] System checks complete
[supervisor.resolution.evaluate] Starting system evaluation with state running
[supervisor.resolution.evaluate] System evaluation complete
[supervisor.resolution.fixup] Starting system autofix at state running
[supervisor.resolution.fixup] System autofix complete
[supervisor.host.services] Updating service information
[supervisor.host.network] Updating local network information
[supervisor.host.sound] Updating PulseAudio information
[supervisor.host.manager] Host information reload completed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;But after like 10 minutes (which the screen tells you it can take) it
continued.&lt;/p&gt;
&lt;h1&gt;Configuring&lt;/h1&gt;
&lt;p&gt;One of the first things I noticed after setting up the basic system is that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I needed to replace the USB power cable, since the RPI Power status reported a problem&lt;/li&gt;
&lt;li&gt;Bluetooth seems broken...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I could easily fix the power supply issue with a different USB cable, I
couldn't figure out what the issue with bluetooth is. Looking at the
bugtrackers of Home Assistant did reveal quite some issues that people are having with bluetooth:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/home-assistant/core/issues?q=is%3Aissue+is%3Aopen+bluetooth"&gt;https://github.com/home-assistant/core/issues?q=is%3Aissue+is%3Aopen+bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/home-assistant/operating-system/issues?q=bluetooth+is%3Aopen+label%3Aboard%2Fraspberrypi"&gt;https://github.com/home-assistant/operating-system/issues?q=bluetooth+is%3Aopen+label%3Aboard%2Fraspberrypi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I then remembered that I read the following on &lt;a href="https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3"&gt;https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ARMv7 Installation&lt;/p&gt;
&lt;p&gt;Use this installation if you require any of the vendor's kernel hacks,
overlays, or closed-source GPU blobs and utilities.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So maybe we can just use the 32bit version of the OS and everything will work
out of the box?&lt;/p&gt;
&lt;p&gt;Turns out it is exactly like that! Just doing the same as above just with the 32bit image worked out of the box:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;assistant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;operating&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;releases&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;download&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;11.3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;haos_rpi3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;11.3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xz&lt;/span&gt;
&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;decompress&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;haos_rpi3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;11.3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sda&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;oflag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dsync&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;progress&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The sensors immediately showed up as discovered devices and could easily be
added and the values shown:&lt;/p&gt;
&lt;p&gt;&lt;img alt="CO2 measurement" src="https://blog.rnstlr.ch/images/home_assistant/co2-sensor.png" width="100%"&gt;&lt;/p&gt;</content><category term="2024"></category><category term="Raspberry Pi"></category><category term="Linux"></category><category term="Home Assistant"></category></entry><entry><title>Installing ArchLinux ARM on the Raspberry Pi 3</title><link href="https://blog.rnstlr.ch/installing-archlinux-arm-on-the-raspberry-pi-3.html" rel="alternate"></link><published>2023-12-05T00:00:00+01:00</published><updated>2023-12-05T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-12-05:/installing-archlinux-arm-on-the-raspberry-pi-3.html</id><summary type="html">&lt;p&gt;Replacing my RetroPie installation with ArchLinux ARM on my Raspberry Pi 3&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I plugged in my Raspberry Pi 3 which had
&lt;a href="https://retropie.org.uk/"&gt;RetroPie&lt;/a&gt; installed on it. It notified me, that the
installation is out of date and not longer supported and I should reinstall the
system.&lt;/p&gt;
&lt;p&gt;Since I had to do a reinstall anyway and didn't want to be bothered again in
the future, I decided to try out ArchLinux ARM, so I just get the rolling
releases without a need to do re-installs.&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;To install the base image I followed mostly the guide from ArchLinux ARM:
&lt;a href="https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3"&gt;https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the setup I needed to connect it with an Ethernet cable, since the guide
doesn't explain how to set up WiFi prior to first booting it.&lt;/p&gt;
&lt;p&gt;After that I logged in via ssh. I needed to enforce password authentication,
since otherwise ssh would just try all my ssh keys to authenticate which lead
to a &lt;code&gt;Received disconnect from 192.168.0.31 port 22:2: Too many authentication
failures&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PreferredAuthentications&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;alarm@alarmpi
&lt;span class="c1"&gt;# switch to root user&lt;/span&gt;
su
&lt;span class="c1"&gt;# From the install guide&lt;/span&gt;
pacman-key&lt;span class="w"&gt; &lt;/span&gt;--init
pacman-key&lt;span class="w"&gt; &lt;/span&gt;--populate&lt;span class="w"&gt; &lt;/span&gt;archlinuxarm
&lt;span class="c1"&gt;# Update the whole system&lt;/span&gt;
pacman&lt;span class="w"&gt; &lt;/span&gt;-Syu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;During the update step I got a scary warning while building the initramfs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(12/14) Updating linux-rpi initcpios...
==&amp;gt; Building image from preset: /etc/mkinitcpio.d/linux-rpi.preset: &amp;#39;default&amp;#39;
==&amp;gt; Using configuration file: &amp;#39;/etc/mkinitcpio.conf&amp;#39;
  -&amp;gt; -k 6.1.64-2-rpi-ARCH -c /etc/mkinitcpio.conf -g /boot/initramfs-linux.img
==&amp;gt; Starting build: &amp;#39;6.1.64-2-rpi-ARCH&amp;#39;
  -&amp;gt; Running build hook: [base]
  -&amp;gt; Running build hook: [udev]
  -&amp;gt; Running build hook: [autodetect]
  -&amp;gt; Running build hook: [modconf]
  -&amp;gt; Running build hook: [kms]
  -&amp;gt; Running build hook: [keyboard]
  -&amp;gt; Running build hook: [keymap]
  -&amp;gt; Running build hook: [consolefont]
==&amp;gt; WARNING: consolefont: no font found in configuration
  -&amp;gt; Running build hook: [block]
  -&amp;gt; Running build hook: [filesystems]
  -&amp;gt; Running build hook: [fsck]
==&amp;gt; Generating module dependencies
==&amp;gt; Creating gzip-compressed initcpio image: &amp;#39;/boot/initramfs-linux.img&amp;#39;
==&amp;gt; WARNING: errors were encountered during the build. The image may not be complete.
error: command failed to execute correctly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I tried to figure out what went wrong and then decided to just reboot and see
if we can still do that, which worked without problems.&lt;/p&gt;
&lt;h2&gt;Configuring WiFi&lt;/h2&gt;
&lt;p&gt;Since I didn't want to bother with connecting the raspi with an ethernet cable
at the location were I wanted to run it, I needed to configure WiFi before
continuing.&lt;/p&gt;
&lt;p&gt;Since it will run stationary, it is enough to just hard-code a single network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wpa_passphrase&lt;span class="w"&gt; &lt;/span&gt;SSID&lt;span class="w"&gt; &lt;/span&gt;PSK&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/wpa_supplicant/wpa_supplicant@wlan0.service
systemctl&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt; &lt;/span&gt;wpa_supplicant@wlan0.service
systemctl&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wpa_supplicant@wlan0.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we tell systemd-network to enable DHCP for the wlan0 interface by creating
&lt;code&gt;/etc/systemd/network/wlan0.network&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Match]&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;wlan0&lt;/span&gt;

&lt;span class="k"&gt;[Network]&lt;/span&gt;
&lt;span class="na"&gt;DHCP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;IgnoreCarrierLoss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;3s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After reloading with &lt;code&gt;systemctl reload systemd-networkd.service&lt;/code&gt; WiFi was
connected.&lt;/p&gt;
&lt;h3&gt;Update 2023-12-14&lt;/h3&gt;
&lt;p&gt;After a while I noticed, that the &lt;code&gt;systemd-networkd-wait-online.service&lt;/code&gt; blocks
the startup of the pi for about 2 minutes. This is due to the fact that it will
wait for all links to be fully configured by default. (See
&lt;a href="https://www.freedesktop.org/software/systemd/man/latest/systemd-networkd-wait-online.service.html"&gt;https://www.freedesktop.org/software/systemd/man/latest/systemd-networkd-wait-online.service.html&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This can be changed by only waiting for &lt;code&gt;wlan0&lt;/code&gt; to be up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;networkd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;online&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;networkd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;online&lt;/span&gt;&lt;span class="nv"&gt;@wlan0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Installing Kodi&lt;/h1&gt;
&lt;p&gt;Since I wanted to run Kodi on the Pi (along side RetroPi / Emulation station)
I followed this guide: &lt;a href="https://kodi.wiki/view/HOW-TO:Install_Kodi_on_Raspberry_Pi"&gt;https://kodi.wiki/view/HOW-TO:Install_Kodi_on_Raspberry_Pi&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacman -S kodi
# selecting kodi-rpi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After installing the output of pacman showed the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Remove any manual tweaks made to /boot/config.txt particulary a line such
    as gpu_mem=xxx.  Driver setup for Kodi is stored in /boot/kodi.config.txt

    Manually append the following to /boot/config.txt to make them active:
    [all]
    include kodi.config.txt

    A reboot will be required to activate them if this is a fresh install.`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Optional kodi dependencies&lt;/summary&gt;
Kodi showed the following optional dependencies: Since I currently don't want
to use bluetooth for anything, nor want to use pipewire or pulseaudio but plain
ALSA, I didn't install any of them.

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Optional dependencies for kodi-rpi
    afpfs-ng: Apple shares support
    bluez: Blutooth support
    linux-rpi: HW accelerated decoding [installed]
    python-pybluez: Bluetooth support
    pulseaudio: PulseAudio support
    pipewire: PipeWire support
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;So I edited it accordingly, enabled the kodi service and rebooted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo systemctl enable kodi.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So far everything is working quite nicely and one of the next things will be to
get a spotify plugin to run on the Raspberry Pi.&lt;/p&gt;</content><category term="2023"></category><category term="Raspberry Pi"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="ARM"></category></entry><entry><title>Building an out-of-tree Rust Kernel Module Part Three</title><link href="https://blog.rnstlr.ch/building-an-out-of-tree-rust-kernel-module-part-three.html" rel="alternate"></link><published>2023-06-15T00:00:00+02:00</published><updated>2023-06-15T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-06-15:/building-an-out-of-tree-rust-kernel-module-part-three.html</id><summary type="html">&lt;p&gt;Trying to build a hello world out-of-tree Rust kernel module for Linux. Part Three.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last &lt;a href="/building-an-out-of-tree-rust-kernel-module-part-two.html"&gt;blog post&lt;/a&gt;,
I managed to build an out-of-tree kernel module in Rust for a custom 6.1 Linux
kernel I packaged for ArchLinux:
&lt;a href="https://aur.archlinux.org/packages/linux-rust"&gt;https://aur.archlinux.org/packages/linux-rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While this worked, I couldn't manage to package the correct metadata to build
the out-of-tree kernel module without a local build of the kernel, which kind
of defeats the purpose of the exercise.&lt;/p&gt;
&lt;p&gt;In the meantime Linux 6.2 got released so I thought I'd try again.&lt;/p&gt;
&lt;h2&gt;Updating our own ArchLinux kernel&lt;/h2&gt;
&lt;p&gt;So I went ahead and updated my &lt;a href="https://aur.archlinux.org/packages/linux-rust"&gt;linux-rust&lt;/a&gt; package to a 6.2 kernel. While
doing this I tried to stay as close as possible to the default ArchLinux kernel
packages &lt;a href="https://gitlab.archlinux.org/archlinux/packaging/packages/linux/-/blob/6.2.10.arch1-1/config?ref_type=tags"&gt;config&lt;/a&gt; file to make it generally usable.&lt;/p&gt;
&lt;h2&gt;Building the out-of-tree module&lt;/h2&gt;
&lt;p&gt;Linux 6.2 changed the module metadata strings from byte arrays to proper
&lt;code&gt;str&lt;/code&gt;s. For that we needed to update the kernel module. See:
&lt;a href="https://github.com/Rust-for-Linux/rust-out-of-tree-module/pull/5"&gt;https://github.com/Rust-for-Linux/rust-out-of-tree-module/pull/5&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Same error as before&lt;/h2&gt;
&lt;p&gt;So I went ahead recompiled the kernel, rebooted, tried to compile the kernel
module and got the same error as before:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[main] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0461]: couldn&amp;#39;t find crate `core` with expected target triple target-12809083303779448358
  |
  = note: the following crate versions were found:
          crate `core`, target triple target-5559158138856098584: /usr/lib/modules/6.2.10-arch1-1-rust/build/rust/libcore.rmeta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Finding the root cause for the error&lt;/h2&gt;
&lt;p&gt;But this time I wanted to find out what the cause for this issue is! It turns
out that it is a bug in rustc, where the file &lt;em&gt;path&lt;/em&gt; instead of the &lt;em&gt;content&lt;/em&gt;
of the &lt;code&gt;target.json&lt;/code&gt; where used. See&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rust-for-Linux/linux/issues/792"&gt;https://github.com/Rust-for-Linux/linux/issues/792&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98225"&gt;https://github.com/rust-lang/rust/pull/98225&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Compiling with Rust 1.63.0&lt;/h2&gt;
&lt;p&gt;So since this bug got fix in Rust 1.63.0 I decided to try to compile the kernel
with a newer (and thus unsupported, since the Linux kernel uses unstable Rust
features) version.&lt;/p&gt;
&lt;p&gt;This will print a scary warning during the build process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;***
*** Rust compiler &amp;#39;rustc&amp;#39; is too new. This may or may not work.
***   Your version:     1.63.0
***   Expected version: 1.62.0
***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also there were a few warnings from the Rust compiler itself about features
that got now stabilized:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;warning: the feature `nll` has been stable since 1.63.0 and no longer requires an attribute to enable
   --&amp;gt; rust/alloc/lib.rs:170:12
    |
170 | #![feature(nll)] // Not necessary, but here to test the `nll` feature.
    |            ^^^
    |
    = note: `#[warn(stable_features)]` on by default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Successfully building an out-of-tree kernel module!&lt;/h2&gt;
&lt;p&gt;So finally I was able to compile the out-of-tree module without a local build
of the kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[main] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
  MODPOST /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/Module.symvers
  CC [M]  /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.mod.o
  LD [M]  /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which also loaded successfully:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[125766.698929] rust_out_of_tree: loading out-of-tree module taints kernel.
[125766.698985] rust_out_of_tree: module verification failed: signature and/or required key missing - tainting kernel
[125766.699611] rust_out_of_tree: Rust out-of-tree sample (init)
[125771.403175] rust_out_of_tree: My numbers are [72, 108, 200]
[125771.403183] rust_out_of_tree: Rust out-of-tree sample (exit)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also spent some time figuring out which parts of the build metadata are
really needed, since previously I just copied the whole &lt;code&gt;rust/&lt;/code&gt; folder. In the
end we just need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rust/target.json&lt;/code&gt; the custom target description&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rust/*.rmeta&lt;/code&gt; the compiled rust libraries&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rust/*.so&lt;/code&gt; the pre-compiled procedural macros&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rust-toolchain&lt;/code&gt; such that we use the same Rust compiler version that was
   used to compile the kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Looking forward&lt;/h2&gt;
&lt;p&gt;In the meantime Linux 6.3 got released and 6.4 will be released shortly. But it
doesn't look like they will bump the minimum version of Rust needed to compile:
&lt;a href="https://github.com/torvalds/linux/blob/v6.4-rc6/scripts/min-tool-version.sh#L29"&gt;https://github.com/torvalds/linux/blob/v6.4-rc6/scripts/min-tool-version.sh#L29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But reading &lt;a href="https://rust-for-linux.com/rust-version-policy"&gt;https://rust-for-linux.com/rust-version-policy&lt;/a&gt; it looks like
there are plans to start tracking the latest Rust release for Linux:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It remains to be decided how often the Rust version upgrades will land.
Ideally we would track the latest Rust release, but it remains to be seen how
other kernel developers feel about it.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="2023"></category><category term="rust"></category><category term="kernel"></category><category term="Linux"></category><category term="ArchLinux"></category></entry><entry><title>Switching my Desktop to PipeWire</title><link href="https://blog.rnstlr.ch/switching-my-desktop-to-pipewire.html" rel="alternate"></link><published>2023-05-29T00:00:00+02:00</published><updated>2023-05-29T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-05-29:/switching-my-desktop-to-pipewire.html</id><summary type="html">&lt;p&gt;How I switched my desktop from PulseAudio to PipeWire&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Background&lt;/h1&gt;
&lt;p&gt;While I did setup my new laptop directly with PipeWire back in December 2021,
my existing desktop PC did remain with a PulseAudio setup.&lt;/p&gt;
&lt;h2&gt;What is PipeWire?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://pipewire.org/"&gt;PipeWire&lt;/a&gt; is a new low-level multimedia framework. It aims to offer capture
and playback for both audio and video with minimal latency and support for
PulseAudio, JACK, ALSA and GStreamer-based applications. &lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://wiki.archlinux.org/title/PipeWire"&gt;https://wiki.archlinux.org/title/PipeWire&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The reason I wanted to switch was, that I had some troubles with my bluetooth
headphones (only the SBC codec was available in the A2DP profile and I had some
reliability issues) and I heard that PipeWire should make this better.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Most of the pipewire packages were already installed as dependencies for other packages:&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;

&lt;tt&gt;pacman -Qi pipewire&lt;/tt&gt;

&lt;/summary&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Name            : pipewire
Version         : 1:0.3.71-1
Description     : Low-latency audio/video router and processor
Architecture    : x86_64
URL             : https://pipewire.org
Licenses        : MIT  LGPL
Groups          : None
Provides        : None
Depends On      : libpipewire=1:0.3.71-1  libcamera-base.so=0.0.5-64  libcamera.so=0.0.5-64  libdbus-1.so=3-64  libglib-2.0.so=0-64  libncursesw.so=6-64  libpipewire-0.3.so=0-64  libreadline.so=8-64  libsystemd.so=0-64  libudev.so=1-64
Optional Deps   : gst-plugin-pipewire: GStreamer plugin
                  pipewire-alsa: ALSA configuration
                  pipewire-audio: Audio support
                  pipewire-docs: Documentation
                  pipewire-jack: JACK support
                  pipewire-pulse: PulseAudio replacement
                  pipewire-roc: ROC streaming
                  pipewire-session-manager: Session manager [installed]
                  pipewire-v4l2: V4L2 interceptor
                  pipewire-x11-bell: X11 bell
                  pipewire-zeroconf: Zeroconf support
                  realtime-privileges: realtime privileges with rt module
                  rtkit: realtime privileges with rtkit module [installed]
Required By     : lib32-pipewire  obs-studio  telegram-desktop  wireplumber  xdg-desktop-portal  xdg-desktop-portal-wlr
Optional For    : chromium  electron  electron19  qt5-webengine  qt6-webengine  sdl2
Conflicts With  : None
Replaces        : None
Installed Size  : 3.11 MiB
Packager        : David Runge &amp;lt;dvzrv@archlinux.org&amp;gt;
Build Date      : So 21 Mai 2023 15:17:29
Install Date    : Di 23 Mai 2023 22:53:42
Install Reason  : Installed as a dependency for another package
Install Script  : Yes
Validated By    : Signature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;But first we install &lt;code&gt;pipewire-audio&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pacman -S pipewire-audio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we remove &lt;code&gt;pulseaudio-alsa&lt;/code&gt; and install &lt;code&gt;pipewire-alsa&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pacman -Rs pulseaudio-alsa
$ sudo pacman -S pipewire-alsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we install &lt;code&gt;pipewire-pulse&lt;/code&gt; (which will remove &lt;code&gt;pulseaudio&lt;/code&gt; and &lt;code&gt;pulseaudio-bluetooth&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pacman -S pipewire-pulse
resolving dependencies...
looking for conflicting packages...
:: pipewire-pulse and pulseaudio are in conflict. Remove pulseaudio? [y/N] y
:: pipewire-pulse and pulseaudio-bluetooth are in conflict. Remove pulseaudio-bluetooth? [y/N] y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When trying to stop the (now uninstalled) pulseaudio service to start pipewire
I got an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;Failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pulseaudio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loaded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since I didn't want to invest too much time (maybe I should just have stopped
it before uninstalling it?) I just logged out and back in to restart my
session.&lt;sup id="fnref:session"&gt;&lt;a class="footnote-ref" href="#fn:session"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;Problems&lt;/h2&gt;
&lt;p&gt;After restarting the session pulseaudio clients seemed to be broken:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pactl&lt;span class="w"&gt; &lt;/span&gt;stat
Connection&lt;span class="w"&gt; &lt;/span&gt;failure:&lt;span class="w"&gt; &lt;/span&gt;Connection&lt;span class="w"&gt; &lt;/span&gt;refused
pa_context_connect&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;failed:&lt;span class="w"&gt; &lt;/span&gt;Connection&lt;span class="w"&gt; &lt;/span&gt;refused
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It turns out that for some reason the pipewire-pulse.socket listener wasn't
active:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;status&lt;span class="w"&gt; &lt;/span&gt;pipewire-pulse.socket
○&lt;span class="w"&gt; &lt;/span&gt;pipewire-pulse.socket&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;PipeWire&lt;span class="w"&gt; &lt;/span&gt;PulseAudio
&lt;span class="w"&gt;     &lt;/span&gt;Loaded:&lt;span class="w"&gt; &lt;/span&gt;loaded&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;/usr/lib/systemd/user/pipewire-pulse.socket&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;enabled&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;preset:&lt;span class="w"&gt; &lt;/span&gt;enabled&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;Active:&lt;span class="w"&gt; &lt;/span&gt;inactive&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;dead&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;Triggers:&lt;span class="w"&gt; &lt;/span&gt;●&lt;span class="w"&gt; &lt;/span&gt;pipewire-pulse.service
&lt;span class="w"&gt;     &lt;/span&gt;Listen:&lt;span class="w"&gt; &lt;/span&gt;/run/user/1000/pulse/native&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Stream&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Starting it is as easy as &lt;code&gt;systemctl --user start pipewire-pulse.socket&lt;/code&gt; and
now &lt;code&gt;pactl&lt;/code&gt; shows some output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pactl&lt;span class="w"&gt; &lt;/span&gt;stat
Currently&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;use:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blocks&lt;span class="w"&gt; &lt;/span&gt;containing&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.0&lt;span class="w"&gt; &lt;/span&gt;KiB&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;total.
Allocated&lt;span class="w"&gt; &lt;/span&gt;during&lt;span class="w"&gt; &lt;/span&gt;whole&lt;span class="w"&gt; &lt;/span&gt;lifetime:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blocks&lt;span class="w"&gt; &lt;/span&gt;containing&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.0&lt;span class="w"&gt; &lt;/span&gt;KiB&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;total.
Sample&lt;span class="w"&gt; &lt;/span&gt;cache&lt;span class="w"&gt; &lt;/span&gt;size:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also pavucontrol now shows me LDAC, AAC, and SBC-XQ in addition to just SBC:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pavucontrol showing more codecs" src="https://blog.rnstlr.ch/images/pipewire/pavucontrol-bluetooth-profiles.png" width="100%"&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:session"&gt;
&lt;p&gt;I should probably have used &lt;code&gt;systemctl --user stop pulseaudio.service&lt;/code&gt;, since these are user units.&amp;#160;&lt;a class="footnote-backref" href="#fnref:session" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="2023"></category><category term="PipeWire"></category><category term="PulseAudio"></category></entry><entry><title>Limiting process RAM usage with systemd-run</title><link href="https://blog.rnstlr.ch/limiting-process-ram-usage-with-systemd-run.html" rel="alternate"></link><published>2023-01-17T00:00:00+01:00</published><updated>2023-01-17T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-01-17:/limiting-process-ram-usage-with-systemd-run.html</id><summary type="html">&lt;p class="first last"&gt;Limiting RAM usage of a build process with systemd-run&lt;/p&gt;
</summary><content type="html">&lt;p&gt;While building the Linux kernel with &lt;a class="reference external" href="/building-an-out-of-tree-rust-kernel-module-part-two.html"&gt;Rust support for ArchLinux&lt;/a&gt;, I ran into a
problem where sphinx-build started using excessive amounts of RAM while
building the HTML documentation.&lt;/p&gt;
&lt;p&gt;This caused the system to become unresponsive before the OOM killer decided to
just kill my user session.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 100%"&gt;
&lt;a class="reference external image-reference" href="https://blog.rnstlr.ch/images/limiting_ram_usage/sphinx-build-excessive-ram-usage.png"&gt;&lt;img alt="htop just shortly before killing the build process" src="https://blog.rnstlr.ch/images/limiting_ram_usage/sphinx-build-excessive-ram-usage.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;htop output just before killing the build process&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Looking for a way to not have the OOM killer kill my session, but kill the
build process before it uses up all my available RAM, I found
&lt;a class="reference external" href="https://unix.stackexchange.com/a/536046"&gt;https://unix.stackexchange.com/a/536046&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, spawning the build with the following command will kill the build process
as soon as it uses more than 20GB of RAM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;systemd-run&lt;span class="w"&gt; &lt;/span&gt;--scope&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;MemoryMax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;20G&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;makepkg
&lt;span class="go"&gt;Running scope as unit: run-r44087c0ea5d445fda135dc0db42b36ab.scope&lt;/span&gt;
&lt;span class="go"&gt;[1]    426653 killed     systemd-run --scope -p MemoryMax=20G --user makepkg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="2023"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="systemd"></category><category term="kernel"></category></entry><entry><title>Building an out-of-tree Rust Kernel Module Part Two</title><link href="https://blog.rnstlr.ch/building-an-out-of-tree-rust-kernel-module-part-two.html" rel="alternate"></link><published>2023-01-15T00:00:00+01:00</published><updated>2023-01-15T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2023-01-15:/building-an-out-of-tree-rust-kernel-module-part-two.html</id><summary type="html">&lt;p&gt;Trying to build a hello world out-of-tree Rust kernel module for Linux 6.1. Part two.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last &lt;a href="/building-an-out-of-tree-rust-kernel-module.html"&gt;blog post&lt;/a&gt;, I
tried to build an out-of-tree kernel module in Rust for the 6.1 stock ArchLinux kernel.&lt;/p&gt;
&lt;p&gt;During this process I noticed that while &lt;code&gt;CONFIG_HAVE_RUST=y&lt;/code&gt; is set in the
&lt;a href="https://github.com/archlinux/svntogit-packages/blob/706494f4555dca158c9f02932717550e7b66b534/trunk/config"&gt;ArchLinux kernel config&lt;/a&gt;,
Rust support get's silently disabled since conflicting options are set.&lt;/p&gt;
&lt;h2&gt;Building our own ArchLinux kernel&lt;/h2&gt;
&lt;p&gt;So I went ahead and started to build my own kernel with a custom config:
&lt;a href="https://aur.archlinux.org/packages/linux-rust"&gt;https://aur.archlinux.org/packages/linux-rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I based it off the official ArchLinux kernel package, disabled the conflicting
options, ran &lt;code&gt;make menuconfig&lt;/code&gt; and enabled Rust support.&lt;/p&gt;
&lt;p&gt;A few iterations on the configuration and &lt;code&gt;PKGBUILD&lt;/code&gt; later, I had a successfully
building kernel with Rust support enabled!&lt;/p&gt;
&lt;p&gt;After installing the custom kernel and booting into it, we should finally be
ready!&lt;/p&gt;
&lt;h2&gt;Building the out-of-tree module&lt;/h2&gt;
&lt;p&gt;So back to the
&lt;a href="https://github.com/rnestler/rust-out-of-tree-module/tree/fix-build-for-linux-6.1"&gt;Rust-for-Linux/rust-out-of-tree-module&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;KDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/projects/archpkg/linux-rust/src/archlinux-linux&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;LLVM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;insmod&lt;span class="w"&gt; &lt;/span&gt;rust_out_of_tree.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And we see in the &lt;code&gt;dmesg&lt;/code&gt; output that the module successfully loaded! 🎉&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;451.297415&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;taints&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;451.297460&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;verification&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tainting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;451.297724&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Rust&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we unload it with &lt;code&gt;sudo rmmod rust_out_of_tree.ko&lt;/code&gt; we get the following in
&lt;code&gt;dmesg&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[  461.206748] rust_out_of_tree: My numbers are [72, 108, 200]&lt;/span&gt;
&lt;span class="na"&gt;[  461.206753] rust_out_of_tree&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Rust out-of-tree sample (exit)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Packing the correct metadata&lt;/h2&gt;
&lt;p&gt;You may have noticed, that we passed
&lt;code&gt;KDIR=~/projects/archpkg/linux-rust/src/archlinux-linux&lt;/code&gt; to the make call. This
is because the build requires the Rust metadata which is generated during the
kernel build. To make it easier for other people installing the &lt;code&gt;linux-rust&lt;/code&gt;
kernel, we should package it in &lt;code&gt;linux-rust-headers&lt;/code&gt; (&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;p&gt;If we don't pass the &lt;code&gt;KDIR&lt;/code&gt; option, we get the following build error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error: target file &amp;quot;./rust/target.json&amp;quot; does not exist

make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So let's add this file to the package and try to rebuild:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0463]: can&amp;#39;t find crate for `core`
  |
  = note: the `target` target may not be installed
  = help: consider downloading the target with `rustup target add target`
  = help: consider building the standard library from source with `cargo build -Zbuild-std`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Rest of the terminal output ...&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;error[E0463]: can&amp;#39;t find crate for `compiler_builtins`

error[E0463]: can&amp;#39;t find crate for `kernel`
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:5:5
  |
5 | use kernel::prelude::*;
  |     ^^^^^^ can&amp;#39;t find crate

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `module` in this scope
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
  |
7 | module! {
  | ^^^^^^

error[E0463]: can&amp;#39;t find crate for `kernel`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:19:6
   |
19 | impl kernel::Module for RustOutOfTree {
   |      ^^^^^^ can&amp;#39;t find crate

error[E0433]: failed to resolve: use of undeclared type `Vec`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:23:27
   |
23 |         let mut numbers = Vec::new();
   |                           ^^^ use of undeclared type `Vec`

error[E0412]: cannot find type `Vec` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:16:14
   |
16 |     numbers: Vec&amp;lt;i32&amp;gt;,
   |              ^^^ not found in this scope

error[E0412]: cannot find type `ThisModule` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:31
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                               ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Result` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:46
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                                              ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Drop` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:32:6
   |
32 | impl Drop for RustOutOfTree {
   |      ^^^^ not found in this scope

error[E0635]: unknown feature `core_ffi_c`
 --&amp;gt; &amp;lt;crate attribute&amp;gt;:1:9
  |
1 | feature(core_ffi_c)
  |         ^^^^^^^^^^

error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:28:9
   |
28 |         Ok(RustOutOfTree { numbers })
   |         ^^ not found in this scope

error: aborting due to 15 previous errors

Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0463, E0635.
For more information about an error, try `rustc --explain E0405`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;Ok, so the build system is unable to find all the required crates that got
built as part of the kernel.&lt;/p&gt;
&lt;p&gt;So to keep it simple, we just add everything form the &lt;code&gt;rust/&lt;/code&gt; folder into the
package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0514]: found crate `core` compiled by an incompatible version of rustc
  |
  = note: the following crate versions were found:
          crate `core` compiled by rustc 1.62.0 (a8314ef7d 2022-06-27): /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libcore.rmeta
  = help: please recompile that crate using this compiler (rustc 1.66.0 (69f9c33d7 2022-12-12)) (consider running `cargo clean` first)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Rest of the terminal output ...&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;error[E0514]: found crate `kernel` compiled by an incompatible version of rustc
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:5:5
  |
5 | use kernel::prelude::*;
  |     ^^^^^^
  |
  = note: the following crate versions were found:
          crate `kernel` compiled by rustc 1.62.0 (a8314ef7d 2022-06-27): /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta
  = help: please recompile that crate using this compiler (rustc 1.66.0 (69f9c33d7 2022-12-12)) (consider running `cargo clean` first)

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `module` in this scope
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
  |
7 | module! {
  | ^^^^^^

error[E0514]: found crate `kernel` compiled by an incompatible version of rustc
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:19:6
   |
19 | impl kernel::Module for RustOutOfTree {
   |      ^^^^^^
   |
   = note: the following crate versions were found:
           crate `kernel` compiled by rustc 1.62.0 (a8314ef7d 2022-06-27): /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta
   = help: please recompile that crate using this compiler (rustc 1.66.0 (69f9c33d7 2022-12-12)) (consider running `cargo clean` first)

error[E0433]: failed to resolve: use of undeclared type `Vec`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:23:27
   |
23 |         let mut numbers = Vec::new();
   |                           ^^^ use of undeclared type `Vec`

error[E0412]: cannot find type `Vec` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:16:14
   |
16 |     numbers: Vec&amp;lt;i32&amp;gt;,
   |              ^^^ not found in this scope

error[E0412]: cannot find type `ThisModule` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:31
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                               ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Result` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:46
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                                              ^^^^^^ not found in this scope

error[E0405]: cannot find trait `Drop` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:32:6
   |
32 | impl Drop for RustOutOfTree {
   |      ^^^^ not found in this scope

error[E0635]: unknown feature `core_ffi_c`
 --&amp;gt; &amp;lt;crate attribute&amp;gt;:1:9
  |
1 | feature(core_ffi_c)
  |         ^^^^^^^^^^

error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:28:9
   |
28 |         Ok(RustOutOfTree { numbers })
   |         ^^ not found in this scope

error: aborting due to 14 previous errors

Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0635.
For more information about an error, try `rustc --explain E0405`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;Alright, so it finds the crates, but the &lt;code&gt;rustc&lt;/code&gt; versions do not match.
Apparently, the build is executed in
&lt;code&gt;/usr/lib/modules/6.1.5-arch2-1-rust/build&lt;/code&gt;, so we need to tell &lt;code&gt;rustup&lt;/code&gt; that we
want the 1.62.0 toolchain for that folder.&lt;/p&gt;
&lt;p&gt;For that, we just add the &lt;code&gt;rust-toolchain&lt;/code&gt; to the package as well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;..Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % make  LLVM=1
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error[E0461]: couldn&amp;#39;t find crate `core` with expected target triple target-12809083303779448358
  |
  = note: the following crate versions were found:
          crate `core`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libcore.rmeta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;Rest of the terminal output ...&lt;/summary&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;error[E0461]: couldn&amp;#39;t find crate `compiler_builtins` with expected target triple target-12809083303779448358
  |
  = note: the following crate versions were found:
          crate `compiler_builtins`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libcompiler_builtins.rmeta

error[E0461]: couldn&amp;#39;t find crate `kernel` with expected target triple target-12809083303779448358
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:5:5
  |
5 | use kernel::prelude::*;
  |     ^^^^^^
  |
  = note: the following crate versions were found:
          crate `kernel`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^

error: cannot find macro `pr_info` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^

error: cannot find macro `module` in this scope
 --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
  |
7 | module! {
  | ^^^^^^

error[E0461]: couldn&amp;#39;t find crate `kernel` with expected target triple target-12809083303779448358
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:19:6
   |
19 | impl kernel::Module for RustOutOfTree {
   |      ^^^^^^
   |
   = note: the following crate versions were found:
           crate `kernel`, target triple target-3911737072772191946: /usr/lib/modules/6.1.5-arch2-1-rust/build/rust/libkernel.rmeta

error[E0433]: failed to resolve: use of undeclared type `Vec`
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:23:27
   |
23 |         let mut numbers = Vec::new();
   |                           ^^^ use of undeclared type `Vec`

error[E0412]: cannot find type `Vec` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:16:14
   |
16 |     numbers: Vec&amp;lt;i32&amp;gt;,
   |              ^^^ not found in this scope

error[E0412]: cannot find type `ThisModule` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:31
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                               ^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `Result` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:46
   |
20 |     fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                                              ^^^^^^ not found in this scope

error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:28:9
   |
28 |         Ok(RustOutOfTree { numbers })
   |         ^^ not found in this scope

error[E0405]: cannot find trait `Drop` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:32:6
   |
32 | impl Drop for RustOutOfTree {
   |      ^^^^ not found in this scope

error[E0635]: unknown feature `core_ffi_c`
 --&amp;gt; &amp;lt;crate attribute&amp;gt;:1:9
  |
1 | feature(core_ffi_c)
  |         ^^^^^^^^^^

error: aborting due to 15 previous errors

Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0635.
For more information about an error, try `rustc --explain E0405`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.5-arch2-1-rust/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/details&gt;

&lt;p&gt;I didn't really understand what the strange target triple meant. Usually a
target triple looks something like &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; (&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;). But in
our case we are using a &lt;code&gt;target.json&lt;/code&gt; to define the target, so I've no clue
where the difference comes from, since we are using the same JSON file.&lt;/p&gt;
&lt;h2&gt;Summing it up&lt;/h2&gt;
&lt;p&gt;While we managed to compile and run our out-of-tree kernel module in Rust, we
couldn't get the build metadata packaged in a way to do it without a local
build of the kernel.&lt;/p&gt;
&lt;p&gt;Well, let's see if anything changes with the 6.2 Linux kernel which should get
released in February. In the meantime, this kernel provides an easy way to start
playing with Rust kernel modules on ArchLinux.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The name of the package may be a bit misleading, since the package not
  only bundles the headers but also build scripts and other metadata required
  to build modules.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;See also &lt;a href="https://doc.rust-lang.org/rustc/targets/index.html"&gt;https://doc.rust-lang.org/rustc/targets/index.html&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="2023"></category><category term="rust"></category><category term="kernel"></category><category term="Linux"></category><category term="ArchLinux"></category></entry><entry><title>Building an out-of-tree Rust Kernel Module</title><link href="https://blog.rnstlr.ch/building-an-out-of-tree-rust-kernel-module.html" rel="alternate"></link><published>2022-12-19T00:00:00+01:00</published><updated>2022-12-19T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2022-12-19:/building-an-out-of-tree-rust-kernel-module.html</id><summary type="html">&lt;p&gt;Trying to build a hello world out-of-tree Rust kernel module for Linux 6.1&lt;/p&gt;</summary><content type="html">&lt;p&gt;With the release of &lt;a href="https://lwn.net/Articles/917504/"&gt;Linux 6.1&lt;/a&gt;, minimal Rust
support landed and it should be possible to &lt;del&gt;easily&lt;/del&gt; build a hello
world kernel module in Rust.&lt;/p&gt;
&lt;h2&gt;Installing Linux 6.1&lt;/h2&gt;
&lt;p&gt;At the time of writing Linux 6.1 was still in testing on ArchLinux, so I
enabled the testing repositories:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gd"&gt;--- pacman.conf 2022-12-18 15:25:10.742819293 +0100&lt;/span&gt;
&lt;span class="gi"&gt;+++ /etc/pacman.conf    2022-12-18 00:32:56.404801925 +0100&lt;/span&gt;
&lt;span class="gu"&gt;@@ -69,8 +69,8 @@&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;# repo name header and Include lines. You can add preferred servers immediately
&lt;span class="w"&gt; &lt;/span&gt;# after the header, and they will be used before the default mirrors.

&lt;span class="gd"&gt;-#[testing]&lt;/span&gt;
&lt;span class="gd"&gt;-#Include = /etc/pacman.d/mirrorlist&lt;/span&gt;
&lt;span class="gi"&gt;+[testing]&lt;/span&gt;
&lt;span class="gi"&gt;+Include = /etc/pacman.d/mirrorlist&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;[core]
&lt;span class="w"&gt; &lt;/span&gt;Include = /etc/pacman.d/mirrorlist
&lt;span class="gu"&gt;@@ -78,8 +78,8 @@&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;[extra]
&lt;span class="w"&gt; &lt;/span&gt;Include = /etc/pacman.d/mirrorlist

&lt;span class="gd"&gt;-#[community-testing]&lt;/span&gt;
&lt;span class="gd"&gt;-#Include = /etc/pacman.d/mirrorlist&lt;/span&gt;
&lt;span class="gi"&gt;+[community-testing]&lt;/span&gt;
&lt;span class="gi"&gt;+Include = /etc/pacman.d/mirrorlist&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;[community]
&lt;span class="w"&gt; &lt;/span&gt;Include = /etc/pacman.d/mirrorlist
&lt;span class="gu"&gt;@@ -87,8 +87,8 @@&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;# If you want to run 32 bit applications on your x86_64 system,
&lt;span class="w"&gt; &lt;/span&gt;# enable the multilib repositories as required here.

&lt;span class="gd"&gt;-#[multilib-testing]&lt;/span&gt;
&lt;span class="gd"&gt;-#Include = /etc/pacman.d/mirrorlist&lt;/span&gt;
&lt;span class="gi"&gt;+[multilib-testing]&lt;/span&gt;
&lt;span class="gi"&gt;+Include = /etc/pacman.d/mirrorlist&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;[multilib]
&lt;span class="w"&gt; &lt;/span&gt;Include = /etc/pacman.d/mirrorlist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;A first start&lt;/h2&gt;
&lt;p&gt;Since I just want to play around, I decided to build an out-of-tree Rust module.
Luckily, there is an example module available for that already:
&lt;a href="https://github.com/Rust-for-Linux/rust-out-of-tree-module"&gt;https://github.com/Rust-for-Linux/rust-out-of-tree-module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So I went ahead, cloned the repo and tried to just execute make:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rust-out-of-tree-module (git)-[main] % make
make -C /lib/modules/`uname -r`/build M=$PWD
make[1]: Entering directory &amp;#39;/usr/lib/modules/6.1.0-arch1-1/build&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error: target file &amp;quot;./rust/target.json&amp;quot; does not exist

make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/usr/lib/modules/6.1.0-arch1-1/build&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Well...&lt;/p&gt;
&lt;p&gt;Reading through &lt;a href="https://www.kernel.org/doc/html/latest/rust/quick-start.html"&gt;https://www.kernel.org/doc/html/latest/rust/quick-start.html&lt;/a&gt;,
it seemed that I have everything I need to get started.&lt;/p&gt;
&lt;p&gt;The README mentions the following though:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The kernel tree (KDIR) requires the Rust metadata to be available. These are
generated during the kernel build, but may not be available for
installed/distributed kernels (the scripts that install/distribute kernel
headers etc. for the different package systems and Linux distributions are
not updated to take into account Rust support yet).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Trying an in-kernel build&lt;/h2&gt;
&lt;p&gt;To check if it is just a tooling issue, I cloned the
&lt;a href="https://github.com/Rust-for-Linux/linux"&gt;https://github.com/Rust-for-Linux/linux&lt;/a&gt; repo and executed the check according
to the documentation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rust-for-Linux/linux (git)-[rust] % make LLVM=1 rustavailable
***
*** Rust compiler &amp;#39;rustc&amp;#39; is too new. This may or may not work.
***   Your version:     1.66.0
***   Expected version: 1.62.0
***
***
*** Rust bindings generator &amp;#39;bindgen&amp;#39; is too new. This may or may not work.
***   Your version:     0.63.0
***   Expected version: 0.56.0
***
Rust is available!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since my toolchain seems to be too new, I installed the older versions with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rustup&lt;span class="w"&gt; &lt;/span&gt;override&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;scripts/min-tool-version.sh&lt;span class="w"&gt; &lt;/span&gt;rustc&lt;span class="k"&gt;)&lt;/span&gt;
rustup&lt;span class="w"&gt; &lt;/span&gt;component&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;rust-src
cargo&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--locked&lt;span class="w"&gt; &lt;/span&gt;--version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;scripts/min-tool-version.sh&lt;span class="w"&gt; &lt;/span&gt;bindgen&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bindgen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then I enabled Rust support with &lt;code&gt;make menuconfig&lt;/code&gt; in the &lt;em&gt;General setup&lt;/em&gt; menu.
The option is only shown if the toolchain is installed, and in my case I also
had to disable the &lt;code&gt;GCC_PLUGINS&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;I then just compiled the whole kernel to test it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make LLVM=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This went smoothly, so I continued to build the actual ArchLinux kernel which matches my running kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote add archlinux git@github.com:archlinux/linux.git
git fetch archlinux v6.1-arch1
git checkout v6.1-arch1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To be sure, I ran &lt;code&gt;make menuconfig&lt;/code&gt; again and applied the same changes again.&lt;/p&gt;
&lt;p&gt;A few minutes later, I had my kernel ready:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rust-for-Linux/linux (git)-[rust] % make -j8 LLVM=1
...
Kernel: arch/x86/boot/bzImage is ready  (#2)
make -j8 LLVM=1  1557.69s user 133.21s system 745% cpu 3:46.77 total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Back to the out-of-tree module&lt;/h2&gt;
&lt;p&gt;Having successfully built the whole kernel with Rust support, I went back to the
&lt;code&gt;rust-out-of-tree-module&lt;/code&gt; repository and tried to build it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rust-for-Linux/rust-out-of-tree-module (git)-[main] % make KDIR=../linux LLVM=1
make -C ../linux M=$PWD
make[1]: Entering directory &amp;#39;/home/roughl/projects/github/Rust-for-Linux/linux&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
error: proc macro panicked
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:7:1
   |
7  | / module! {
8  | |     type: RustOutOfTree,
9  | |     name: &amp;quot;rust_out_of_tree&amp;quot;,
10 | |     author: &amp;quot;Rust for Linux Contributors&amp;quot;,
11 | |     description: &amp;quot;Rust out-of-tree sample&amp;quot;,
12 | |     license: &amp;quot;GPL&amp;quot;,
13 | | }
   | |_^
   |
   = help: message: Expected byte string

error[E0412]: cannot find type `CStr` in this scope
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:29
   |
20 |     fn init(_name: &amp;amp;&amp;#39;static CStr, _module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                             ^^^^ not found in this scope
   |
help: consider importing this struct
   |
5  | use core::ffi::CStr;
   |

error[E0425]: cannot find value `__LOG_PREFIX` in the crate root
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:21:9
   |
21 |         pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in the crate root
   |
   = note: this error originates in the macro `$crate::print_macro` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0425]: cannot find value `__LOG_PREFIX` in the crate root
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:34:9
   |
34 |         pr_info!(&amp;quot;My numbers are {:?}\n&amp;quot;, self.numbers);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in the crate root
   |
   = note: this error originates in the macro `$crate::print_macro` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0425]: cannot find value `__LOG_PREFIX` in the crate root
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:35:9
   |
35 |         pr_info!(&amp;quot;Rust out-of-tree sample (exit)\n&amp;quot;);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in the crate root
   |
   = note: this error originates in the macro `$crate::print_macro` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0050]: method `init` has 2 parameters but the declaration in trait `init` has 1
  --&amp;gt; /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.rs:20:20
   |
20 |     fn init(_name: &amp;amp;&amp;#39;static CStr, _module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter, found 2
   |
   = note: `init` from trait: `fn(&amp;amp;&amp;#39;static kernel::ThisModule) -&amp;gt; core::result::Result&amp;lt;Self, kernel::error::Error&amp;gt;`

error: aborting due to 6 previous errors

Some errors have detailed explanations: E0050, E0412, E0425.
For more information about an error, try `rustc --explain E0050`.
make[2]: *** [scripts/Makefile.build:307: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o] Error 1
make[1]: *** [Makefile:1992: /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module] Error 2
make[1]: Leaving directory &amp;#39;/home/roughl/projects/github/Rust-for-Linux/linux&amp;#39;
make: *** [Makefile:6: default] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Looking into the compile errors, it seemed that the &lt;code&gt;fn init&lt;/code&gt; signature changed
and that the &lt;code&gt;module!&lt;/code&gt; marco expects byte strings.&lt;/p&gt;
&lt;p&gt;Changing that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/rust_out_of_tree.rs b/rust_out_of_tree.rs&lt;/span&gt;
&lt;span class="gh"&gt;index e280409..58cc9ba 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/rust_out_of_tree.rs&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/rust_out_of_tree.rs&lt;/span&gt;
&lt;span class="gu"&gt;@@ -6,10 +6,10 @@ use kernel::prelude::*;&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;module! {
&lt;span class="w"&gt; &lt;/span&gt;    type: RustOutOfTree,
&lt;span class="gd"&gt;-    name: &amp;quot;rust_out_of_tree&amp;quot;,&lt;/span&gt;
&lt;span class="gd"&gt;-    author: &amp;quot;Rust for Linux Contributors&amp;quot;,&lt;/span&gt;
&lt;span class="gd"&gt;-    description: &amp;quot;Rust out-of-tree sample&amp;quot;,&lt;/span&gt;
&lt;span class="gd"&gt;-    license: &amp;quot;GPL&amp;quot;,&lt;/span&gt;
&lt;span class="gi"&gt;+    name: b&amp;quot;rust_out_of_tree&amp;quot;,&lt;/span&gt;
&lt;span class="gi"&gt;+    author: b&amp;quot;Rust for Linux Contributors&amp;quot;,&lt;/span&gt;
&lt;span class="gi"&gt;+    description: b&amp;quot;Rust out-of-tree sample&amp;quot;,&lt;/span&gt;
&lt;span class="gi"&gt;+    license: b&amp;quot;GPL&amp;quot;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;}

&lt;span class="w"&gt; &lt;/span&gt;struct RustOutOfTree {
&lt;span class="gu"&gt;@@ -17,7 +17,7 @@ struct RustOutOfTree {&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;}

&lt;span class="w"&gt; &lt;/span&gt;impl kernel::Module for RustOutOfTree {
&lt;span class="gd"&gt;-    fn init(_name: &amp;amp;&amp;#39;static CStr, _module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {&lt;/span&gt;
&lt;span class="gi"&gt;+    fn init(_module: &amp;amp;&amp;#39;static ThisModule) -&amp;gt; Result&amp;lt;Self&amp;gt; {&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;        pr_info!(&amp;quot;Rust out-of-tree sample (init)\n&amp;quot;);

&lt;span class="w"&gt; &lt;/span&gt;        let mut numbers = Vec::new();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We get a successful build!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rust-for-Linux/rust-out-of-tree-module (git)-[main] % make KDIR=../linux LLVM=1
make -C ../linux M=$PWD
make[1]: Entering directory &amp;#39;/home/roughl/projects/github/Rust-for-Linux/linux&amp;#39;
  RUSTC [M] /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.o
  MODPOST /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/Module.symvers
  LD [M]  /home/roughl/projects/github/Rust-for-Linux/rust-out-of-tree-module/rust_out_of_tree.ko
make[1]: Leaving directory &amp;#39;/home/roughl/projects/github/Rust-for-Linux/linux&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But trying to load the resulting module fails:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;insmod&lt;span class="w"&gt; &lt;/span&gt;rust_out_of_tree.ko
insmod:&lt;span class="w"&gt; &lt;/span&gt;ERROR:&lt;span class="w"&gt; &lt;/span&gt;could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;insert&lt;span class="w"&gt; &lt;/span&gt;module&lt;span class="w"&gt; &lt;/span&gt;rust_out_of_tree.ko:&lt;span class="w"&gt; &lt;/span&gt;Invalid&lt;span class="w"&gt; &lt;/span&gt;module&lt;span class="w"&gt; &lt;/span&gt;format
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We see this in the &lt;code&gt;dmesg&lt;/code&gt; output as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;24593.691184&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;magic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6.1.0-arch1 SMP preempt mod_unload &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;should&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6.1.0-arch1-1 SMP preempt mod_unload &amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course we aren't setting the version the same as the ArchLinux kernel. I
copied a few steps from
&lt;a href="https://github.com/archlinux/svntogit-packages/blob/packages/linux/trunk/PKGBUILD"&gt;https://github.com/archlinux/svntogit-packages/blob/packages/linux/trunk/PKGBUILD&lt;/a&gt;
to set the same version (we could also just copy the config from there, but
lets see what happens first)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rust-for-Linux/linux (git)-[tags/v6.1-arch1] % echo &amp;quot;-1&amp;quot; &amp;gt; localversion.10-pkgrel
Rust-for-Linux/linux (git)-[tags/v6.1-arch1] % make -s kernelrelease &amp;gt; version
Rust-for-Linux/linux (git)-[tags/v6.1-arch1] % cat version
6.1.0-arch1-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It didn't work again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Rust-for-Linux/rust-out-of-tree-module (git)-[fix-build-for-linux-6.1] % sudo insmod rust_out_of_tree.ko
insmod: ERROR: could not insert module rust_out_of_tree.ko: Unknown symbol in module
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;dmesg&lt;/code&gt; output shows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463334&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvNtNtCsfATHBUcknU9_6kernel5print14format_strings4INFO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463353&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvNtCsfATHBUcknU9_6kernel5print11call_printk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463371&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;__rust_dealloc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463386&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;__rust_realloc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463400&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;__rust_alloc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463414&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvNtCs3yuwAp0waWO_4core9panicking5panic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463428&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvMs7_NtCs3yuwAp0waWO_4core3fmtNtB5_9Formatter15debug_lower_hex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463442&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvXsS_NtNtCs3yuwAp0waWO_4core3fmt3numlNtB7_8LowerHex3fmt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463456&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvMs7_NtCs3yuwAp0waWO_4core3fmtNtB5_9Formatter15debug_upper_hex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463469&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvXsT_NtNtCs3yuwAp0waWO_4core3fmt3numlNtB7_8UpperHex3fmt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463483&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvXs2_NtNtNtCs3yuwAp0waWO_4core3fmt3num3implNtB9_7Display3fmt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463497&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvMs7_NtCs3yuwAp0waWO_4core3fmtNtB5_9Formatter10debug_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463510&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvMs5_NtNtCs3yuwAp0waWO_4core3fmt8buildersNtB5_9DebugList5entry&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463524&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvMs5_NtNtCs3yuwAp0waWO_4core3fmt8buildersNtB5_9DebugList6finish&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463538&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvXs_NtCsfATHBUcknU9_6kernel5errorNtB4_5ErrorINtNtCs3yuwAp0waWO_4core7convert4FromNtNtCsdvv6pRyacSq_5alloc11collections15TryReserveErrorE4from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m m-Double"&gt;25300.463552&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Unknown&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_RNvMNtCsfATHBUcknU9_6kernel5errorNtB2_5Error15to_kernel_errno&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So lets try with the ArchLinux config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;wget&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//raw.githubusercontent.com/archlinux/svntogit-packages/packages/linux/trunk/config&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;olddefconfig&lt;/span&gt;
&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The configuration difference isn't big&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gd"&gt;--- config  2022-12-18 20:51:38.269359290 +0100&lt;/span&gt;
&lt;span class="gi"&gt;+++ .config 2022-12-18 20:53:48.896025137 +0100&lt;/span&gt;
&lt;span class="gu"&gt;@@ -11,6 +11,7 @@&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;CONFIG_LD_IS_BFD=y
&lt;span class="w"&gt; &lt;/span&gt;CONFIG_LD_VERSION=23900
&lt;span class="w"&gt; &lt;/span&gt;CONFIG_LLD_VERSION=0
&lt;span class="gi"&gt;+CONFIG_RUST_IS_AVAILABLE=y&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;CONFIG_CC_CAN_LINK=y
&lt;span class="w"&gt; &lt;/span&gt;CONFIG_CC_CAN_LINK_STATIC=y
&lt;span class="w"&gt; &lt;/span&gt;CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A bit strange that &lt;code&gt;CONFIG_RUST_IS_AVAILABLE=y&lt;/code&gt; isn't set, but
&lt;code&gt;CONFIG_HAVE_RUST=y&lt;/code&gt; is enabled, so all should be good.&lt;/p&gt;
&lt;p&gt;Quite some time later, we built the ArchLinux kernel as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;make -j8 LLVM=1  15202.68s user 1464.06s system 800% cpu 34:42.57 total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But this lead to build failures in the kernel module!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;git&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fix&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m m-Double"&gt;6.1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KDIR&lt;/span&gt;&lt;span class="p"&gt;=..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;linux&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;LLVM&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;linux&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nx"&gt;PWD&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Entering&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;linux&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;MODPOST&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symvers&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvNtNtCsfATHBUcknU9_6kernel5print14format_strings4INFO&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvNtCsfATHBUcknU9_6kernel5print11call_printk&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__rust_dealloc&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__rust_realloc&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__rust_alloc&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvMs7_NtCs3yuwAp0waWO_4core3fmtNtB5_9Formatter15debug_lower_hex&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvXsS_NtNtCs3yuwAp0waWO_4core3fmt3numlNtB7_8LowerHex3fmt&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvMs7_NtCs3yuwAp0waWO_4core3fmtNtB5_9Formatter15debug_upper_hex&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvXsT_NtNtCs3yuwAp0waWO_4core3fmt3numlNtB7_8UpperHex3fmt&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_RNvXs2_NtNtNtCs3yuwAp0waWO_4core3fmt3num3implNtB9_7Display3fmt&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust_out_of_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;
&lt;span class="nx"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;suppressed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;unresolved&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;warnings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;because&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;there&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;were&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;too&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;many&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;126&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symvers&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1944&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;modpost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Leaving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;roughl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Rust&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Linux&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;linux&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These are now the compile time equivalent of the runtime errors we got before!&lt;/p&gt;
&lt;p&gt;Apparently, the ArchLinux kernel &lt;em&gt;doesn't&lt;/em&gt; have Rust support, despite it being
set in the config. Executing &lt;code&gt;make menuconfig&lt;/code&gt; reveals, that options which
conflict with &lt;code&gt;CONFIG_HAVE_RUST=y&lt;/code&gt; are enabled:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;│ Symbol: RUST [=n]                                                                                                                                  │
│ Type  : bool                                                                                                                                       │
│ Defined at init/Kconfig:1925                                                                                                                       │
│   Prompt: Rust support                                                                                                                             │
│   Depends on: HAVE_RUST [=y] &amp;amp;&amp;amp; RUST_IS_AVAILABLE [=y] &amp;amp;&amp;amp; !MODVERSIONS [=n] &amp;amp;&amp;amp; !GCC_PLUGINS [=y] &amp;amp;&amp;amp; !RANDSTRUCT [=n] &amp;amp;&amp;amp; !DEBUG_INFO_BTF [=y]       │
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Giving up for now&lt;/h2&gt;
&lt;p&gt;At this point I'd probably need to compile and run a custom kernel which
actually has Rust support enabled.&lt;/p&gt;
&lt;p&gt;I'll probably try this at a later point, but for now I'll give it a bit more
time to settle.&lt;/p&gt;
&lt;p&gt;I'm also considering reporting this to the ArchLinux developers, but I'm not
sure how much priority Rust kernel modules should have, given the early stage.
I'll probably wait until Linux 6.2 is released before investigating further.&lt;/p&gt;</content><category term="2022"></category><category term="rust"></category><category term="kernel"></category><category term="Linux"></category><category term="ArchLinux"></category></entry><entry><title>Learning Ruby Like it's 2009 — Part 1</title><link href="https://blog.rnstlr.ch/learning-ruby-like-its-2009-part-1.html" rel="alternate"></link><published>2022-02-15T00:00:00+01:00</published><updated>2022-02-15T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2022-02-15:/learning-ruby-like-its-2009-part-1.html</id><summary type="html">&lt;p&gt;First part of my journey to learn ruby and rails. Focusing on bundler and version management.&lt;/p&gt;</summary><content type="html">&lt;p&gt;As announced in my previous post I will document my journey of learning Ruby
and especially Ruby on Rails. Or how a friend of mine put it after hearing
about my idea:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blogging about Rails like it's 2009 😄.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.dbrgn.ch/about/"&gt;@dbrgn&lt;/a&gt; February, 2022&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Learning Ruby like it's 2009&lt;/h2&gt;
&lt;p&gt;One of my first exercises was to investigate a case where an automatic update
done by the &lt;a href="https://depfu.com/"&gt;depfu&lt;/a&gt;-bot failed the tests and as such
couldn't be merged. It looked similar to
&lt;a href="https://github.com/renuo/pingen-client/pull/15"&gt;this&lt;/a&gt; but failed the tests and
had a lot more updates including some major ones.&lt;/p&gt;
&lt;p&gt;Already knowing a few programming languages and package managers my first idea
was: «Easy: Let's just first do all the minor and patch upgrades and see if
this breaks anything». Assuming the gems follow semantic versioning this should
just work.&lt;/p&gt;
&lt;h2&gt;Bundler and version specifier&lt;/h2&gt;
&lt;p&gt;First thing I noticed is that Bundler, while recommending semantic versioning,
doesn't directly support semantic version specifiers like for example
&lt;a href="https://doc.rust-lang.org/cargo/reference/semver.html"&gt;cargo&lt;/a&gt; does. It does
support defining your own ranges like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;= 2.2.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt; 3.0&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or using the &lt;code&gt;~&amp;gt;&lt;/code&gt; operator which achives the same thing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.2&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For
&lt;a href="https://doc.rust-lang.org/cargo/reference/resolver.html#semver-compatibility"&gt;cargo&lt;/a&gt;
one would just specify&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2.2.0&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;with the same result and in
&lt;a href="https://docs.npmjs.com/about-semantic-versioning"&gt;npm&lt;/a&gt; we can use the &lt;code&gt;^&lt;/code&gt;
operator:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;^2.2.0&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For bundler there is an &lt;a href="https://github.com/rubygems/rubygems/issues/1919"&gt;issue on
GitHub&lt;/a&gt; to add a SemVer
operator since 2017.&lt;/p&gt;
&lt;p&gt;The code base I was working on didn't have a lot of version specifiers. The
reason is that Renuo generally tries to use the latest versions of all Ruby
dependencies for applications. This is possible since we have extensive test
suites which we trust and it enables an open and fast upgrade path for
customers if they need new features in the future.&lt;/p&gt;
&lt;p&gt;Exceptions are made if a gem update causes problems or if it is a very central
gem like rails. To still have reproducible environments for applications the
&lt;code&gt;Gemfile.lock&lt;/code&gt; file is of course checked into source control as it is &lt;a href="https://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/"&gt;best
practice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So just running &lt;code&gt;bundle update&lt;/code&gt; would update to the latest major version of
almost all dependencies, which was exactly the thing I didn't want to do.&lt;/p&gt;
&lt;p&gt;Luckily bundler has the
&lt;a href="https://bundler.io/v2.3/man/bundle-update.1.html"&gt;&lt;code&gt;--minor&lt;/code&gt;&lt;/a&gt; option which one
can pass to the &lt;code&gt;update&lt;/code&gt; command which should &lt;em&gt;Prefer updating only to next
minor version.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;A minor inconvenience&lt;/h2&gt;
&lt;p&gt;So here we go executing &lt;code&gt;bundler update --minor&lt;/code&gt;! And the result was...
Nothing! It just didn't update anything!&lt;/p&gt;
&lt;p&gt;Confused I started reading up documentation, version specifiers, tried to
update individual packages with &lt;code&gt;bundle update --minor $package&lt;/code&gt; (which worked)
and finally found &lt;a href="https://github.com/rubygems/rubygems/issues/3360"&gt;https://github.com/rubygems/rubygems/issues/3360&lt;/a&gt;. Apparently
it's a known issue since 2018 that bundle update just fails to do the &lt;code&gt;--patch&lt;/code&gt;
and &lt;code&gt;--minor&lt;/code&gt; updates.&lt;/p&gt;
&lt;p&gt;From the same GitHub issue I copied the handy shell one-liner &lt;code&gt;bundle update
$(bundle list | awk '$1 ~ /^\*/ {print $2}' | grep -v bundler) --minor&lt;/code&gt; which
did the job!&lt;/p&gt;
&lt;p&gt;Doing just the semver compatible updates worked, all the tests did pass and we
could deploy it. My shattered trust in the Ruby ecosystem from the &lt;code&gt;bunlder&lt;/code&gt;
failure was restored!&lt;/p&gt;
&lt;p&gt;All in all bundler is a decent package manager and I love that the Ruby
ecosystem seems to embrace semantic versioning and one can do fearless upgrades
to get bug- and security fixes of the dependencies.&lt;/p&gt;</content><category term="2022"></category><category term="learning"></category><category term="ruby"></category><category term="bundler"></category><category term="learning-ruby-like-its-2009"></category></entry><entry><title>Starting to blog again</title><link href="https://blog.rnstlr.ch/starting-to-blog-again.html" rel="alternate"></link><published>2022-02-10T00:00:00+01:00</published><updated>2022-02-10T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2022-02-10:/starting-to-blog-again.html</id><summary type="html">&lt;p class="first last"&gt;Why I want to start blogging again&lt;/p&gt;
</summary><content type="html">&lt;p&gt;My &lt;a class="reference external" href="https://blog.rnstlr.ch/visiting-hacklab01.html"&gt;last post&lt;/a&gt; on this blog is from 2017 when I was traveling around Europe to
visit different hackerspaces. I have fond memories of that time and still
regret not finishing the post about visiting &lt;a class="reference external" href="https://wiki.ljudmila.org/Main_Page"&gt;LJUDMILA&lt;/a&gt; in Sarajevo. I also
regret that I immediately stopped writing blog posts after that and never wrote
a summary of my &amp;quot;Tour de Hackerspace&amp;quot;.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/rnestler/rnestler.github.io/blob/main/content/articles/2017/2017-05-20_visiting_ljudmila.rst"&gt;drafts&lt;/a&gt; of these &lt;a class="reference external" href="https://github.com/rnestler/rnestler.github.io/blob/main/content/articles/2017/2017-05-20_tour_de_hackerspace_wrap_up.rst"&gt;posts&lt;/a&gt; lingering around in the git repository serve as a
reminder of this tragedy 😉.&lt;/p&gt;
&lt;div class="section" id="a-new-beginning"&gt;
&lt;h2&gt;A new beginning&lt;/h2&gt;
&lt;p&gt;Anyway: A lot has changed since then and beginning this year I started a new
job at &lt;a class="reference external" href="https://www.renuo.ch/"&gt;Renuo&lt;/a&gt;. Previously I was working at &lt;a class="reference external" href="https://www.sensirion.com/"&gt;Sensirion&lt;/a&gt; for 8 years, where I
was doing various kind of software development, ranging from embedded C++,
developing a sensor evaluation desktop software in Python, creating a
demonstrator prototype in Rust for an automotive PM2.5 sensor to developing
infrastructure on Azure to power remote running long term studies of various
sensors.&lt;/p&gt;
&lt;p&gt;So switching to a software agency that almost exclusively does Web development
with Ruby on Rails is quite a big change for me. Especially since I never
really worked with Ruby or Rails before.&lt;/p&gt;
&lt;p&gt;Since I find my expedition into this new terrain quite exciting, I want to
share my experience of learning Ruby on this blog!&lt;/p&gt;
&lt;/div&gt;
</content><category term="2022"></category><category term="meta"></category><category term="blog"></category></entry><entry><title>Visiting hacklab01</title><link href="https://blog.rnstlr.ch/visiting-hacklab01.html" rel="alternate"></link><published>2017-05-17T00:00:00+02:00</published><updated>2017-05-17T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-05-17:/visiting-hacklab01.html</id><summary type="html">&lt;p class="first last"&gt;Visiting &lt;a class="reference external" href="https://hacklab01.org/"&gt;hacklab01&lt;/a&gt; in Zagreb&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After an entertaining BlaBlaCar ride with a mixed group of 7 Croatians who did
enjoy a weekend of river rafting, I arrived in Zagreb at around 22:00.  I
agreed with Vedran from &lt;a class="reference external" href="https://hacklab01.org/"&gt;hacklab01&lt;/a&gt; to meet in front of the building.&lt;/p&gt;
&lt;p&gt;During my email conversations with Vedran I kinda realized, that I'm not just
visiting a hackerspace, but an alternative culture centre called Medika &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt;
which is run by &lt;a class="reference external" href="http://attack.hr/"&gt;AKC Attack&lt;/a&gt;.  So upon arrival I was quite enchanted by the
charm of the place.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_3.jpg"&gt;&lt;img alt="Entry hall in Medika" src="/images/tour_de_hackerspace/hacklab01/hacklab01_3.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Entry hall in Medika&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_entry.jpg"&gt;&lt;img alt="Entry to hacklab01" src="/images/tour_de_hackerspace/hacklab01/hacklab01_entry.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Entry to hacklab01&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Since Vedran was in the middle of a meeting, I just sat down and started to
talk to a few members.  One girl brought some cookies made with cricket flour.
Since we did a similar things with a few of the coredump members some months
ago &lt;a class="footnote-reference" href="#footnote-2" id="footnote-reference-2"&gt;[2]&lt;/a&gt;, this immediately sparked an interesting discussion about meat
production, insect growing and that strangely no company shares &lt;em&gt;how&lt;/em&gt; to grow
insects by yourself.  Also quite a few members were interested in Rust, so we
decided that I will give a short introduction to Rust on Tuesday.&lt;/p&gt;
&lt;p&gt;When Vedran had finished his meeting he gave me a quick show around.  The
hackerspace itself consists of a single room, containing an electronics
workspace, some tables for laptop work, couches and a bunch of other stuff.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_room.jpg"&gt;&lt;img alt="The hacklab01 room" src="/images/tour_de_hackerspace/hacklab01/hacklab01_room.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;The hacklab01 room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But since there are various other NGOs and artist in the same complex, there
was plenty of stuff to see! &lt;a class="footnote-reference" href="#footnote-3" id="footnote-reference-3"&gt;[3]&lt;/a&gt;&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_hallway.jpg"&gt;&lt;img alt="Hallway in Medika" src="/images/tour_de_hackerspace/hacklab01/hacklab01_hallway.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Hallway in Medika&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The rooms for residents of Medika, including showers and toilets, are separated
from the rest of the building.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_1.jpg"&gt;&lt;img alt="Door to the living part of Medika" src="/images/tour_de_hackerspace/hacklab01/hacklab01_1.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Door to the living part of Medika&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sadly I didn't take pictures of every room.  In the &amp;quot;headquarter&amp;quot; of the
building I had the pleasure to meet Dina.  She took up the challenge to manage
this quite chaotic space two weeks ago.  The government announced them a week
ago, that they will need to move out &lt;a class="footnote-reference" href="#footnote-4" id="footnote-reference-4"&gt;[4]&lt;/a&gt;.  Due to this the week was rather
stressful for her and most of the people living or working in Medika.  On the
bright side this also forced them to closely work together, which strengthened
their the Medika community as a whole.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_2.jpg"&gt;&lt;img alt="&amp;quot;headquarters&amp;quot; of Medika" src="/images/tour_de_hackerspace/hacklab01/hacklab01_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;&amp;quot;headquarters&amp;quot; of Medika&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They told me that similar stuff happened before and that the situation as a
whole is kind of strange.  On one hand the government supports some of the
projects running in Medika financially, on the other hand there is a plan to
build some kind of congress center in this area.&lt;/p&gt;
&lt;p&gt;I agreed with Vedran to spend my night in the hacklab, so he handed me the keys
&lt;a class="footnote-reference" href="#footnote-5" id="footnote-reference-5"&gt;[5]&lt;/a&gt; and showed me where toilet, shower are located.  They even would have
provided me with a sleeping bag, shampoo and everything else, since I forgot to
tell them that I have all that stuff with me!  I found this level of
hospitality quite amazing and welcoming!&lt;/p&gt;
&lt;p&gt;The next day Vedran showed my around the old town of the city in the afternoon.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_city_6.jpg"&gt;&lt;img alt="The national theatre" src="/images/tour_de_hackerspace/hacklab01/hacklab01_city_6.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;The national theatre&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When we got a coffee, we started to talk about the problems they have with the
government.  He told me it is probably related to the elections which will be
soon and the major just needs to get some attention.  He also told me that the
major is charged with &lt;a class="reference external" href="http://www.croatiaweek.com/zagreb-mayor-arrested-for-corruption/"&gt;corruption&lt;/a&gt;.  I was kind of shocked, that a major can
be charged because of corruption, but doesn't need to resign because of that.
According to an &lt;a class="reference external" href="https://www.unodc.org/documents/data-and-analysis/statistics/corruption/Croatia_corruption_report_web_version.pdf"&gt;UN report&lt;/a&gt; corruption and bribery is very common in Croatia,
so maybe the population just got used to it.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_city_2.jpg"&gt;&lt;img alt="View over the old town" src="/images/tour_de_hackerspace/hacklab01/hacklab01_city_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;View over the old town&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The rest of the afternoon I spent in the hackerspace itself, writing my blog
posts, preparing for the Rust workshop and talking to the members which were
present.  Later in the evening I went to get some beers with Vedran in a nice
bar close to Medika.  I met quite an interesting guy there, who explained me
the history of Croatia, its cultural inheritance and how lots of it got
destroyed during the time of the Austrian Hungarian empire and the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Ottoman_wars_in_Europe"&gt;Ottoman
wars&lt;/a&gt;.  We also talked about the difficult economic situation in Croatia
including the recent &lt;a class="reference external" href="http://www.dw.com/en/croatias-agrokor-business-empire-too-big-to-fail/a-38757333"&gt;collapse of Agrokor&lt;/a&gt;, Croatias biggest business empire,
which has the potential to bring the whole country down.&lt;/p&gt;
&lt;p&gt;Tuesday May 16th.  This day marked the deadline which the government has given
Medika to move out of the space.  But in the meantime they met with some of the
government's representatives for this matter and got assured that the could
stay.  Apparently the whole thing about them needing to move out was triggered
because the building doesn't fit the fire safety requirements anymore, so the
government would need to fix it.  But they try to find a way without them
needing to move out completely and later move back in.&lt;/p&gt;
&lt;p&gt;Also, probably because of all the media attention, a girl on Facebook
independently organized a party in Medika to show support for the place.  So
when I got up people where already preparing stuff for the party.&lt;/p&gt;
&lt;p&gt;Since it was very nice weather I decided to take a look at the Botanics garden
in Zagreb.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_botanic_garden_4.jpg"&gt;&lt;img alt="Botanics garden" src="/images/tour_de_hackerspace/hacklab01/hacklab01_botanic_garden_4.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Botanics garden&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After that I wandered around the city and got some coffee (and somehow got
member of a &lt;a class="reference external" href="https://www.facebook.com/pages/Booksa/101023279982162"&gt;book club&lt;/a&gt;).  This lead to me almost missing the introduction to
Rust workshop I agreed to give in hacklab01!  So I rushed back to the space and
shortly after had an awesome time helping people getting started with Rust.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_rust_intro.jpg"&gt;&lt;img alt="Introduction to Rust" src="/images/tour_de_hackerspace/hacklab01/hacklab01_rust_intro.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Introduction to Rust&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After the workshop we joined the party&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/hacklab01/hacklab01_party.jpg"&gt;&lt;img alt="Party time!" src="/images/tour_de_hackerspace/hacklab01/hacklab01_party.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Party time!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Vedran suggested that I also visit another hackerspace in Zagreb, namely
RADIONA.  One member of them offered to pick up by car at Medika and drive us
to the space.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/radiona/radiona_1.jpg"&gt;&lt;img alt="Electronic lab and 3D printers in RADIONA" src="/images/tour_de_hackerspace/radiona/radiona_1.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Electronic lab and 3D printers in RADIONA&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/radiona/radiona_2.jpg"&gt;&lt;img alt="Famous Nikola Tesla in RADIONA" src="/images/tour_de_hackerspace/radiona/radiona_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Famous Nikola Tesla in RADIONA&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It is a rather small space, even smaller than coredump, but the community is
very alive.  One of the members built his own electric skateboard and we had
lots of fun talking about the design of it and testing it.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/radiona/radiona_skate_board.mp4"&gt;&lt;img alt="DIY electric skateboard" src="/images/tour_de_hackerspace/radiona/radiona_skate_board_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;DIY electric skateboard&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After our short visit, we returned back to Medika, enjoying the party for the
rest of the evening.&lt;/p&gt;
&lt;p&gt;The next day it was already time to leave. I met with Vedran to have some
breakfast and we talked about the various projects they run.  Medika itself
hosts many artists and arts projects, amongst others&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A &lt;a class="reference external" href="http://attack.hr/foto-filmski-studio-medika/?lang=en"&gt;photo film studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="http://attack.hr/galerija-siva/?lang=en"&gt;gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="http://attack.hr/klub-attack/?lang=en"&gt;club&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="http://attack.hr/faki-19/?lang=en"&gt;theatre group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vedran and Dina are especially involved in the glitch art community.  They
organize a festival called &lt;a class="reference external" href="http://fubar.space/"&gt;fu:bar&lt;/a&gt; and developed a gallery management
software called &lt;a class="reference external" href="http://pivilion.net/"&gt;pivilion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The time I spent at hacklab01 / Medika was truly amazing!  I've seen so many
things and met so many interesting people!  If you want to visit them as well
you may apply for their &lt;a class="reference external" href="https://hacklab01.org/hackn3t"&gt;hackn3t&lt;/a&gt; program, a hackers residency program.  I
basically means, they will try to cover for your travel costs if you visit them
and present some project or idea or whatever.&lt;/p&gt;
&lt;p&gt;But as much as I enjoyed my time in Zagreb, I was also looking forward to my
next destination Ljubljana, Slovenia!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Medika is actually the name of a company which was located there some time ago&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;We ordered stuff from &lt;a class="reference external" href="https://insekten-shop.ch/"&gt;https://insekten-shop.ch/&lt;/a&gt; and tried out different recipies&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;You can get an overview of organisations / projects here: &lt;a class="reference external" href="http://attack.hr/projekti/?lang=en"&gt;http://attack.hr/projekti/?lang=en&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://attack.hr/medika-ostaje/?lang=en"&gt;http://attack.hr/medika-ostaje/?lang=en&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I was again impressed by the level of trust!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Sarajevo</title><link href="https://blog.rnstlr.ch/visiting-sarajevo.html" rel="alternate"></link><published>2017-05-14T00:00:00+02:00</published><updated>2017-05-14T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-05-14:/visiting-sarajevo.html</id><summary type="html">&lt;p class="first last"&gt;Visiting Sarajevo&lt;/p&gt;
</summary><content type="html">&lt;p&gt;My BlaBlaCar ride &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt; to Sarajevo was a very pleasant experience.  My driver
was really nice, we talked a lot, and he explained my the different places
while we were passing by.  I loved the experience of entering Bosnia when
suddenly the whole landscape looks different, with lots of hills and forests.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_travel_2.jpg"&gt;&lt;img alt="View during a break on the car ride" src="/images/tour_de_hackerspace/sarajevo/sarajevo_travel_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;View during a break on the car ride&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We then arrived in the early afternoon in Sarajevo.  Quite early during my
&amp;quot;Tour de Hackerspace&amp;quot; &lt;a class="reference external" href="https://twitter.com/czesiekhaker"&gt;czesiek&lt;/a&gt;, a close friend of &lt;a class="reference external" href="https://twitter.com/andrewhobden"&gt;hoverbear&lt;/a&gt; and
&lt;a class="reference external" href="https://twitter.com/NGC_3572"&gt;thomascovenant&lt;/a&gt;, offered &lt;a class="reference external" href="https://twitter.com/czesiekhaker/status/852902273189634049"&gt;via Twitter&lt;/a&gt; to show me around Sarajevo when I get
there for a visit, which I found quite amazing!  So I arranged with him to
couch surf at his place and meet him there in the evening.&lt;/p&gt;
&lt;p&gt;Since I had the whole afternoon to explore the city I decided to store my
luggage in a nearby hostel and wander around the old town of the city.  I had
some of the &lt;a class="reference external" href="https://duckduckgo.com/?q=bosnian+coffee&amp;amp;yeg=B&amp;amp;iax=1&amp;amp;ia=images"&gt;Bosnian coffee&lt;/a&gt; and tried the Ćevapi for late lunch.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_city_2.jpg"&gt;&lt;img alt="Sarajevo old town" src="/images/tour_de_hackerspace/sarajevo/sarajevo_city_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Sarajevo old town&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;At some point during the afternoon I noticed that I forgot my Ferris plushie in
the BlaBlaCar!  So I contacted the driver again and we arranged to meet the
next day in the morning.&lt;/p&gt;
&lt;p&gt;In the evening I met with czesiek and after placing my luggage in his flat, we
proceeded to go to a micro brewery to get some of the local beer.  Afterwards
we went to a few other places and at one of them ended up meeting some Australian
guys I've seen earlier in the afternoon in the old town.  I always love meeting
other people who are travelling because they are most of the time easy going
and have some interesting stories to tell.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_city_6.jpg"&gt;&lt;img alt="Sarajevo during the night" src="/images/tour_de_hackerspace/sarajevo/sarajevo_city_6.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Sarajevo during the night&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We ended up having lots of fun this night which lead to me having a very hard
time getting up at 8:00 to retrieve my Ferris.  But it amazed me how when
meeting other hackers during my trip I feel connected to them instantly as if
we knew each others for years.&lt;/p&gt;
&lt;p&gt;Since the weather was just too nice, I spent the next day visiting the &lt;a class="reference external" href="http://www.openstreetmap.org/way/23723340"&gt;Bijela
Tabija castle&lt;/a&gt; where one has a nice view over the city.  During my way up I
also enjoyed exploring this part of the city which consist of many small
streets and alleyways.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_city_8.jpg"&gt;&lt;img alt="On my way to Bijela Tabija" src="/images/tour_de_hackerspace/sarajevo/sarajevo_city_8.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;On my way to Bijela Tabija&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_city_14.jpg"&gt;&lt;img alt="Ruins of the Bijela Tabija castle" src="/images/tour_de_hackerspace/sarajevo/sarajevo_city_14.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Ruins of the Bijela Tabija castle&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_city_17.jpg"&gt;&lt;img alt="View over Sarajevo" src="/images/tour_de_hackerspace/sarajevo/sarajevo_city_17.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;View over Sarajevo&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the evening we had again lots of fun, this time visiting a shisha bar /
hookah lounge where there was some live music.  In the meantime I found out,
that the hackerspace which is mentioned in the HackerspaceWiki probably
doesn't exist.  So during the evening I talked with czesiek and his friends
about founding one in Sarajevo.&lt;/p&gt;
&lt;p&gt;The next day I slept in, met with czesiek for lunch and then proceeded
to visit his workplace in Sarajevo.  He works for the &lt;a class="reference external" href="https://www.occrp.org/index.php"&gt;Organized Crime and
Corruption Reporting Project&lt;/a&gt; (OCCRP), which does a great job supporting
investigative journalism all over the world.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_occrp_office.jpg"&gt;&lt;img alt="Door to czesiek's office in the OCCRP place" src="/images/tour_de_hackerspace/sarajevo/sarajevo_occrp_office.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Door to czesiek's office in the OCCRP place&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Since I wanted to avoid taking pictures of any sensitive material I just took a
picture of the door to the office. ;)&lt;/p&gt;
&lt;p&gt;czesiek described his work as follows:&lt;/p&gt;
&lt;blockquote&gt;
I'm a hacker at OCCRP, I'm in charge of developing editorial pipeline
(newsroom software geared towards investigative journalist teams; we plan
to opensource it after internal testing) and digital security.&lt;/blockquote&gt;
&lt;p&gt;After my short visit, I proceeded to verify if the hackerspace in Sarajevo
exists or not.  When arriving at the place it's supposed to be I found an
interesting technology hub called &lt;a class="reference external" href="http://www.hub387.com/"&gt;HUB387&lt;/a&gt;.  Nobody there heard about a
hackerspace, so I changed the wiki entry to reflect that.  Because I was
already there and had no other plans, I rented a desk at the &lt;a class="reference external" href="http://www.nest71.com/"&gt;NEST71&lt;/a&gt;
coworking space for €10 and spent some time working on this blog post.&lt;/p&gt;
&lt;p&gt;In the evening there was a party at czesiek's house and I had the pleasure to
meet more of the OCCRP crew and other interesting people.  I enjoyed the fact
that our group consisted of people from 7 different nations (Polish, French,
Bosnian, Mexican, American, British and Swiss)!&lt;/p&gt;
&lt;p&gt;Despite of having some slight trouble getting up on Saturday morning, czesiek
and I attended a &lt;a class="reference external" href="https://www.mreza-mira.net/vijesti/razno/lgbti-zajednica-odrzala-lekciju-vlastima/"&gt;protest&lt;/a&gt; against violence towards LGBT people.  It was a
very peaceful and somewhat cheerful event.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="http://static.ba.n1info.com/Picture/112125/jpeg/Sequence-01.Still011.jpg"&gt;&lt;img alt="Protesters, source: http://ba.n1info.com/a153795/Vijesti/Vijesti/Odrzan-protest-LGBTI-osoba.html" src="http://static.ba.n1info.com/Picture/112125/jpeg/Sequence-01.Still011.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Protesters, source: &lt;a class="reference external" href="http://ba.n1info.com/a153795/Vijesti/Vijesti/Odrzan-protest-LGBTI-osoba.html"&gt;http://ba.n1info.com/a153795/Vijesti/Vijesti/Odrzan-protest-LGBTI-osoba.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After the protest we went for some coffee and I had the opportunity to meet
interesting people including a German guy who works for the European embassy.&lt;/p&gt;
&lt;p&gt;In the afternoon I visited the &lt;a class="reference external" href="http://museum.warchildhood.com/"&gt;War Childhood Museum&lt;/a&gt;.  It was a very heart
touching experience, reading the stories of how children were experiencing the
war.  Also, after more than 20 years, marks of the war are still visible
in Sarajevo.&lt;/p&gt;
&lt;p&gt;In the evening we went to the after party of the protest and again I met some
amazing people, amongst others Emina Bošnjak from the &lt;a class="reference external" href="http://soc.ba/en/about-us/team/"&gt;Sarajevo Open Centre&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next day I had a BlaBlaCar booked for the early afternoon, so we had bearly
enough time to go up to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Trebević"&gt;Trebević&lt;/a&gt; mountain, enjoy the view and walk the way
down.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/sarajevo/sarajevo_mountain_2.jpg"&gt;&lt;img alt="View from Trebević" src="/images/tour_de_hackerspace/sarajevo/sarajevo_mountain_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;View from Trebević&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I really loved my stay in Sarajevo.  czesiek is an awesome host and I can
highly recommend to stay with him if you are in Sarajevo ;)&lt;/p&gt;
&lt;p&gt;However, next stop: Zagreb, Croatia!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;This was my first BlaBlaCar ride. I can really recommend to travel with it!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Hacklab Belgrade</title><link href="https://blog.rnstlr.ch/visiting-hacklab-belgrade.html" rel="alternate"></link><published>2017-05-10T00:00:00+02:00</published><updated>2017-05-10T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-05-10:/visiting-hacklab-belgrade.html</id><summary type="html">&lt;p class="first last"&gt;Visiting the &lt;a class="reference external" href="http://oosm.org/"&gt;Hacklab Belgrade&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After the quite long train ride from Timișoara to Belgrade via Budapest, I
finally arrived in Belgrade around 16:00.  Like most of the time, the first
thing I did was getting some local currency, sitting in a café and figure out
where I can stay.  I chose the &lt;a class="reference external" href="https://www.booking.com/hotel/rs/hostel-white-town.de.html"&gt;Hostel White Town&lt;/a&gt; because it is really close
to the &lt;a class="reference external" href="http://oosm.org/"&gt;Hacklab Belgrade&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This turned out to be a great choice!  It's not really a hostel, but more of a
guest house.  And the owner is one of the most lovely persons I've ever met!
She tries hard to make your stay as pleasant as possible and it's also fun to
hang out with her.  For example she provided me with a mobile hotspot so I
could have access to the internet on the go.  I also met a Russian guy who
lives there since a few month.  It was fun to hang out with him and he showed
me some cool places in the city.&lt;/p&gt;
&lt;p&gt;Sadly the hackerspace wasn't open during my stay.  But I contacted them on
their mailing list and one of them told me that we could meet the next day in
the afternoon so I can take a look at the hacklab.&lt;/p&gt;
&lt;p&gt;So the next day I took a look at the city and then proceeded to the hacklab in
the afternoon.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/belgrad/belgrad_city.jpg"&gt;&lt;img alt="View in Belgrade where the Danube and Sava rivers join" src="/images/tour_de_hackerspace/belgrad/belgrad_city.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;View in Belgrade where the Danube and Sava rivers join&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The hacklab is actually located in a former flat and thus contains a nice
kitchen and bathroom.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/belgrad/belgrad_main_room.jpg"&gt;&lt;img alt="Main room of the hacklab" src="/images/tour_de_hackerspace/belgrad/belgrad_main_room.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Main room of the hacklab&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The space basically consists of the main room which has some working places and
sofas.  There is also a place to do electronics work.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/belgrad/belgrad_electronics_work.jpg"&gt;&lt;img alt="Electronics work place" src="/images/tour_de_hackerspace/belgrad/belgrad_electronics_work.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Electronics work place&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They also have a second room which provides some more working space.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/belgrad/belgrad_room_2.jpg"&gt;&lt;img alt="Second room" src="/images/tour_de_hackerspace/belgrad/belgrad_room_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Second room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;An interesting thing in their space is the book scanning machine.  One can use
it to digitize books.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/belgrad/belgrad_book_scanning.jpg"&gt;&lt;img alt="Book scanning machine" src="/images/tour_de_hackerspace/belgrad/belgrad_book_scanning.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Book scanning machine&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After showing me around we got to talk about what they mainly do in the space.
He told me they have lots of meetups and language training courses.  They
provide these as a kind of free education, because a lot of students who
finished studying can't find a job related to their field and thus try to find
a programming related job.&lt;/p&gt;
&lt;p&gt;So after my rather short visit in both Belgrade and the hacklab, I continued my
travel to Sarajevo!&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Plan Zero</title><link href="https://blog.rnstlr.ch/visiting-plan-zero.html" rel="alternate"></link><published>2017-05-08T00:00:00+02:00</published><updated>2017-05-08T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-05-08:/visiting-plan-zero.html</id><summary type="html">&lt;p class="first last"&gt;Visiting the &lt;a class="reference external" href="http://planzero.ro"&gt;Plan Zero&lt;/a&gt; hackerspace&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After a quite relaxing train ride, I arrived in Timișoara at 21:30.  After
contacting the hackerspace via email, Mihai, a member of the space, suggested
that he can pick me up from the train station and I can spend the night in the
hackerspace.  After some difficulties finding each other at the train station
we went directly to the space.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_entry.jpg"&gt;&lt;img alt="Entry to the Plan Zero hackerspace" src="/images/tour_de_hackerspace/plan_zero/plan_zero_entry.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Entry to the &lt;a class="reference external" href="http://planzero.ro"&gt;Plan Zero&lt;/a&gt; hackerspace&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;He then gave me a short tour around the space, especially showing me their (or
mainly his) awesome collection of fully working retro computers.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_retro_3.jpg"&gt;&lt;img alt="Retro computer collection" src="/images/tour_de_hackerspace/plan_zero/plan_zero_retro_3.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Retro computer collection&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Amongst others they own a C-64, an Amiga, Apple-II clones and a &lt;a class="reference external" href="/images/tour_de_hackerspace/plan_zero/plan_zero_retro_2.jpg"&gt;Mac Classic&lt;/a&gt;.
After the quick show around he just handed me the keys for the space, showed me
the couch and explained me which doors I need to close over night.  I was
impressed by this level of trust they showed me!&lt;/p&gt;
&lt;p&gt;So after hacking a &lt;em&gt;tiny bit&lt;/em&gt; on the C-64 while getting constant attention from
the cat which lives in the space, I went to sleep around 3 in the morning.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_c64.mp4"&gt;&lt;img alt="Having fun with the C-64" src="/images/tour_de_hackerspace/plan_zero/plan_zero_c64.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Having fun with the C-64&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The next day I explored the city and met with Mihai in the afternoon.  We then
took a quick look at the art atelier where his wife works.  After that we
returned to the hackerspace.&lt;/p&gt;
&lt;p&gt;Like almost every hackerspace Plan Zero also has a main room.  In contrast to
other spaces the main room is more about hanging out and eating than working.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_main_room.jpg"&gt;&lt;img alt="Main room" src="/images/tour_de_hackerspace/plan_zero/plan_zero_main_room.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Main room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Next there is a room with electronics equipment 3D printers and work places.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_electronics_working_room.jpg"&gt;&lt;img alt="Electronics / working room" src="/images/tour_de_hackerspace/plan_zero/plan_zero_electronics_working_room.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Electronics / working room&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_3d_printers.jpg"&gt;&lt;img alt="3D printers" src="/images/tour_de_hackerspace/plan_zero/plan_zero_3d_printers.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;3D printers&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;While three 3D printers are fully operational, one of the members is building a
forth printer next to them.&lt;/p&gt;
&lt;p&gt;The space is also well equipped for most mechanic needs, with a nice workshop.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_work_shop_2.jpg"&gt;&lt;img alt="Workshop tooling" src="/images/tour_de_hackerspace/plan_zero/plan_zero_work_shop_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Workshop tooling&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Also similar to other spaces there is a small storage room for random stuff.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_storage.jpg"&gt;&lt;img alt="Storage room" src="/images/tour_de_hackerspace/plan_zero/plan_zero_storage.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Storage room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After I spent some time taking a closer look at the space, taking pictures and
talking to the members, we ordered the classic hackers dinner (pizza).  Although
spending the night at the hackerspace was nice, it didn't have a shower, so I
booked a hostel nearby.  Despite their website saying one can check in until
23:00, when we arrived there, nobody was present.  Luckily Claudiu and Andrei
helped me contacting the owner of the hostel so he could let me in.&lt;/p&gt;
&lt;p&gt;When everything related to the hostel was resolved, they showed me some of the
cooler bars in Timișoara, where we had some beer, live music and a fun time
together!  What I learned that night was, that the Romanians party a bit harder
then what I can handle, so I was glad when we ordered a taxi together to get
back to my hostel at 5am ;)&lt;/p&gt;
&lt;p&gt;After sleeping in and having some late breakfast I returned to the hackerspace.&lt;/p&gt;
&lt;p&gt;Mihai was also at the space and tried to hook up an Amiga with a floppy
emulator which allows to connect USB thumb drives with images on it.  After
trying several USB drives and bricking one due to wrong wiring, he finally got
it working:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/plan_zero/plan_zero_retro_4.jpg"&gt;&lt;img alt="Amiga running a disk image with the floppy emulator" src="/images/tour_de_hackerspace/plan_zero/plan_zero_retro_4.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Amiga running a disk image with the floppy emulator&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When planning for my next destination I realized that traveling through the
Balkan area by train is harder than I thought.  Apparently the direct line from
Timișoara to Belgrade got canceled some time ago (But was still present on the
InterRail map).  So I tried to find a ride on BlaBlaCar which worked, but then
the ride got cancelled some hours before the start because the driver had
problems with his car.  So in order to get to Belgrade I needed to take an 18h
train ride via Budapest.  Well, this at least gave me some time to write this
blog post ;)&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Hackerspace Szeged</title><link href="https://blog.rnstlr.ch/visiting-hackerspace-szeged.html" rel="alternate"></link><published>2017-05-06T00:00:00+02:00</published><updated>2017-05-06T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-05-06:/visiting-hackerspace-szeged.html</id><summary type="html">&lt;p class="first last"&gt;Visiting the Hackerspace Szeged&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After returning from RustFest I spent one more day in Budapest to pick up my
luggage from the Hackerspace Budapest and to recover a bit from the lack of
sleep during my visit in Kiev.&lt;/p&gt;
&lt;p&gt;Since I had some trouble contacting the &lt;a class="reference external" href="http://www.hackerspace-szeged.org/"&gt;Hackerspace Szeged&lt;/a&gt; and I didn't
bother to book a hostel or anything, I just took the train to Szeged and hoped
for the best.  As it turns out once more, the advantage of not planing anything
at all is, that one can't get disappointed and is open to positive surprises!&lt;/p&gt;
&lt;p&gt;This time I had the pleasure to meet Zsuzsa who studies in Budapast and lives
in Szeged.  Upon hearing about my trip, she spontaneously invited me to stay
with her and Balint in their apartment.  Sometimes it's hard to grasp for me
how incredibly lucky I am to meet all these amazing people during my travel!&lt;/p&gt;
&lt;p&gt;So after sharing some pizza for dinner with them I tried to visit the
Hackerspace Szeged, since they told me they had a lock picking workshop this
evening.  Sadly I arrived to late at their space and their workshop was already
over and they left the space.  I guess this is one of the downsides of not
planing ;)&lt;/p&gt;
&lt;p&gt;Anyway, I spent the next day taking a look at the wonderful city of Szeged,
including a visit to the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Szeged_witch_trials"&gt;&amp;quot;Witch Island&amp;quot; area&lt;/a&gt; and the local zoo.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/szeged/city/szeged_city_5.jpg"&gt;&lt;img alt="Szeged Cathedral" src="/images/tour_de_hackerspace/szeged/city/szeged_city_5.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Szeged Cathedral&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the evening I finally managed to pay a short visit to the Hackerspace
Szeged.  They had a follow up of their lock picking workshop of the day before,
so they explained me how to theoretically pick combination locks.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/szeged/szeged_lock.jpg"&gt;&lt;img alt="Combination lock for the workshop" src="/images/tour_de_hackerspace/szeged/szeged_lock.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Combination lock for the workshop&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They are a young and rather small hackerspace, but active nevertheless!  The
space consist of the classical main room:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/szeged/szeged_main_room_1.jpg"&gt;&lt;img alt="Main room of the Hackerspace Szeged" src="/images/tour_de_hackerspace/szeged/szeged_main_room_1.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Main room of the Hackerspace Szeged&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And a second smaller room which they mostly use as a storage room.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/szeged/szeged_second_room.jpg"&gt;&lt;img alt="Main room of the Hackerspace Szeged" src="/images/tour_de_hackerspace/szeged/szeged_second_room.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Main room of the Hackerspace Szeged&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Since I already made plans to spend the rest of the evening with Zsuzsa and
Balint, I spent just about 2 hours in their space.  I'd loved to hear more
about the projects they are working on, so maybe I'll return in the future to
visit them again.&lt;/p&gt;
&lt;p&gt;All in all I had an amazing stay in Szeged!  While I'd loved to stay a few more
days,  I was really looking forward to visit Timişoara in Romania!&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>RustFest and Visiting Hacklab Kyiv</title><link href="https://blog.rnstlr.ch/rustfest-and-visiting-hacklab-kyiv.html" rel="alternate"></link><published>2017-05-01T00:00:00+02:00</published><updated>2017-05-01T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-05-01:/rustfest-and-visiting-hacklab-kyiv.html</id><summary type="html">&lt;p class="first last"&gt;Attending RustFest and visiting the Hacklab Kyiv&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I originally planed to fly to Kiev on Friday to visit &lt;a class="reference external" href="http://hacklab.kiev.ua/en/"&gt;Hacklab Kyiv&lt;/a&gt; and
attend the &lt;a class="reference external" href="http://2017.rustfest.eu"&gt;RustFest&lt;/a&gt; workshops the next day.  But as &lt;a class="reference external" href="https://twitter.com/rnstlr/status/857902876588486658"&gt;you may heard about&lt;/a&gt;,
I missed my flight due to my silliness.  So I was busy for most of Friday
riding trains, trying to learn a bit of Ukrainian &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt;, discuss the validity of
my ticket with the train crew, buying additional tickets and so on.&lt;/p&gt;
&lt;p&gt;The train ride was quite an adventure and I even got to ride the famous
&amp;quot;platzkart&amp;quot; class night train.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_train_ride_3.jpg"&gt;&lt;img alt="The famous platzkart" src="/images/tour_de_hackerspace/kiev/kiev_train_ride_3.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;The famous platzkart&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I didn't take many pictures during the platzkart train ride, but if you want
the get a better feeling for it just &lt;a class="reference external" href="https://duckduckgo.com/?q=platzkart&amp;amp;atb=v10&amp;amp;iar=images&amp;amp;iax=1&amp;amp;ia=images"&gt;search for pictures&lt;/a&gt;.  I arrived in Kiev
around 11 in the morning (original plan was to arrive at 9) and met with
&lt;a class="reference external" href="https://github.com/dns2utf8"&gt;Dns2utf8&lt;/a&gt; at the train station because I arranged to share a hotel room with
him for the duration of RustFest.&lt;/p&gt;
&lt;div class="section" id="rustfest"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://2017.rustfest.eu"&gt;RustFest&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After getting a long overdue shower, we went to the RustFest workshops.  I was
really happy to meet &lt;a class="reference external" href="https://twitter.com/andrewhobden"&gt;&amp;#64;andrewhobden&lt;/a&gt; and &lt;a class="reference external" href="https://twitter.com/NGC_3572"&gt;thomascovenant (&amp;#64;NGC_3572)&lt;/a&gt;, which
both did an amazing job as part of the &lt;a class="reference external" href="http://2017.rustfest.eu/about/"&gt;RustFest team&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Despite being a few hours to late we could still attend the workshops.  I
attended the &lt;a class="reference external" href="https://github.com/exonum/workshop"&gt;Exonum cryptocurrency workshop&lt;/a&gt; instead of the web development I
originally signed up for.  Since I missed the introduction, I jumped right into
writing Rust code without having any clue how their blockchain implementation
even works.  By the end of the workshop we had some kind of crypto currency
implemented with a little node based web app to create new wallets, add funds
out of nowhere and transfer funds.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_rustfest_crypto_3.png"&gt;&lt;img alt="Screenshots from the webapp" src="/images/tour_de_hackerspace/kiev/kiev_rustfest_crypto_3.png" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Screenshots from the webapp&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I found a bug in the implementation, where if one transferred funds from a
wallet to itself it would just increase the balance of this wallet!  The fix
was as simple as adding&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;inside a function.  I didn't have time to figure out why the bug happened
exactly, since all the function does is decrement on the &lt;tt class="docutils literal"&gt;sender&lt;/tt&gt; and
increment on the &lt;tt class="docutils literal"&gt;receiver&lt;/tt&gt;, which should lead to an equal final balance if
&lt;tt class="docutils literal"&gt;sender == receiver&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;After the workshop we formed a little group of Rustaceans and had a great time
taking a look at the city!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_7.jpg"&gt;&lt;img alt="View over parts of Kiev" src="/images/tour_de_hackerspace/kiev/city/kiev_city_7.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;View over parts of Kiev&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here are some more images:&lt;/p&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_1.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_1.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_2.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_2.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_3.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_3.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_4.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_4.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_5.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_5.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_6.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_6.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_7.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_7.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_8.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_8.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_9.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_9.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/city/kiev_city_10.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/city/kiev_city_10.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;p&gt;In the evening we found a wonderful place for dinner and later met with some
other Rustaceans to spend some time in a bar which &lt;a class="reference external" href="https://twitter.com/steveklabnik"&gt;Steve Klabnik&lt;/a&gt; suggested.&lt;/p&gt;
&lt;p&gt;The next morning it was time for a quite diverse range of &lt;a class="reference external" href="http://2017.rustfest.eu/talks/"&gt;talks&lt;/a&gt;.  I
particularly enjoyed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;'Open' as in 'Welcoming': Facilitating Contributions&amp;quot; by &lt;a class="reference external" href="https://github.com/Manishearth"&gt;Manish
Goregaokar&lt;/a&gt; because it basically summarized what RustFest is all about.&lt;/li&gt;
&lt;li&gt;&amp;quot;The Illustrated Adventure Survival Guide for New Rustaceans&amp;quot; by &lt;a class="reference external" href="https://twitter.com/_lbaillie"&gt;Liz
Baillie&lt;/a&gt; as it was super entertaining with cute images&lt;/li&gt;
&lt;li&gt;&amp;quot;Making a game in Rust&amp;quot; by &lt;a class="reference external" href="https://github.com/lislis"&gt;lislis&lt;/a&gt; because I also tried to create a &lt;a class="reference external" href="https://github.com/coredump-ch/rpsrtsrs"&gt;game
with Rust&lt;/a&gt; (still not finished)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During the day I had the pleasure to met the brilliant author of the &lt;a class="reference external" href="http://edunham.net/2016/04/11/plushie_rustacean_pattern.html"&gt;Plushie
Rustacean Pattern&lt;/a&gt;, &lt;a class="reference external" href="https://twitter.com/qedunham"&gt;E Dunham&lt;/a&gt;.  She was impressed, that my girlfriend
actually managed to create a Plushie Ferris from her description.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="https://twitter.com/NGC_3572/status/852546171440685056"&gt;&lt;img alt="My Plushie Ferris" src="/images/tour_de_hackerspace/kiev/ferris.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;My Plushie Ferris, picture taken by &lt;a class="reference external" href="https://twitter.com/NGC_3572"&gt;thomascovenant (&amp;#64;NGC_3572)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the evening we had a great time during the after party.  Getting to know the
community from this very relaxed and personal side was absolutely awesome!  I
talked to quite a few people and learned lots of stuff.  I also talked to
&lt;a class="reference external" href="https://twitter.com/ag_dubs"&gt;Ashley Williams&lt;/a&gt; about how to best teach kids programming and other stuff,
since we &lt;a class="reference external" href="https://www.coredump.ch/2014/11/10/ferienpass-im-hackerspace/"&gt;do that&lt;/a&gt; in &lt;a class="reference external" href="https://www.coredump.ch/2016/11/01/ferienpass-2016/"&gt;our hackerspace&lt;/a&gt;.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="https://twitter.com/NGC_3572/status/858773710869803008"&gt;&lt;img alt="Me and some other Rustaceans" src="/images/tour_de_hackerspace/kiev/kiev_rustaceans.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Me and some other Rustaceans&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Just like last year, RustFest was super amazing!  It's so awesome to meet this
incredible community!  I'm really looking forward to the next RustFest this
fall in &lt;a class="reference external" href="https://rustfest.ch/"&gt;Zurich&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="visiting-hacklab-kyiv"&gt;
&lt;h2&gt;Visiting Hacklab Kyiv&lt;/h2&gt;
&lt;p&gt;The next day I met with Dmitriy, who I met at RustFest, to get lunch together.
Since he speaks Russian it was quite easy for him to chat with the locals and
find us a good place to get some Ukrainian food.&lt;/p&gt;
&lt;p&gt;I arranged with Anastasia from the Hacklab Kyiv that I could couch surf at
their place.  Since I wanted to meet with Anastasia to drop off my luggage, I
agreed with Dimitry to split and see each other again in the hackerspace.
Anastasia and her partner Sasha are some of the most lovely people I've ever
met!  They showed me around the city, helped me with public transport and it
was always fun to hang out with them.  So I was happy I brought some Swiss
chocolate with me which I could give them as a gift.&lt;/p&gt;
&lt;p&gt;After dropping my luggage we went to the hackerspace.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_entry.jpg"&gt;&lt;img alt="Entry to the HackLab  Kyiv" src="/images/tour_de_hackerspace/kiev/kiev_entry.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Entry to the HackLab  Kyiv&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Their hackerspace consist mostly of people which are interested in mechanical
engineering and electronics.  Due to that they own some awesome equippment such
as multiple CNC machines, 3D printers, compressors and lots of other tools.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_cnc.jpg"&gt;&lt;img alt="CNC mill" src="/images/tour_de_hackerspace/kiev/kiev_cnc.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;CNC mill&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_big_cnc.jpg"&gt;&lt;img alt="Even bigger CNC mill" src="/images/tour_de_hackerspace/kiev/kiev_big_cnc.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Even bigger CNC mill&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_3d_printers.jpg"&gt;&lt;img alt="3D printers" src="/images/tour_de_hackerspace/kiev/kiev_3d_printers.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;3D printers&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They created quite some awesome stuff with their 3D printer, including molds to
create metallic stuff!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_3d_prints.jpg"&gt;&lt;img alt="Awesome stuff they created with the 3D printers" src="/images/tour_de_hackerspace/kiev/kiev_3d_prints.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Awesome stuff they created with the 3D printers&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Like most hackerspaces they also feature a big main working room&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_main_room_2.jpg"&gt;&lt;img alt="Main room" src="/images/tour_de_hackerspace/kiev/kiev_main_room_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Main room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Additionally to that they feature:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A workshop&lt;/dt&gt;
&lt;dd&gt;&lt;a class="first last reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_workshop.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/kiev_workshop.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A storage room&lt;/dt&gt;
&lt;dd&gt;&lt;a class="first last reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_workshop.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/kiev_workshop.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Chemistry lab&lt;/dt&gt;
&lt;dd&gt;&lt;a class="first last reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_chemistry.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/kiev_chemistry.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A soldering place&lt;/dt&gt;
&lt;dd&gt;&lt;a class="first last reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_soldering.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/kiev_soldering.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A Tesla coil&lt;/dt&gt;
&lt;dd&gt;&lt;a class="first last reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_tesla_coil.jpg"&gt;&lt;img alt="" src="/images/tour_de_hackerspace/kiev/kiev_tesla_coil.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a room next to the hackerspace there is a studio for people working with
ceramics.  They told me that they share some tools and generally support each
other.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/kiev/kiev_ceramics_2.jpg"&gt;&lt;img alt="Ceramics studio" src="/images/tour_de_hackerspace/kiev/kiev_ceramics_2.jpg" style="width: 80%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Ceramics studio&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After they had shown me around and I talked to most of them for some time, some
of us went to get dinner together. We spent a considerable amount of time
discussing various things, amongst others the problem that a lot of spaces
share: The founders are basically the only ones taking care of everything in
regard to organizing the space.&lt;/p&gt;
&lt;p&gt;We have this problem as well in our space and tried to solve it, by actively
splitting responsibilities for various tasks.  An example is: For a long time
&lt;a class="reference external" href="https://github.com/dbrgn"&gt;Danilo Bargen&lt;/a&gt;, our formal president, was responsible for every single IT
infrastructure task at coredump.  So I encouraged him to show me how to manage
our servers, update services and so on.  This not only to let him have more
time at hand, but also to remove a single point of failure in our organization.&lt;/p&gt;
&lt;p&gt;The next day I spent some time trying to &lt;a class="reference external" href="https://twitter.com/rnstlr/status/859351392871428097"&gt;repair my Fairphone&lt;/a&gt;.  At first it
seemed to work perfectly, but after some time it did again refuse to charge.&lt;/p&gt;
&lt;p&gt;My flight back was on 16:45. This time I actually was able to catch it, but if
you want to hear a funny story on how I almost missed it again, feel free to DM
me on Twitter ;)&lt;/p&gt;
&lt;p&gt;I definitely enjoyed my stay in Kiev and my visit to Hacklab Kyiv.  I'd loved
to stay a few more days, but my travel continued back to Budapest and then
further on to Szeged.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It always amazes me how much communication is possible with just &lt;a class="reference external" href="http://www.omniglot.com/language/phrases/ukrainian.php"&gt;some sentences&lt;/a&gt;, lots of smiling, gestures and some pictures from a mobile phone.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category><category term="blockchain"></category></entry><entry><title>Visiting Hackerspace Budapest</title><link href="https://blog.rnstlr.ch/visiting-hackerspace-budapest.html" rel="alternate"></link><published>2017-04-29T00:00:00+02:00</published><updated>2017-04-29T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-29:/visiting-hackerspace-budapest.html</id><summary type="html">&lt;p class="first last"&gt;Visiting the Hackerspace Budapest&lt;/p&gt;
</summary><content type="html">&lt;p&gt;When arriving in Budapest in the afternoon, I noticed that the &lt;a class="reference external" href="https://hsbp.org/"&gt;Hackerspace
Budapest&lt;/a&gt; was still closed, so I used the time to organize my flight to Kiev
for &lt;a class="reference external" href="http://2017.rustfest.eu"&gt;RustFest&lt;/a&gt; and book a hotel close to the airport.  As it turned out this
was a bit unnecessary, but more about that later.&lt;/p&gt;
&lt;p&gt;Since I couldn't figure out where the Hackerspace Budapest had its IRC channel
(turns out it is &lt;tt class="docutils literal"&gt;#hspbp&lt;/tt&gt; on IRCnet. One can connect to it using
&lt;tt class="docutils literal"&gt;open.ircnet.net&lt;/tt&gt;), I just waited till the state on their website turned to
&amp;quot;open&amp;quot;.&lt;/p&gt;
&lt;p&gt;Finding their hackerspace was a lot harder then I thought!  They give you the
street name and number on the &lt;a class="reference external" href="https://wiki.hackerspaces.org/Hackerspace_Budapest"&gt;hackerspace wiki&lt;/a&gt;, but when I arrived at this
street I found a three floor building with various flats.  I looked around
there and asked a plumber which was working there, if he knew about a
hackerspace.  He couldn't help me, but confirmed that I'm in the correct
building according to the street name and number.  So I continued to look
around, which led to some neighbours getting suspicious about me.  I had a
rather strange conversation with one of them who apparently couldn't speak any
English.  After trying to help me for a while he showed me out.  When I was
just walking away I noticed a small door about a meter away from the entry to
the building:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the Hackerspace Budapest" src="/images/tour_de_hackerspace/budapest/budapest_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the &lt;a class="reference external" href="https://hsbp.org/"&gt;Hackerspace Budapest&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Seeing the Club Mate crates, reassured me that this &lt;em&gt;must&lt;/em&gt; be the Hackerspace I
was looking for!  So I entered  and told them my story about searching for
their hackerspace.  When we finished laughing, they showed me around in their
space.&lt;/p&gt;
&lt;p&gt;There is the classical main working room:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Main working room" src="/images/tour_de_hackerspace/budapest/budapest_main_working_area.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Main working room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the main working room there is a small &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Biotope"&gt;biotope&lt;/a&gt; / &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Green_wall"&gt;green wall&lt;/a&gt; /
biological experiment setup.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="biotope / green wall in the main room" src="/images/tour_de_hackerspace/budapest/budapest_biotope.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;biotope / green wall in the main room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Inside there lives an &lt;a class="reference external" href="https://wikipedia.org/wiki/Axolotl"&gt;axolotl&lt;/a&gt; (named Haxolotl) which, so they told me, forms
a stable ecosystem together with the plants.  Apparently the excretion from the
axolotl produce all the minerals the plants need to grow.  So they simply pump
the water where the axolotl resides to the top and let it flow down.  The only
thing they need to do is to feed the axolotl with worms every day.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Axolotl" src="/images/tour_de_hackerspace/budapest/budapest_axolotl_0.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Axolotl&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They also have built a mechanism to avoid over feeding the axolotl:  Whenever
one feeds it, you also press a button which will then change its color from
green to red.  This will remain like that until the next feeding time were it
will turn green again.  I found this whole thing quite amazing!&lt;/p&gt;
&lt;p&gt;Next there is their 3D-printer and electronics lab:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="3D printer and electronics lab" src="/images/tour_de_hackerspace/budapest/budapest_3d_printer.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;3D printer and electronics lab&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Being a rather small hackerspace, comparable to coredump, they didn't have a
laser cutter, since they can't afford it yet.&lt;/p&gt;
&lt;p&gt;The space also features a kitchen and restrooms:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Kitchen and door to the restrooms" src="/images/tour_de_hackerspace/budapest/budapest_kitchen.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Kitchen and door to the restrooms&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A special thing I found in their space is the so called &amp;quot;loot area&amp;quot;&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Loot area" src="/images/tour_de_hackerspace/budapest/budapest_loot_area.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Loot area&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The members just put stuff there either if they have no use for it or as a gift
for the other members, mostly in the form of food and drinks.  One can loot the
area by just taking the things for free.&lt;/p&gt;
&lt;p&gt;They also told to me about the &lt;a class="reference external" href="https://hsbp.org/camppp7e1"&gt;Camp++&lt;/a&gt; they are organizing every year, which
sounded a bit like a smaller version of the Chaos Communication Camp.&lt;/p&gt;
&lt;p&gt;The next day I spent mostly taking a look at Budapest, which is quite an
amazing city.&lt;/p&gt;
&lt;p&gt;Since I wanted to travel only with cabin baggage to Kiev, I agreed with the
space, that I can store my suitcase in their room and pick it up when I return
from Kiev.  So I arrived in the evening to store my suitcase.  Since I and the
only hacker present didn't have any dinner yet, we decided to cook.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Cooking in the hackerspace" src="/images/tour_de_hackerspace/budapest/budapest_cooking.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Cooking in the hackerspace&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So after eating together and talking for a bit, I decided to go to the Hotel
early, since I had the flight to Kiev in the morning.&lt;/p&gt;
&lt;p&gt;Sadly I forgot, that I still had my passport in my suitcase in the hackerspace
which I noticed when I was already at the airport.  I tried to travel to Kiev
with just my ID card, but when boarding they told me this isn't possible.&lt;/p&gt;
&lt;p&gt;So while writing this post I'm on a 18 hour train ride to Kiev which is still
faster than taking the next flight which would be on Saturday afternoon.&lt;/p&gt;
&lt;p&gt;I really enjoyed my visit in the Hackerspace Budapest and will visit them
shortly again when I return from Kiev on Tuesday.&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Progressbar and Metalab</title><link href="https://blog.rnstlr.ch/visiting-progressbar-and-metalab.html" rel="alternate"></link><published>2017-04-25T00:00:00+02:00</published><updated>2017-04-25T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-25:/visiting-progressbar-and-metalab.html</id><summary type="html">&lt;p class="first last"&gt;Visiting Progressbar&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Since I hit the bars a bit too hard with some of the guys and gals of brmlab, I
had a bit of a hard time getting up in the morning.  Anyway, I quite enjoyed
relaxing a bit in the train while travelling to Bratislava.&lt;/p&gt;
&lt;div class="section" id="visiting-progressbar"&gt;
&lt;h2&gt;Visiting Progressbar&lt;/h2&gt;
&lt;p&gt;A member of the hackerspace, Andrew, described me pretty well on IRC how to get
to the &lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt; from the train station, while also getting quite a nice
look at Bratislava at the same time.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the Progressbar" src="/images/tour_de_hackerspace/progressbar/progressbar_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the &lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After arriving he gave me a tour around the space and then continued to repair
his bike.&lt;/p&gt;
&lt;p&gt;The space consists of a nice big main working / presentation / hang-out room.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Progressbar main room" src="/images/tour_de_hackerspace/progressbar/progressbar_main_room.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt; main room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There's also a co-working / office room:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Progressbar co-working room" src="/images/tour_de_hackerspace/progressbar/progressbar_co_working_space_2.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt; co-working room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And in the next room there's the kitchen:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Progressbar kitchen" src="/images/tour_de_hackerspace/progressbar/progressbar_kitchen_2.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt; kitchen&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On the opposite site of the space there is also a room with an electronic lab
and some tooling:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Progressbar electronic lab" src="/images/tour_de_hackerspace/progressbar/progressbar_electronic_lab.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt; electronic lab&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Of course the space also has some awesome decorations:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Progressbar animated LED bar" src="/images/tour_de_hackerspace/progressbar/progressbar_decoration.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://www.progressbar.sk/"&gt;Progressbar&lt;/a&gt; animated LED bar&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As soon as Andrew finished fixing his bike, we went to have dinner.  He then
continued to show me a bit of Bratislava and the local beer culture.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Outside of Progressbar in the old town" src="/images/tour_de_hackerspace/progressbar/progressbar_outside.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Outside of Progressbar in the old town&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The next day I took a look at the city, which is rather small but pretty.  In
the evening I attended the &lt;a class="reference external" href="https://scuttlebot.io/"&gt;scuttlebutt&lt;/a&gt; workshop in Progressbar.  Scuttlebutt
is some kind of distributed cryptographically signed message board, where every
identity has a append only feed.  I shortly tested the &lt;a class="reference external" href="https://github.com/ssbc/patchwork"&gt;patchwork&lt;/a&gt; scuttlebutt
application.  For me it felt a bit like a distributed Twitter.&lt;/p&gt;
&lt;p&gt;Since a few of the guys there are also Rustaceans we also talked about that,
and they told me that their door lock implementation runs with Rust.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Progressbar door lock system" src="/images/tour_de_hackerspace/progressbar/progressbar_door_lock_system.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Progressbar door lock system&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Later that evening we started to watch some 64k demos, of course including the
two I know of which are written in Rust:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pouet.net/prod.php?which=69658"&gt;Engage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=rWwNgVwQG1A"&gt;Logicoma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="64k demo time with animated LED bar on the left" src="/images/tour_de_hackerspace/progressbar/progressbar_demo_time.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;64k demo time with animated LED bar on the left&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I really enjoyed my time in Progressbar and their hospitality was amazing!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="visiting-metalab-in-vienna"&gt;
&lt;h2&gt;Visiting Metalab in Vienna&lt;/h2&gt;
&lt;p&gt;The next day I actually spent in Vienna, which is just a 1h train ride away,
were I visited &lt;a class="reference external" href="https://metalab.at/"&gt;Metalab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The space is located centrally close to the &amp;quot;Rathaus&amp;quot;.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Metalab entry" src="/images/tour_de_hackerspace/metalab/metalab_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Metalab entry&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Just on arrival the space was actually empty (but open), because most of the
members were having dinner on the outside.  Just moments after that, two
members showed up and I asked them for a tour.  But one can't get a tour
without drinking some Mate!  So I bought a Flora Power from them after using
their self built &amp;quot;Kassomat&amp;quot; to get some coins!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Metalab Kassomat" src="/images/tour_de_hackerspace/metalab/metalab_kassomat.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Metalab Kassomat&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After that rather impressive start they continued to show me the rest of the
space:&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Metalab 3D printers" src="/images/tour_de_hackerspace/metalab/metalab_3d_printer.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Metalab 3D printers&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Metalab almost obligatory laser cutter and electronic lab" src="/images/tour_de_hackerspace/metalab/metalab_laser_cutter_el_lab.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Metalab almost obligatory laser cutter and electronic lab&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;What really impressed me was there workshop, containing a decent CNC machine!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Metalab CNC" src="/images/tour_de_hackerspace/metalab/metalab_cnc.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Metalab CNC&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The space actually also includes a big main room, a kitchen, a lounge and some
storage and server rooms.  Sadly I didn't take any pictures of them.&lt;/p&gt;
&lt;p&gt;While getting rid of my processed Flora Power after the tour, I noticed the
rather beautiful decorations they have in their restrooms!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Metalab restroom decoration" src="/images/tour_de_hackerspace/metalab/metalab_toilet_decoration.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Metalab restroom decoration&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There is even a little screen with a few buttons to play a video game, while
having a longer session.&lt;/p&gt;
&lt;p&gt;Since I had only a few hours to spend there, I just briefly attended their
member meeting, were they discussed some Metalab related issues.  The rest of
the time I mostly spent talking to some of them.&lt;/p&gt;
&lt;p&gt;If you're in Vienna I definitely recommend to check out Metalab, since it is a
quite amazing Hackerspace!  I'd loved to spend more time there, but again the
next chapter of my &amp;quot;Tour de Hackerspace&amp;quot; was calling!&lt;/p&gt;
&lt;/div&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting brmlab</title><link href="https://blog.rnstlr.ch/visiting-brmlab.html" rel="alternate"></link><published>2017-04-23T00:00:00+02:00</published><updated>2017-04-23T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-23:/visiting-brmlab.html</id><summary type="html">&lt;p class="first last"&gt;Visiting brmlab&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After a quite pleasant night train ride I arrived around 7am in Prague.  This
left me with enough time to book my hotel and get to know the city a bit.&lt;/p&gt;
&lt;p&gt;I booked the &lt;a class="reference external" href="http://osmand.net/go?lat=50.090122&amp;amp;lon=14.437044&amp;amp;z=18"&gt;A plus Hostel&lt;/a&gt; close to the Florenc metro station which is in
the intersection of two metro lines, giving me a great starting point to
explore the city.&lt;/p&gt;
&lt;p&gt;Since the &lt;a class="reference external" href="https://brmlab.cz/"&gt;brmlab&lt;/a&gt; website showed, that the space is apparently open, I
decided to take a look at it quite early in the day.  I had some trouble
actually finding the space, so I advice you to use their &lt;a class="reference external" href="https://brmlab.cz/place"&gt;well written
description&lt;/a&gt; on how to find their space.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the brmlab" src="/images/tour_de_hackerspace/brmlab/brmlab_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the &lt;a class="reference external" href="https://brmlab.cz/"&gt;brmlab&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The space features some of the usual stuff:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;A big main working room&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/brmlab/brmlab_main_room.jpg"&gt;&lt;img alt="brmlab main working room" class="align-center" src="/images/tour_de_hackerspace/brmlab/brmlab_main_room.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;A small server room&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/brmlab/brmlab_server_room.jpg"&gt;&lt;img alt="brmlab server room" class="align-center" src="/images/tour_de_hackerspace/brmlab/brmlab_server_room.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;A workshop&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/brmlab/brmlab_workshop.jpg"&gt;&lt;img alt="brmlab workshop" class="align-center" src="/images/tour_de_hackerspace/brmlab/brmlab_workshop.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But what really sets their hackerspace apart from others is that it features a
chemistry and a bio lab!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Parts of the bio lab with a microscope" src="/images/tour_de_hackerspace/brmlab/brmlab_micro_scope.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Parts of the bio lab with a microscope&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We did actually take a look at a small silicon wafer from unknown origin the
same evening.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Looking at a silicon wafer through the microscope" src="/images/tour_de_hackerspace/brmlab/brmlab_micro_scope_silicon.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Looking at a silicon wafer through the microscope&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Inside the bio lab there is also the relax zone / silent room.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Relax zone with awesome graffiti" src="/images/tour_de_hackerspace/brmlab/brmlab_silent_room.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Relax zone with awesome graffiti!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Quite stunning is their high voltage lab&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="brmlab high voltage lab" src="/images/tour_de_hackerspace/brmlab/brmlab_high_voltage_lab.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;brmlab high voltage lab&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It features some quite huge &lt;a class="reference external" href="images/tour_de_hackerspace/brmlab/brmlab_high_voltage_lab_2.jpg"&gt;Tesla coils&lt;/a&gt; and other high voltage equipment such
as high voltage capacitors, transformers or high voltage measurement systems.&lt;/p&gt;
&lt;p&gt;Also really impressive is the bitcoin ATM they have!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Bitcoin ATM" src="/images/tour_de_hackerspace/brmlab/brmlab_bitcoin_atm.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Bitcoin ATM&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I couldn't resist and &lt;a class="reference external" href="/images/tour_de_hackerspace/brmlab/brmlab_bitcoin_transaction.jpg"&gt;bought myself 6 mBTC&lt;/a&gt; immediately.  They told me that
this is the first prototype of the &lt;a class="reference external" href="https://www.generalbytes.com/first-bitcoin-atm-deployed/"&gt;General Bytes bitcoin ATM&lt;/a&gt;.  It was
installed in their space so they could test it.  During testing they found and
reported two security issues, which then could be fixed.&lt;/p&gt;
&lt;p&gt;Like most hackerspaces they also have some awesome decorations, in this case a
wall paneled with motherboards.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Wall of motherboards" src="/images/tour_de_hackerspace/brmlab/brmlab_motherboards.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Wall of motherboards&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The also own an &lt;a class="reference external" href="images/tour_de_hackerspace/brmlab/brmlab_ibm.jpg"&gt;IBM AS/400 system&lt;/a&gt; with a fitting hardware terminal which
gives one some possibilities to discover a mainframe style system.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Terminal connected to the IBM AS/400" src="/images/tour_de_hackerspace/brmlab/brmlab_ibm_terminal.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Terminal connected to the IBM AS/400&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It was real fun interacting with this machine!  You can find more information
about it on their &lt;a class="reference external" href="https://brmlab.cz/project/as400/start"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All in all my Prague and brmlab experience was really amazing! The city is very
beautiful (albeit a bit crowed with tourists) and I enjoyed hanging out with a
few of the brmlab hackers the other night!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Overview of Prague" src="/images/tour_de_hackerspace/brmlab/brmlab_prague.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Overview of Prague&lt;/p&gt;
&lt;/div&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Hackerspace Kraków</title><link href="https://blog.rnstlr.ch/visiting-hackerspace-krakow.html" rel="alternate"></link><published>2017-04-19T00:00:00+02:00</published><updated>2017-04-19T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-19:/visiting-hackerspace-krakow.html</id><summary type="html">&lt;p class="first last"&gt;Visiting Hackerspace Kraków&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Since the 3G connection during the train ride was exceptionally bad, I had
trouble with my credit card and the train didn't have electric plugs, I ran out
of battery before I could finish booking a hotel.&lt;/p&gt;
&lt;p&gt;So the first thing I did when arriving in Kraków was looking for the
&lt;a class="reference external" href="https://hackerspace-krk.pl/"&gt;Hackerspace Kraków&lt;/a&gt;.  Luckily it's very close to the main train station and
Wiktor, one of the members which talked to me on IRC, was waiting outside to
show me in!  This made me feel very welcome!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the Hackerspace Kraków" src="/images/tour_de_hackerspace/krakow/krakow_entry_1.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the &lt;a class="reference external" href="https://hackerspace-krk.pl/"&gt;Hackerspace Kraków&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After charging my devices, talking to my credit card company and booking my
hotel, he showed me around.  They've actually just moved in a few month ago and
the space isn't yet open for public, so they told me.  They are still thinking
about ideas on how to decorate the space.  I proposed to make the entry look
like a submarine since the corridor is very narrow and rounded on the top.  I'm
looking forward to see what they will do with the space.&lt;/p&gt;
&lt;p&gt;The space mainly consist of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An &lt;a class="reference external" href="/images/tour_de_hackerspace/krakow/krakow_electronic_lab.jpg"&gt;electronic lab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="/images/tour_de_hackerspace/krakow/krakow_computer_room.jpg"&gt;computer / presentation room&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="/images/tour_de_hackerspace/krakow/krakow_work_shop.jpg"&gt;workshop room&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the workshop they actually built the ventilation system themself!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Workshop ventilation system" src="/images/tour_de_hackerspace/krakow/krakow_work_shop_ventilation.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Workshop ventilation system&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And during my visit they actually built a controller board to be able to
regulate the speed of the ventilation system.  Was awesome to watch them
getting busy until 1 or 2am.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Workshop ventilation controller" src="/images/tour_de_hackerspace/krakow/krakow_work_shop_ventilation_controlled.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Workshop ventilation with freshly built controller on the bottom right&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They also told me about some past and present projects.  In the past they
helped build the lightening system for the Galeria Krakowska, which is a big
shopping mall close to the main train station.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Galeria Krakowska lightening system" src="/images/tour_de_hackerspace/krakow/krakow_galeria.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Galeria Krakowska lightening system&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The green LED wall on the picture can actually change color and also show
different animations and effects.&lt;/p&gt;
&lt;p&gt;Another project they are working on is tracking and collecting &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Radiosonde"&gt;radiosondes&lt;/a&gt;.
This probes are used for weather related analysis and are started with weather
balloons by &lt;a class="reference external" href="http://radiosonde.eu/RS00-D/RS02C-D.html"&gt;weather stations&lt;/a&gt; all around Europe.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Captured radiosondes" src="/images/tour_de_hackerspace/krakow/krakow_radio_sonde_0.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Captured radiosondes&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;One of their member created a &lt;a class="reference external" href="https://hub.docker.com/r/teeed/dxlaprs/"&gt;Docker image&lt;/a&gt; which contains various software
related to tracking the radiosondes.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Setup used to track radiosondes" src="/images/tour_de_hackerspace/krakow/krakow_radio_sonde_tracking.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Setup used to track radiosondes&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Tracking coverage achieved with the setup above" src="/images/tour_de_hackerspace/krakow/krakow_radio_sonde_coverage.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Tracking coverage achieved with the setup above&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Since I took myself quite some time to have a look at the city (Which is
amazing, I can definitely recommend a visit to the &lt;a class="reference external" href="http://osmand.net/go?lat=50.05451&amp;amp;lon=19.936409&amp;amp;z=17"&gt;Wawel Castle&lt;/a&gt; and the
&lt;a class="reference external" href="http://osmand.net/go?lat=50.062&amp;amp;lon=19.937761&amp;amp;z=19"&gt;underground museum&lt;/a&gt;), I only showed up at the hackerspace for a quick goodbye
the other day.  But I really enjoyed my stay their nevertheless!&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Warsaw Hackerspace</title><link href="https://blog.rnstlr.ch/visiting-warsaw-hackerspace.html" rel="alternate"></link><published>2017-04-17T00:00:00+02:00</published><updated>2017-04-17T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-17:/visiting-warsaw-hackerspace.html</id><summary type="html">&lt;p class="first last"&gt;Visiting Warsaw Hackerspace&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I was warned on IRC that the activity would be rather low in the Warsaw
Hackerspace Due to being Easter.  So when I arrived in Warsaw I just monitored
their &lt;a class="reference external" href="http://at.hackerspace.pl/"&gt;member tracking site&lt;/a&gt; from time to time until it showed some people
being present.&lt;/p&gt;
&lt;p&gt;The entry to the space was a bit hard to find, because it's in the basement.
But they later told me, that they will move their space to a different location
next month anyway.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the Warsaw Hackerspace" src="/images/tour_de_hackerspace/warsaw/warsaw_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the &lt;a class="reference external" href="https://www.hackerspace.pl/"&gt;Warsaw Hackerspace&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On arrival they showed me around their hackerspace.  Of course they have a
laser-cutter &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt; and some 3D printers.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Laser cutter and 3D printers" src="/images/tour_de_hackerspace/warsaw/warsaw_laser_cutter.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Laser cutter and 3D printers&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I was told, that the &lt;a class="reference external" href="https://www.hackerspace.pl/"&gt;Warsaw Hackerspace&lt;/a&gt; has around 100 members consisting of
a good mix of computer science, electronic engineering, mechanical engineering
and other people.&lt;/p&gt;
&lt;p&gt;What really impressed me was the equipment in their work shop! They have
amongst other stuff a CNC mill and &lt;a class="reference external" href="/images/tour_de_hackerspace/warsaw/warsaw_work_show_cnc_lathe.jpg"&gt;lathe&lt;/a&gt;,  which they control using
&lt;a class="reference external" href="http://linuxcnc.org/"&gt;linuxcnc&lt;/a&gt;.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="CNC mill" src="/images/tour_de_hackerspace/warsaw/warsaw_work_shop_cnc.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;CNC mill&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They also have equipment to produce their own PCBs, using a cheap UV nail
curing lamp.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="PCB manufactoring equipment" src="/images/tour_de_hackerspace/warsaw/warsaw_pcb_manufactoring.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;PCB manufactoring equipment&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Also impressive was their retro computing collection! Amongst other devices
they own a VT520 terminal which they use to print the messages posted on IRC.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="VT520 terminal" src="/images/tour_de_hackerspace/warsaw/warsaw_vt520.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;VT520 terminal used to print IRC messages&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When I asked for a beverage, they showed me there vending machine, which is
broken and can't accept coins anymore.  But stand back, they hacked it to hook
up with their internal payment system!  It's apparently as simple as hooking up
a Raspberry Pi to the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Multidrop_bus#MDB_in_Vending_Machines"&gt;Multidrop bus&lt;/a&gt; to control the machine.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Hacked vending machine" src="/images/tour_de_hackerspace/warsaw/warsaw_vending_machine.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Hacked vending machine&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Later in the evening I had an awesome debugging session with one of their
members who tried to intercept C library calls (This was part of an university
assignment).  Since I never looked into how dynamic linking works in Linux,
this was very interesting for me!  Maybe I'll write a separate blog post about
that if I find time to dig a bit deeper into the topic.&lt;/p&gt;
&lt;p&gt;I really enjoyed the time I spent with this awesome and very active
hackerspace! My next stop will be Hackerspace Kraków!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;We should really get a laser-cutter for coredump. This will be the first thing I will do when I return!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting c-base</title><link href="https://blog.rnstlr.ch/visiting-c-base.html" rel="alternate"></link><published>2017-04-15T00:00:00+02:00</published><updated>2017-04-15T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-15:/visiting-c-base.html</id><summary type="html">&lt;p class="first last"&gt;Visiting c-base&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After an exhausting train ride from Amsterdam to Berlin which started at 20.25
and ended at 5.33 the next day, I discovered that I couldn't get a train the
same day to Warsaw since they were all fully booked!&lt;/p&gt;
&lt;p&gt;So my plans changed a bit and I would stay a full day in Berlin which was nice
in some way because it meant I could visit &lt;a class="reference external" href="https://www.c-base.org/"&gt;c-base&lt;/a&gt; in the evening!&lt;/p&gt;
&lt;p&gt;Also I discovered by coincidence that a few friends of mine from Switzerland
were staying in Berlin this weekend and I could hang out with them during the
day.  I also met with &lt;a class="reference external" href="https://twitter.com/andrewhobden"&gt;&amp;#64;andrewhobden&lt;/a&gt; in Berlin, whom I met at &lt;a class="reference external" href="http://2016.rustfest.eu/"&gt;RustFest
2016&lt;/a&gt; last year.  This was a very awesome coincidence, since we didn't plan
any of it and we just ended up meeting in Berlin and having a great time
together!&lt;/p&gt;
&lt;p&gt;So after dinner we split again and I headed towards c-base.  c-base is located
near the &amp;quot;Jannowitzbrücke&amp;quot; and thus very easily reachable with public
transport.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the c-base" src="/images/tour_de_hackerspace/cbase/cbase_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the c-base&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When entering c-base I was amazed because of all the very nicely done
decoration they have inside which leads to a great atmosphere!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="The Mate light" src="/images/tour_de_hackerspace/cbase/cbase_mate_light.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;The Mate light inside c-base&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The members in the space were a bit busy because they had their &amp;quot;circle&amp;quot;
meeting.  So I just started talking to the members not attending the meeting
and somehow got pretty absorbed giving one of them a rather in depth
introduction to basic embedded development using amongst other things&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.arduino.cc/"&gt;Arduino&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.nongnu.org/avrdude/"&gt;avrdude&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://openocd.org/"&gt;openocd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.segger.com/jlink-debug-probes.html"&gt;J-Link&lt;/a&gt; debuggers&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://kicad-pcb.org/"&gt;KiCad&lt;/a&gt; / &lt;a class="reference external" href="http://librepcb.org/"&gt;LibrePCB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://dangerousprototypes.com/docs/Bus_Pirate"&gt;Bus Pirate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.i2c-bus.org/"&gt;I2C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(This list serves primarily as a reference for him in case he forgot to
bookmark them ;)&lt;/p&gt;
&lt;p&gt;Since I was still very tired from the lack of sleep during the train ride from
Amsterdam to Berlin I originally planed to stay no longer as midnight.  But
since I got really busy and was invited to be given a show around the crashed
space station around 1am, I stayed until 2:30am.&lt;/p&gt;
&lt;p&gt;The guided tour through the spaceship was pretty awesome, thanks again to my
guide!  Since I didn't really take any pictures I recommend you to visit
&lt;a class="reference external" href="https://www.c-base.org/"&gt;c-base&lt;/a&gt; by yourself if you're around Berlin next time!&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting Technologia Incognita</title><link href="https://blog.rnstlr.ch/visiting-technologia-incognita.html" rel="alternate"></link><published>2017-04-13T00:00:00+02:00</published><updated>2017-04-13T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-13:/visiting-technologia-incognita.html</id><summary type="html">&lt;p class="first last"&gt;Visiting Technologia Incognita&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Getting a place to stay in Amsterdam was harder then I thought due to the fact,
that a lot of hotels and hostels where fully or almost fully booked!  I still
got a room after a bit of hassle (Thanks to this booking sites &amp;quot;only two rooms
left, book them now!&amp;quot;, I accidentally booked &amp;quot;1 bed in the women sleeping
room&amp;quot;, silly me) in the &amp;quot;WOW Amsterdam&amp;quot; hostel. It's not that close to the
center, but reachable with either bus or the metro.&lt;/p&gt;
&lt;p&gt;After the train ride from Düsseldorf and a bus ride to my hostel I took the
metro to &lt;a class="reference external" href="http://technologia-incognita.nl/"&gt;Technologia Incognita&lt;/a&gt;.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the Technologia Incognita" src="/images/tour_de_hackerspace/techinc/techinc_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the Technologia Incognita&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The space features the usual stuff with a kitchen, a &lt;a class="reference external" href="/images/tour_de_hackerspace/techinc/techinc_vending_machine_laser_cutter.jpg"&gt;laser-cutter&lt;/a&gt; (if you
look closely you will see they sell the Diplomatic Passport in their vending
machine on the left), a work shop and of course some &lt;a class="reference external" href="/images/tour_de_hackerspace/techinc/techinc_LED_ball.jpg"&gt;awesome decoration&lt;/a&gt;!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="animated LED fire place" src="/images/tour_de_hackerspace/techinc/techinc_fire.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Animated LED fire place&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I had the luck to arrive when they had their visiting day, so lots of people
where around.  Also sine the next day was the &lt;a class="reference external" href="https://conference.hitb.org/"&gt;Hack in the Box&lt;/a&gt; conference
some attendees of this conference where there as well.  I even met some guys
from the &lt;a class="reference external" href="https://www.nycresistor.com/"&gt;NYC Resistor&lt;/a&gt; which invited me to have a look at their hackerspace
next time I'm in New York (which will be around June).  They told me about a
project where they create almost impossible to solve &lt;a class="reference external" href="https://trmm.net/Platonic_puzzle"&gt;puzzles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also met &lt;a class="reference external" href="http://www.sasj.nl/"&gt;Saskia Freeke&lt;/a&gt; who creates amazing digital art!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Example of Saskias art" src="http://www.sasj.nl/W14/wp-content/uploads/2014/06/160518.gif" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Example of Saskias creative programming / digital art&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;She has a project where she creates similar work every single day since 2015!&lt;/p&gt;
&lt;p&gt;There was also a cheese, sausage and beer tasting on the same evening which I,
as a Swiss guy, definitely approve!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="cheese tasting" src="/images/tour_de_hackerspace/techinc/techinc_cheese_tasting.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Cheese and sausage tasting&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The next day I spontaneously attended the &lt;a class="reference external" href="https://conference.hitb.org/"&gt;Hack in the Box&lt;/a&gt; conference where
hackerspaces from the Netherlands also had booths.  I really enjoyed &lt;a class="reference external" href="http://toool.us/"&gt;Toools&lt;/a&gt;
lock-picking booth and the talk of Jos Weyers &lt;a class="reference external" href="http://conference.hitb.org/hitbsecconf2017ams/sessions/most-impressive-a-guide-to-key-impressioning-attacks/"&gt;Most Impressive: A Guide to Key
Impressioning Attacks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I really enjoyed my stay in Amsterdam and with &lt;a class="reference external" href="http://technologia-incognita.nl/"&gt;Technologia Incognita&lt;/a&gt;
and almost replanned my trip to spend a few more days there, I decided to stick
with my plan for once and travel to Warsaw via Berlin, with a short stop to
visit c-base.&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting the chaosdorf</title><link href="https://blog.rnstlr.ch/visiting-the-chaosdorf.html" rel="alternate"></link><published>2017-04-11T00:00:00+02:00</published><updated>2017-04-11T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-11:/visiting-the-chaosdorf.html</id><summary type="html">&lt;p class="first last"&gt;Visiting the chaosdorf&lt;/p&gt;
</summary><content type="html">&lt;p&gt;While my original &amp;quot;plan&amp;quot; involved traveling directly to Amsterdam from
Stuttgart, the shackspace guys suggested to visit chaosdorf in Düsseldorf,
since it is halfway to Amsterdam anyway.&lt;/p&gt;
&lt;p&gt;After asking if anybody will be present on their IRC channel #chaosdorf, I
decided to stay two days in Düsseldorf.&lt;/p&gt;
&lt;p&gt;Chaosdorf is awesomely close, just a 20min foot-walk, to the Düsseldorf main
station!  Also quite close is the Hostel A&amp;amp;O where I could stay.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="chaosdorf location" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_location.png" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="http://www.openstreetmap.org/?lat=51.217974999999996&amp;amp;lon=6.788995&amp;amp;zoom=16&amp;amp;layers=M&amp;amp;mlat=51.21656&amp;amp;mlon=6.78347"&gt;chaosdorf location&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Due to the central location and their prominent front door, they have some
random strangers walking in from time to time, which is pretty awesome!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="chaosdorf entrance" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_entrance.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;chaosdorf entrance&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For the 130 members they have, the rooms is already getting small, but is with
its 160m² still huge compared to coredump!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="main chaosdorf room" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_main_room_1.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;main chaosdorf room&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Their space features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A laptop lounge with presentation screen&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/chaosdorf/chaosdorf_main_room_0.jpg"&gt;&lt;img alt="chaosdorf laptop lounge" class="align-center" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_main_room_0.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A kitchen (with a nice hack for the &lt;a class="reference external" href="/images/tour_de_hackerspace/chaosdorf/chaosdorf_kitchen_hack.jpg"&gt;hood ventilator light&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/chaosdorf/chaosdorf_kitchen.jpg"&gt;&lt;img alt="chaosdorf kitchen" class="align-center" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_kitchen.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A laser cutter and 3D printers&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/chaosdorf/chaosdorf_laser_cutter.jpg"&gt;&lt;img alt="chaosdorf laser cutter / 3D printer" class="align-center" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_laser_cutter.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A combined smoking, TV and workshop room&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="/images/tour_de_hackerspace/chaosdorf/chaosdorf_work_shop.jpg"&gt;&lt;img alt="chaosdorf work shop" class="align-center" src="/images/tour_de_hackerspace/chaosdorf/chaosdorf_work_shop.jpg" style="width: 10%;" /&gt;&lt;/a&gt;
&lt;p&gt;Similar to shackspace some members in chaosdorf also cook dinner for the group
and I could join them on Tuesday evening.  Having a nice kitchen in your space
seems to pay off!&lt;/p&gt;
&lt;p&gt;Due to visiting in the midst of the week and not during the weekend, I couldn't
experience the full chaosdorf experience.  I would love to stay until Friday to
experience the &lt;a class="reference external" href="https://wiki.chaosdorf.de/Freitagsfoo"&gt;Freitagsfoo&lt;/a&gt;, but Amsterdam is calling!&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Visiting the shackspace</title><link href="https://blog.rnstlr.ch/visiting-the-shackspace.html" rel="alternate"></link><published>2017-04-09T00:00:00+02:00</published><updated>2017-04-09T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-09:/visiting-the-shackspace.html</id><summary type="html">&lt;p class="first last"&gt;Visiting the shackspace&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I arrived at Stuttgart at 5 pm.  During the train ride I asked on the
#shackspace IRC channel if somebody could recommend a place to stay.  All they
told me was I should avoid the &amp;quot;Ambiente&amp;quot;.  So I booked a hotel room close to
the &lt;a class="reference external" href="https://shack.space"&gt;shackspace&lt;/a&gt; which is 15 minutes from the main train station.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Me and Ferris arriving in Stuttgart" src="/images/tour_de_hackerspace/shackspace/arrival_stuttgart.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Me and &lt;a class="reference external" href="http://www.rustacean.net/"&gt;Ferris&lt;/a&gt; arriving in Stuttgart.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Soon after arriving at the hotel I went to the shackspace.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="Entry to the shackspace" src="/images/tour_de_hackerspace/shackspace/shack_entry.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Entry to the shackspace.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I had the luck that they were giving a tour to some visitors just when I
arrived, so I could join them.&lt;/p&gt;
&lt;p&gt;Coming from the rather small hackerspace &lt;a class="reference external" href="https://coredump.ch"&gt;coredump&lt;/a&gt; from Switzerland,
shackspace is huge!&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="shackspace IT infrastructure" src="/images/tour_de_hackerspace/shackspace/shack_it.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;shackspace IT infrastructure.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They have around 400m² of room in their space, given them the possibility to have:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A kitchen&lt;/li&gt;
&lt;li&gt;A big main working room&lt;/li&gt;
&lt;li&gt;A machine room with &lt;a class="reference external" href="/images/tour_de_hackerspace/shackspace/shack_laser_cutter.jpg"&gt;laser-cutter&lt;/a&gt;, 3D-printer, ...&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="/images/tour_de_hackerspace/shackspace/shack_work_shop.jpg"&gt;work shop&lt;/a&gt; with drilling machines, saws etc.&lt;/li&gt;
&lt;li&gt;A silent room, mainly used by student for learning&lt;/li&gt;
&lt;li&gt;A &lt;a class="reference external" href="/images/tour_de_hackerspace/shackspace/shack_conference_room.jpg"&gt;conference room&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="/images/tour_de_hackerspace/shackspace/shack_roof.jpg"&gt;Amateur radio station&lt;/a&gt; with &lt;a class="reference external" href="/images/tour_de_hackerspace/shackspace/shack_view.jpg"&gt;antennas&lt;/a&gt; on the roof&lt;/li&gt;
&lt;li&gt;Around 200 members&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like every hackerspace they have lots of beautiful installations arround, like
a Back to the Future themed clock which also shows the founding date.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="shackspace founding date" src="/images/tour_de_hackerspace/shackspace/shack_founding_date.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;Back to the Future themed clock&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;They also have a beautiful installation showing the open status of various
hackerspaces, gathered via the &lt;a class="reference external" href="https://spacedirectory.org/"&gt;SpaceAPI&lt;/a&gt;&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="SpaceAPI status wall" src="/images/tour_de_hackerspace/shackspace/shack_spaceapi_status.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;SpaceAPI status wall&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Since a member of the space was preparing food for dinner, they invited me
spontaneously to join them! This was awesome, since it meant spending more time
hacking and less searching for food ;)&lt;/p&gt;
&lt;p&gt;Later I joined the conference room, discussing ideas for the &lt;a class="reference external" href="https://2017.spaceappschallenge.org/"&gt;Space Apps
Challenge 2017&lt;/a&gt; for which the shakspace hosts a &lt;a class="reference external" href="https://2017.spaceappschallenge.org/locations/stuttgart/"&gt;hackathon&lt;/a&gt;.  Last year they
came up with a project to optimize the growth of plants with machine learning.&lt;/p&gt;
&lt;div class="figure align-center" style="width: 80%"&gt;
&lt;img alt="shackspace plant experiment" src="/images/tour_de_hackerspace/shackspace/shack_space_apps_2016.jpg" style="width: 80%;" /&gt;
&lt;p class="caption"&gt;shackspace plant experiment for Space Apps Challenge 2016&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I really enjoyed my stay at shackspace! It's a great hackerspace with lots of
creative and technically gifted people hacking on awesome projects.&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Starting my "Tour de Hackerspace"</title><link href="https://blog.rnstlr.ch/starting-my-tour-de-hackerspace.html" rel="alternate"></link><published>2017-04-08T00:00:00+02:00</published><updated>2017-04-08T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-04-08:/starting-my-tour-de-hackerspace.html</id><summary type="html">&lt;p class="first last"&gt;Starting my &amp;quot;Tour de Hackerspace&amp;quot;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Today I start what I call my &amp;quot;Tour de Hackerspace&amp;quot;! I'll be travelling around
Europe and visit various &lt;a class="reference external" href="https://wiki.hackerspaces.org/"&gt;hackerspaces&lt;/a&gt; on the way.  To keep travel costs at a
reasonable level, I bought an &lt;a class="reference external" href="http://www.interrail.eu/en"&gt;InterRail&lt;/a&gt; ticket, which allows flexible
travelling by train.&lt;/p&gt;
&lt;img alt="Map of Europe from https://wiki.hackerspaces.org/Europe" class="align-center" src="/images/tour_de_hackerspace/map_europe.png" style="width: 100%;" /&gt;
&lt;p&gt;Since I'm not the kind of person which is great at planing, this will be more
or less a spontaneous adventure.  I contacted some hackerspaces upfront and
received some great and welcoming responses, especially from the Eastern part
of Europe!&lt;/p&gt;
&lt;p&gt;My first location will be the &lt;a class="reference external" href="https://shack.space/"&gt;shackerspace&lt;/a&gt; in Stuttgart, Germany.  After that
I plan to visit a hackerspace in Amsterdam, then travelling a bit in the east
(Czech Republic, Poland, ...) and probably attend the &lt;a class="reference external" href="http://2017.rustfest.eu/"&gt;RustFest 2017&lt;/a&gt; in Kyiv,
Ukraine.&lt;/p&gt;
&lt;p&gt;According to my definitely not definitive plan I will then travel southwards
visiting Romania, Bulgaria, Croatia, Serbia, Bosnia and Herzegovina, Slovenia,
... before returning to Switzerland.&lt;/p&gt;
&lt;p&gt;I'm really looking forward to meet lots of amazing people and see how they live
and hack around Europe!&lt;/p&gt;
&lt;p&gt;I will try to write a blog post about every hackerspace I visit on my journey,
so stay tuned.&lt;/p&gt;
</content><category term="2017"></category><category term="tour de hackerspace"></category><category term="hackerspace"></category><category term="travelling"></category></entry><entry><title>Switching from SLiM to LightDM</title><link href="https://blog.rnstlr.ch/switching-from-slim-to-lightdm.html" rel="alternate"></link><published>2017-01-22T00:00:00+01:00</published><updated>2017-01-22T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2017-01-22:/switching-from-slim-to-lightdm.html</id><summary type="html">&lt;p class="first last"&gt;Switching from SLiM to LightDM&lt;/p&gt;
</summary><content type="html">&lt;p&gt;For a long time I have been using &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/SLiM"&gt;SLiM&lt;/a&gt; as my display manager on ArchLinux.
It worked quite well for me, but is unmaintained since at least 3 years. Also
according to the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/SLiM"&gt;ArchLinux WiKi&lt;/a&gt; there are issues regarding to systemd
compatibility. Also the Linux desktop is headed towards Wayland so I need a
display manager which can start Wayland sessions.&lt;/p&gt;
&lt;p&gt;So my choice fell on &lt;a class="reference external" href="https://freedesktop.org/wiki/Software/LightDM/"&gt;LightDM&lt;/a&gt;, which should &amp;quot;support different display
technologies (X, Mir, Wayland, ...)&amp;quot; according to their website.&lt;/p&gt;
&lt;p&gt;Installing it on ArchLinux is as easy as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;lightdm-gtk-greeter
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we need to deactivate SLiM and activate LightDM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;slim.service
sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lightdm.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To switch without a reboot one needs to logout from the X-session, switch to a
TTY with Ctrl-Alt-1 and stop SLiM and start LightDM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;stop&lt;span class="w"&gt; &lt;/span&gt;slim.service
sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt; &lt;/span&gt;lightdm.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that I could login just to notice that my &lt;cite&gt;~/.xinitrc&lt;/cite&gt; wasn't getting
executed, so my helper tools like nm-applet weren't running. Since I already
solved that issue under &lt;a class="reference external" href="https://rnestler.github.io/setting-up-the-awesome-window-manager-in-ubuntu-1604.html"&gt;Ubuntu&lt;/a&gt;, I was a bit surprised that I need to solve
it differently under ArchLinux according to &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/LightDM#Migrating_from_SLiM"&gt;the WiKi&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mv&lt;span class="w"&gt; &lt;/span&gt;~/.xinitrc&lt;span class="w"&gt; &lt;/span&gt;~/.xprofile
vim&lt;span class="w"&gt; &lt;/span&gt;~/.xprofile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# remove the &amp;quot;exec awesome&amp;quot; line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I enjoy a working X-Session with the &lt;a class="reference external" href="https://awesomewm.org/"&gt;awesome window manager&lt;/a&gt; again,
while looking forward to a Wayland based desktop, maybe running the &lt;a class="reference external" href="https://github.com/Immington-Industries/way-cooler"&gt;Way
Cooler&lt;/a&gt; window manager!&lt;/p&gt;
</content><category term="2017"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="SLiM"></category><category term="LightDM"></category></entry><entry><title>Fixing a Corrupt mandb Database</title><link href="https://blog.rnstlr.ch/fixing-a-corrupt-mandb-database.html" rel="alternate"></link><published>2016-11-26T00:00:00+01:00</published><updated>2016-11-26T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2016-11-26:/fixing-a-corrupt-mandb-database.html</id><summary type="html">&lt;p class="first last"&gt;Fixing a corrupt mandb database&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Recently, probably due to an unexpected power failure, the &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Man_page"&gt;man page&lt;/a&gt; cache on
my machine which is managed by &lt;tt class="docutils literal"&gt;mandb&lt;/tt&gt; got corrupt. I noticed when
&lt;tt class="docutils literal"&gt;systemctl&lt;/tt&gt; showed the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;man-db.service&lt;/span&gt;&lt;/tt&gt; as failed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl
...
●&lt;span class="w"&gt; &lt;/span&gt;man-db.service&lt;span class="w"&gt;                     &lt;/span&gt;loaded&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="w"&gt;    &lt;/span&gt;Update&lt;span class="w"&gt; &lt;/span&gt;man-db&lt;span class="w"&gt; &lt;/span&gt;cache
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;systemctl status&lt;/tt&gt; didn't reveal that much information on the issue:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;status&lt;span class="w"&gt; &lt;/span&gt;man-db.service
●&lt;span class="w"&gt; &lt;/span&gt;man-db.service&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Update&lt;span class="w"&gt; &lt;/span&gt;man-db&lt;span class="w"&gt; &lt;/span&gt;cache
&lt;span class="w"&gt;   &lt;/span&gt;Loaded:&lt;span class="w"&gt; &lt;/span&gt;loaded&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;/usr/lib/systemd/system/man-db.service&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;static&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;vendor&lt;span class="w"&gt; &lt;/span&gt;preset:&lt;span class="w"&gt; &lt;/span&gt;disabled&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;Active:&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Result:&lt;span class="w"&gt; &lt;/span&gt;exit-code&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;since&lt;span class="w"&gt; &lt;/span&gt;Sam&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;-11-26&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;CET&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;10min&lt;span class="w"&gt; &lt;/span&gt;ago
&lt;span class="w"&gt;  &lt;/span&gt;Process:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/mandb&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;/FAILURE&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;Process:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23475&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/var/cache/man&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;/SUCCESS&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;Main&lt;span class="w"&gt; &lt;/span&gt;PID:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;/FAILURE&lt;span class="o"&gt;)&lt;/span&gt;

Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Handbuchseiten&lt;span class="w"&gt; &lt;/span&gt;unter&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/ru.KOI8-R&lt;span class="w"&gt; &lt;/span&gt;werden&lt;span class="w"&gt; &lt;/span&gt;verar
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Alte&lt;span class="w"&gt; &lt;/span&gt;Datenbankeinträge&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/tr&lt;span class="w"&gt; &lt;/span&gt;werden&lt;span class="w"&gt; &lt;/span&gt;gelösch
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Handbuchseiten&lt;span class="w"&gt; &lt;/span&gt;unter&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/tr&lt;span class="w"&gt; &lt;/span&gt;werden&lt;span class="w"&gt; &lt;/span&gt;verarbeitet
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Alte&lt;span class="w"&gt; &lt;/span&gt;Datenbankeinträge&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/fi&lt;span class="w"&gt; &lt;/span&gt;werden&lt;span class="w"&gt; &lt;/span&gt;gelösch
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Handbuchseiten&lt;span class="w"&gt; &lt;/span&gt;unter&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/fi&lt;span class="w"&gt; &lt;/span&gt;werden&lt;span class="w"&gt; &lt;/span&gt;verarbeitet
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23481&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Alte&lt;span class="w"&gt; &lt;/span&gt;Datenbankeinträge&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/zh&lt;span class="w"&gt; &lt;/span&gt;werden&lt;span class="w"&gt; &lt;/span&gt;gelösch
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;man-db.service:&lt;span class="w"&gt; &lt;/span&gt;Main&lt;span class="w"&gt; &lt;/span&gt;process&lt;span class="w"&gt; &lt;/span&gt;exited,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;/F
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Failed&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt; &lt;/span&gt;Update&lt;span class="w"&gt; &lt;/span&gt;man-db&lt;span class="w"&gt; &lt;/span&gt;cache.
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;man-db.service:&lt;span class="w"&gt; &lt;/span&gt;Unit&lt;span class="w"&gt; &lt;/span&gt;entered&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="w"&gt; &lt;/span&gt;state.
Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;:47:53&lt;span class="w"&gt; &lt;/span&gt;tuxedo&lt;span class="w"&gt; &lt;/span&gt;systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;man-db.service:&lt;span class="w"&gt; &lt;/span&gt;Failed&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;result&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;exit-code&amp;#39;&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So I ran &lt;tt class="docutils literal"&gt;mandb&lt;/tt&gt; manually to figure out what was wrong:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;mandb
Purging&lt;span class="w"&gt; &lt;/span&gt;old&lt;span class="w"&gt; &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;entries&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man...
Processing&lt;span class="w"&gt; &lt;/span&gt;manual&lt;span class="w"&gt; &lt;/span&gt;pages&lt;span class="w"&gt; &lt;/span&gt;under&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man...
Purging&lt;span class="w"&gt; &lt;/span&gt;old&lt;span class="w"&gt; &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;entries&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/sr@latin...
Processing&lt;span class="w"&gt; &lt;/span&gt;manual&lt;span class="w"&gt; &lt;/span&gt;pages&lt;span class="w"&gt; &lt;/span&gt;under&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/sr@latin...
...
Purging&lt;span class="w"&gt; &lt;/span&gt;old&lt;span class="w"&gt; &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;entries&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/zh...
gdbm&lt;span class="w"&gt; &lt;/span&gt;fatal:&lt;span class="w"&gt; &lt;/span&gt;Unexpected&lt;span class="w"&gt; &lt;/span&gt;end&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;file
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So gdbm seemed to have some problem. Since I didn't know what &lt;tt class="docutils literal"&gt;gdbm&lt;/tt&gt; was, I
asked the all knowingly package manager of ArchLinux:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-Qi&lt;span class="w"&gt; &lt;/span&gt;gdbm
Name&lt;span class="w"&gt;            &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;gdbm
Version&lt;span class="w"&gt;         &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.12-2
Description&lt;span class="w"&gt;     &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;GNU&lt;span class="w"&gt; &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;library
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since it is a database library I assumed that the database must be corrupt.
Lucky enough &lt;tt class="docutils literal"&gt;mandb&lt;/tt&gt; provides an option to create the database from scratch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;mandb&lt;span class="w"&gt; &lt;/span&gt;-c

Processing&lt;span class="w"&gt; &lt;/span&gt;manual&lt;span class="w"&gt; &lt;/span&gt;pages&lt;span class="w"&gt; &lt;/span&gt;under&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man...
Updating&lt;span class="w"&gt; &lt;/span&gt;index&lt;span class="w"&gt; &lt;/span&gt;cache&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;path&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;/usr/share/man/man1&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;Wait...mandb:&lt;span class="w"&gt; &lt;/span&gt;warning:&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/man1/gdk-pixbuf-csource.1.gz:&lt;span class="w"&gt; &lt;/span&gt;whatis&lt;span class="w"&gt; &lt;/span&gt;parse&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;gdk-pixbuf-csource&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;failed
mandb:&lt;span class="w"&gt; &lt;/span&gt;warning:&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/man1/gdk-pixbuf-query-loaders.1.gz:&lt;span class="w"&gt; &lt;/span&gt;whatis&lt;span class="w"&gt; &lt;/span&gt;parse&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;gdk-pixbuf-query-loaders&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;failed
...
Processing&lt;span class="w"&gt; &lt;/span&gt;manual&lt;span class="w"&gt; &lt;/span&gt;pages&lt;span class="w"&gt; &lt;/span&gt;under&lt;span class="w"&gt; &lt;/span&gt;/usr/local/man...
&lt;span class="m"&gt;124&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;man&lt;span class="w"&gt; &lt;/span&gt;subdirectories&lt;span class="w"&gt; &lt;/span&gt;contained&lt;span class="w"&gt; &lt;/span&gt;newer&lt;span class="w"&gt; &lt;/span&gt;manual&lt;span class="w"&gt; &lt;/span&gt;pages.
&lt;span class="m"&gt;22844&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;manual&lt;span class="w"&gt; &lt;/span&gt;pages&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;added.
&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;stray&lt;span class="w"&gt; &lt;/span&gt;cats&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;added.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It spilled my screen with lots of &lt;a class="reference external" href="https://gist.github.com/rnestler/0ad8fdeb54e732922721bd4ef785a8d9#file-mandb_c_output-txt"&gt;output and warnings&lt;/a&gt;, but seemed to finish
properly.&lt;/p&gt;
&lt;p&gt;It didn't help though and &lt;tt class="docutils literal"&gt;mandb&lt;/tt&gt; still failed. Looking at the output again I
noticed the line &lt;tt class="docutils literal"&gt;Purging old database entries in &lt;span class="pre"&gt;/usr/share/man/zh...&lt;/span&gt;&lt;/tt&gt;. To
see which package placed its manpage there I queried pacman again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-Qo&lt;span class="w"&gt; &lt;/span&gt;/usr/share/man/zh
/usr/share/man/zh/&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;owned&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;nmap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;.31-1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So I tried to uninstall and reinstall nmap:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;nmap
%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;mandb
%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;nmap
%&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;mandb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this time it finally worked! I'm still not sure what exactly triggered the
failure in the first place, but I'm not sure how to further debug it.&lt;/p&gt;
</content><category term="2016"></category><category term="Linux"></category><category term="ArchLinux"></category><category term="man-db"></category></entry><entry><title>Verify Every Single Commit on a git rebase</title><link href="https://blog.rnstlr.ch/verify-every-single-commit-on-a-git-rebase.html" rel="alternate"></link><published>2016-10-31T00:00:00+01:00</published><updated>2016-10-31T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2016-10-31:/verify-every-single-commit-on-a-git-rebase.html</id><summary type="html">&lt;p class="first last"&gt;Check every commit when reordering commits with git rebase -i&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Sometimes when one uses &lt;tt class="docutils literal"&gt;git rebase &lt;span class="pre"&gt;-i&lt;/span&gt;&lt;/tt&gt; to reorder, split or merge commits,
we screw up the commits in between without noticing, since the final commit
compiles and passes every unit test.&lt;/p&gt;
&lt;p&gt;For example imagine we have this little Rust code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we want to show how nicely Rust can print a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::Vec&lt;/span&gt;&lt;/tt&gt; so we create a
branch: &lt;tt class="docutils literal"&gt;git checkout &lt;span class="pre"&gt;-b&lt;/span&gt; add_vector&lt;/tt&gt; and add the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v: {:?}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will compile and give us some wonderful output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;cargo&lt;span class="w"&gt; &lt;/span&gt;run
v:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
Hello,&lt;span class="w"&gt; &lt;/span&gt;world!
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We are satisfied with the changes and commit it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;src/main.rs
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Print vector&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We than add some more code to show the length of our fancy vector:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v: {:?}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;v.len(): {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This also works just fine so we commit it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;src/main.rs
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Print length of vector&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But of course we are not satisfied with the commit history and want to
rearrange our two commits. So we do a interactive rebase:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;rebase&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;master
pick&lt;span class="w"&gt; &lt;/span&gt;8fc4573&lt;span class="w"&gt; &lt;/span&gt;Print&lt;span class="w"&gt; &lt;/span&gt;length&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;vector
pick&lt;span class="w"&gt; &lt;/span&gt;6d22bd9&lt;span class="w"&gt; &lt;/span&gt;Print&lt;span class="w"&gt; &lt;/span&gt;vector
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will succeed without error and we still receive the correct output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;cargo&lt;span class="w"&gt; &lt;/span&gt;run
v:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
Hello,&lt;span class="w"&gt; &lt;/span&gt;world!
v.len&lt;span class="o"&gt;()&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But we introduced a broken commit while rebasing! To detect this we can run the
following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;rebase&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;master&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cargo build&amp;quot;&lt;/span&gt;

Executing:&lt;span class="w"&gt; &lt;/span&gt;cargo&lt;span class="w"&gt; &lt;/span&gt;build
&lt;span class="w"&gt;   &lt;/span&gt;Compiling&lt;span class="w"&gt; &lt;/span&gt;git_rebase_x_test&lt;span class="w"&gt; &lt;/span&gt;v0.1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;file:///home/rnestler/proggen/git_rebase_x_test&lt;span class="o"&gt;)&lt;/span&gt;
error&lt;span class="o"&gt;[&lt;/span&gt;E0425&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;unresolved&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;v&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;src/main.rs:4:29
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;println!&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;v.len(): {}&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;v.len&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;                             &lt;/span&gt;^
&amp;lt;std&lt;span class="w"&gt; &lt;/span&gt;macros&amp;gt;:2:27:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;:58&lt;span class="w"&gt; &lt;/span&gt;note:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;expansion&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;format_args!
&amp;lt;std&lt;span class="w"&gt; &lt;/span&gt;macros&amp;gt;:3:1:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;:54&lt;span class="w"&gt; &lt;/span&gt;note:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;expansion&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;print!&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;defined&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;std&lt;span class="w"&gt; &lt;/span&gt;macros&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;
src/main.rs:4:5:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;:38&lt;span class="w"&gt; &lt;/span&gt;note:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;expansion&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;println!&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;defined&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;std&lt;span class="w"&gt; &lt;/span&gt;macros&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;

error:&lt;span class="w"&gt; &lt;/span&gt;aborting&lt;span class="w"&gt; &lt;/span&gt;due&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;previous&lt;span class="w"&gt; &lt;/span&gt;error

error:&lt;span class="w"&gt; &lt;/span&gt;Could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;compile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;git_rebase_x_test&lt;span class="sb"&gt;`&lt;/span&gt;.

To&lt;span class="w"&gt; &lt;/span&gt;learn&lt;span class="w"&gt; &lt;/span&gt;more,&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;again&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;--verbose.
Execution&lt;span class="w"&gt; &lt;/span&gt;failed:&lt;span class="w"&gt; &lt;/span&gt;cargo&lt;span class="w"&gt; &lt;/span&gt;build
You&lt;span class="w"&gt; &lt;/span&gt;can&lt;span class="w"&gt; &lt;/span&gt;fix&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;problem,&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;run

&lt;span class="w"&gt;    &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;rebase&lt;span class="w"&gt; &lt;/span&gt;--continue
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will execute the command after &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-x&lt;/span&gt;&lt;/tt&gt; for every commit and stop rebasing
if the command fails.  We now can go on and fix this commit and continue
rebasing.&lt;/p&gt;
&lt;p&gt;This little git feature allows us to not only have a nice looking, but also
&lt;em&gt;working&lt;/em&gt; git history after rebasing!&lt;/p&gt;
</content><category term="2016"></category><category term="git"></category><category term="rebase"></category></entry><entry><title>Setting up the Awesome Window Manager in Ubuntu 16.04</title><link href="https://blog.rnstlr.ch/setting-up-the-awesome-window-manager-in-ubuntu-1604.html" rel="alternate"></link><published>2016-10-19T00:00:00+02:00</published><updated>2016-10-19T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2016-10-19:/setting-up-the-awesome-window-manager-in-ubuntu-1604.html</id><summary type="html">&lt;p class="first last"&gt;Setting up the awesome window manager under Ubuntu 16.04&lt;/p&gt;
</summary><content type="html">&lt;p&gt;My window manager of choice is the &lt;a class="reference external" href="https://awesomewm.org/"&gt;awesome window manager&lt;/a&gt;. On my private
laptop I have it setup together with the display manager &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/SLiM"&gt;SLiM&lt;/a&gt; and a custom
&lt;tt class="docutils literal"&gt;.xinitrc&lt;/tt&gt; which starts a few helpers like the &lt;a class="reference external" href="https://wiki.gnome.org/Projects/GnomeKeyring"&gt;gnome-keyring-daemon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On my work laptop I have Ubuntu 16.04 installed.  Ubuntu uses &lt;a class="reference external" href="https://freedesktop.org/wiki/Software/LightDM/"&gt;LightDM&lt;/a&gt; (The
Light Display Manager) to manage logins. After installing awesome with &lt;tt class="docutils literal"&gt;sudo
apt install awesome&lt;/tt&gt; LightDM will allow you to start an awesome session.  This
is due to the &lt;tt class="docutils literal"&gt;/usr/share/xsessions/awesome.desktop&lt;/tt&gt; file contained in the
awesome package.&lt;/p&gt;
&lt;p&gt;Unfortunately this starts awesome directly and does not execute the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xinitrc&lt;/span&gt;&lt;/tt&gt; file.  But it does load the various &lt;tt class="docutils literal"&gt;/etc/X11/Xsession.d/&lt;/tt&gt;
files which will then load the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.xsessionrc&lt;/span&gt;&lt;/tt&gt; file if it exists.  When
&lt;tt class="docutils literal"&gt;.xsessionrc&lt;/tt&gt; gets loaded it will pass the session to be started as the first
argument (&lt;tt class="docutils literal"&gt;$1&lt;/tt&gt;). So to start any helpers we create it with the following
content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# ~/.xsessionrc&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;
awesome&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;gnome-keyring-daemon&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;pkcs11,secrets,ssh,gpg&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This starts the gnome-keyring-daemon and export the &lt;tt class="docutils literal"&gt;SSH_AUTH_SOCK&lt;/tt&gt; variable,
but only if we are trying to start an awesome session.&lt;/p&gt;
</content><category term="2016"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="awesome window manager"></category></entry><entry><title>Debugging Rust code with vim and Conque-GDB</title><link href="https://blog.rnstlr.ch/debugging-rust-code-with-vim-and-conque-gdb.html" rel="alternate"></link><published>2016-05-25T00:00:00+02:00</published><updated>2016-05-25T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2016-05-25:/debugging-rust-code-with-vim-and-conque-gdb.html</id><summary type="html">&lt;p class="first last"&gt;Using vim together with Conque-GDB to debug Rust and C/C++ code.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;While I use debuggers quite a lot at work in IDEs such as VisualStudio, PyCharm
or QtCreator (of course all configured to use vim-like keybindings), I seldom
use them when working on my side projects.&lt;/p&gt;
&lt;p&gt;This is maybe due to the fact, that for my side project I mainly use vim
together with make/cmake, python or Rust and cargo. My &amp;quot;debugging&amp;quot; then
revolves mostly around printing variables and getting stacktraces with gdb if
something goes very wrong.&lt;/p&gt;
&lt;p&gt;Also, when programming in Rust, I never felt the need for a debugger, since one
hardly gets a segmentation fault.&lt;/p&gt;
&lt;p&gt;Nevertheless I thought it would be a good idea to try to integrate gdb within
vim to be able to debug code if necessary. After some sophisticated research
with &lt;a class="reference external" href="https://duckduckgo.com/?q=vim+gdb&amp;amp;ia=web"&gt;duckduckgo&lt;/a&gt;, I found quite
some vim plugins for gdb support and &lt;a class="reference external" href="https://stackoverflow.com/questions/6695410/gdb-front-end-to-use-with-vim"&gt;this stackoverflow entry&lt;/a&gt;
which compares some of them. The one that stood out for me was Conque-GDB
because it looked very simple yet powerful.&lt;/p&gt;
&lt;div class="section" id="conque-gdb"&gt;
&lt;h2&gt;Conque-GDB&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/vim-scripts/Conque-GDB"&gt;Conque-GDB&lt;/a&gt; is a very simple vim
plugin which provides a vim buffer that acts as a terminal emulator and runs
gdb in it.&lt;/p&gt;
&lt;p&gt;Further it provides some keybindings to control the gdb instance like
&lt;tt class="docutils literal"&gt;&amp;lt;Leader&amp;gt;r&lt;/tt&gt; to run the process or &lt;tt class="docutils literal"&gt;&amp;lt;Leader&amp;gt;b&lt;/tt&gt; to set a breakpoint at the
current line and so on. There is a small &lt;a class="reference external" href="https://www.youtube.com/watch?v=ZcSjaYSoqnc&amp;amp;feature=youtu.be"&gt;demonstration video&lt;/a&gt; available on
youtube which shows some of the capabilities of the plugin.&lt;/p&gt;
&lt;p&gt;If you use vundle to manage your vim plugins installing Conque-GDB is as easy
as adding&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Plugin &lt;span class="s1"&gt;&amp;#39;vim-scripts/Conque-GDB&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to your &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt;. I found it quite useful since it allows you to do the
following things:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Set breakpoints from within vim&lt;/li&gt;
&lt;li&gt;Show the current position of execution in vim&lt;/li&gt;
&lt;li&gt;Examine the contents of variables from within vim&lt;/li&gt;
&lt;li&gt;Some more stuff!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="using-it-with-rust"&gt;
&lt;h2&gt;Using it with Rust&lt;/h2&gt;
&lt;p&gt;Conque-GDB allows to define your own gdb executable using the &lt;tt class="docutils literal"&gt;:ConqueGdbExe&lt;/tt&gt;
command.  To debug Rust code one probably wants to use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;rust-gdb&lt;/span&gt;&lt;/tt&gt; for pretty
printing support of Rust bindings.&lt;/p&gt;
&lt;p&gt;To debug Rust code we first set &lt;tt class="docutils literal"&gt;:ConqueGdbExe &lt;span class="pre"&gt;rust-gdb&lt;/span&gt;&lt;/tt&gt;. Then we start an
instance using &lt;tt class="docutils literal"&gt;:ConqueGdb &lt;span class="pre"&gt;target/debug/$name&lt;/span&gt;&lt;/tt&gt; where &lt;tt class="docutils literal"&gt;$name&lt;/tt&gt; is the name of
the executable you want do debug. Then we may set some breakpoints using
&lt;tt class="docutils literal"&gt;&amp;lt;Leader&amp;gt;b&lt;/tt&gt; and finally run our program with &lt;tt class="docutils literal"&gt;&amp;lt;Leader&amp;gt;r&lt;/tt&gt;. When hitting a
breakpoint we can examine variables using &lt;tt class="docutils literal"&gt;&amp;lt;Leader&amp;gt;p&lt;/tt&gt; to print their content.&lt;/p&gt;
&lt;img alt="Vim screen shot using ConqueGdb" class="align-center" src="/images/vim_conque_gdb.png" style="width: 100%;" /&gt;
&lt;p&gt;For me this is quite a decent debugging experience while still being able to
stay in my favourite text editor!&lt;/p&gt;
&lt;p&gt;Do you have any comments, found a bug or an error? Please leave a note on
&lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/4l226c/debugging_rust_code_with_vim_and_conquegdb/"&gt;Reddit&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content><category term="2016"></category><category term="programming"></category><category term="C++"></category><category term="Rust"></category><category term="vim"></category><category term="gdb"></category></entry><entry><title>C++ List of ScopeGuard</title><link href="https://blog.rnstlr.ch/c-list-of-scopeguard.html" rel="alternate"></link><published>2016-04-11T00:00:00+02:00</published><updated>2016-04-11T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2016-04-11:/c-list-of-scopeguard.html</id><summary type="html">&lt;p class="first last"&gt;Implementing a easy to use list of ScopeGuard&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Recently the developer of &lt;a class="reference external" href="https://github.com/LibrePCB/LibrePCB"&gt;LibrePCB&lt;/a&gt;
asked me about a C++ pattern to undo parts of an action if an exception gets
thrown in the middle of it.&lt;/p&gt;
&lt;p&gt;Of course he basically described the main usage of a ScopeGuard. I went ahead
and &lt;a class="reference external" href="https://github.com/LibrePCB/LibrePCB/pull/57"&gt;implemented one&lt;/a&gt; based on
a &lt;a class="reference external" href="https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C"&gt;talk by Andrei Alexandrescu&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="basic-use-of-a-scopeguard"&gt;
&lt;h2&gt;Basic use of a ScopeGuard&lt;/h2&gt;
&lt;p&gt;The ScopeGuard allows to write transactional code that will undo previous parts
if later code throws an exception.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;guard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scopeGuard&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop_back&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Do stuff that may throw&lt;/span&gt;
&lt;span class="n"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// everything worked, so don&amp;#39;t undo&lt;/span&gt;
&lt;span class="n"&gt;guard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So if &lt;tt class="docutils literal"&gt;database.add(item)&lt;/tt&gt; throws, the item in myVector will be removed. For
more about the motivation behind ScopeGuard see the talk above or &lt;a class="reference external" href="http://www.drdobbs.com/cpp/generic-change-the-way-you-write-excepti/184403758"&gt;this drdobbs
article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using C++11 and later the implementation is fairly simple:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;noexcept&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;protected&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Fun&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;noexcept&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;mF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;noexcept&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;mF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mF&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;noexcept&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mF&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;Fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Fun&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Fun&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scopeGuard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuard&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Fun&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="why-a-scopeguardlist"&gt;
&lt;h2&gt;Why a ScopeGuardList?&lt;/h2&gt;
&lt;p&gt;If you have a transaction that consists of a lot of steps that may throw and
need to be undone it leads to code like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;doThing1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;guard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;makeGuard&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;undoThing1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="n"&gt;doThing2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;guard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;makeGuard&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;undoThing2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="n"&gt;doThing3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;guard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;makeGuard&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;undoThing3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Do stuff that may trow&lt;/span&gt;

&lt;span class="n"&gt;guard1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;guard2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;guard3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Things get even worse when doing something in a loop:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;doStuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// how do we create a guard for every operation?&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid that repetition and the potential error of a missing call to
&lt;tt class="docutils literal"&gt;dismiss()&lt;/tt&gt; we came up with a &lt;tt class="docutils literal"&gt;ScopeGuardList&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="implementation-with-std-function"&gt;
&lt;h2&gt;Implementation with std::function&amp;lt;&amp;gt;&lt;/h2&gt;
&lt;p&gt;A simple implementation just contains a list of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::function&amp;lt;&amp;gt;&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;scopeguard.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;utility&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;functional&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;ScopeGuardList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScopeGuardList&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardBase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;mScopeGuards&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mScopeGuards&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;ScopeGuardList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mActive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scopeGuard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mScopeGuards&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;scopeGuard&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Fun&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mScopeGuards&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emplace_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mScopeGuards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;This implementation uses the type erasure of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::function&lt;/span&gt;&lt;/tt&gt; to store several
undo functions. While being fairly simple it performs worse compared to the
above ScopeGuard implementation.&lt;/p&gt;
&lt;p&gt;A quick benchmark showed that the &lt;tt class="docutils literal"&gt;ScopeGuard&lt;/tt&gt; performs ~14 times faster than
&lt;tt class="docutils literal"&gt;ScopeGuardList&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;chrono&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;quot;scopeguardlist.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;testScopeGuard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;time_point&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;high_resolution_clock&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c1"&gt;// make volatile to avoid optimizations
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;volatile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setByGuard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;high_resolution_clock&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;guard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scopeGuard&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;]{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setByGuard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;high_resolution_clock&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;elapsed_seconds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Needed &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;elapsed_seconds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;s for &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setByGuard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; loops&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;testScopeGuardList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;time_point&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;high_resolution_clock&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c1"&gt;// make volatile to avoid optimizations
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;volatile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setByGuard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;high_resolution_clock&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;guardList&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ScopeGuardList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;guardList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;]{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setByGuard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;high_resolution_clock&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;chrono&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;elapsed_seconds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Needed &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;elapsed_seconds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;s for &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setByGuard0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; loops&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;testScopeGuard&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;testScopeGuardList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;table border="1" class="docutils"&gt;
&lt;caption&gt;Benchmark with different optimization levels&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="11%" /&gt;
&lt;col width="41%" /&gt;
&lt;col width="48%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;-O$N&lt;/th&gt;
&lt;th class="head"&gt;Time[s] ScopeGuard&lt;/th&gt;
&lt;th class="head"&gt;Time[s] ScopGuardList&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0.178144&lt;/td&gt;
&lt;td&gt;2.61144&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0.0180427&lt;/td&gt;
&lt;td&gt;0.286136&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0.0170452&lt;/td&gt;
&lt;td&gt;0.283548&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0.0170423&lt;/td&gt;
&lt;td&gt;0.289958&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since the &lt;tt class="docutils literal"&gt;ScopeGuardList&lt;/tt&gt; isn't used in any performance critical part in
LibrePCB we didn't look further for a better performing way without type
erasure.&lt;/p&gt;
&lt;p&gt;Do you have any comments, found a bug or an error? Please leave a note on
&lt;a class="reference external" href="https://www.reddit.com/r/cpp/comments/4ecf5a/c_list_of_scopeguard/"&gt;Reddit&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content><category term="2016"></category><category term="programming"></category><category term="C++"></category></entry><entry><title>Reading the SHTC1 smart gadget BLE device</title><link href="https://blog.rnstlr.ch/reading-the-shtc1-smart-gadget-ble-device.html" rel="alternate"></link><published>2015-08-16T00:00:00+02:00</published><updated>2015-08-16T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2015-08-16:/reading-the-shtc1-smart-gadget-ble-device.html</id><summary type="html">&lt;p class="first last"&gt;Connection to a SHTC1 smart gadget and read its sensor values&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="requirements"&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;First we need to install the bluez bluetooth stack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;bluez&lt;span class="w"&gt; &lt;/span&gt;bluez-utils
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To be able to switch the bluetooth on and off I use the bluetooth command from
tlp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;tlp
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;bluetooth&lt;span class="w"&gt; &lt;/span&gt;on
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next we activate the bluetooth service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;daemon-reload
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt; &lt;/span&gt;bluetooth.service
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="connecting"&gt;
&lt;h2&gt;Connecting&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;hcitool&lt;span class="w"&gt; &lt;/span&gt;dev
Devices:
&lt;span class="w"&gt;        &lt;/span&gt;hci0&lt;span class="w"&gt;    &lt;/span&gt;F8:16:54:CD:5F:CC
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;hcitool&lt;span class="w"&gt; &lt;/span&gt;lescan
LE&lt;span class="w"&gt; &lt;/span&gt;Scan&lt;span class="w"&gt; &lt;/span&gt;...
BC:6A:29:C1:A9:3B&lt;span class="w"&gt; &lt;/span&gt;SHTC1&lt;span class="w"&gt; &lt;/span&gt;smart&lt;span class="w"&gt; &lt;/span&gt;gadget

$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;gatttool&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;BC:6A:29:C1:A9:3B&lt;span class="w"&gt; &lt;/span&gt;-I
&lt;span class="o"&gt;[&lt;/span&gt;BC:6A:29:C1:A9:3B&lt;span class="o"&gt;][&lt;/span&gt;LE&lt;span class="o"&gt;]&lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;connect
Attempting&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;connect&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;BC:6A:29:C1:A9:3B
Connection&lt;span class="w"&gt; &lt;/span&gt;successful
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reading-the-sensordata"&gt;
&lt;h2&gt;Reading the sensordata&lt;/h2&gt;
&lt;p&gt;According to &lt;a class="reference external" href="https://github.com/Sensirion/SmartGadget-iOS/blob/50dc0f36c0624f825f7637bceeb5a34da7c878f3/Classes/Peripheral/Services/Sensirion/Shtc1/Shtc1RhtService.m"&gt;the SmartGadget-iOS code&lt;/a&gt;
The UUID to read the temperature is 0xAA21.
So we try to read it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;BC:6A:29:C1:A9:3B&lt;span class="o"&gt;][&lt;/span&gt;LE&lt;span class="o"&gt;]&lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;char-read-uuid&lt;span class="w"&gt; &lt;/span&gt;0xAA21
handle:&lt;span class="w"&gt; &lt;/span&gt;0x0025&lt;span class="w"&gt;   &lt;/span&gt;value:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;66&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;0b&lt;span class="w"&gt; &lt;/span&gt;b9&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first 16-bit value is the temperature and the second the humidity. Note
that the byte order of the values is big endian.&lt;/p&gt;
&lt;p&gt;So to calculate the measured temperature in python we need to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;temperature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x0b66&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;100.0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temperature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;°C&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;29.18&lt;/span&gt;&lt;span class="err"&gt;°&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;humidity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x14b9&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;humidity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%RH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;53.05&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;RH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="2015"></category><category term="BLE"></category><category term="bluetooth"></category><category term="bluez"></category><category term="SHTC1"></category><category term="SmartGadget"></category></entry><entry><title>Setting up airline-vim</title><link href="https://blog.rnstlr.ch/setting-up-airline-vim.html" rel="alternate"></link><published>2015-07-03T00:00:00+02:00</published><updated>2015-07-03T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2015-07-03:/setting-up-airline-vim.html</id><summary type="html">&lt;p class="first last"&gt;Setting up the airline-vim plug-in and configure the powerline fonts&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Recently I noticed, that my Vim configuration is getting a bit outdated. The
configuration of one of my mate had a fancy status line, showed syntax errors
when saving a buffer and he used &lt;a class="reference external" href="https://github.com/gmarik/Vundle.vim"&gt;vundle&lt;/a&gt; to manage his Vim plug-ins.  I used to
manage my Vim plug-ins with &lt;a class="reference external" href="https://github.com/archlinuxfr/yaourt"&gt;yaourt&lt;/a&gt;, a
package manager for &lt;a class="reference external" href="https://aur4.archlinux.org/"&gt;user packages&lt;/a&gt; in ArchLinux.&lt;/p&gt;
&lt;div class="section" id="installing-vundle"&gt;
&lt;h2&gt;Installing vundle&lt;/h2&gt;
&lt;p&gt;First one needs to get the vundle plug-in via git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/VundleVim/Vundle.vim.git&lt;span class="w"&gt; &lt;/span&gt;~/.vim/bundle/Vundle.vim
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then one needs to setup Vim to use it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; ~/.vimrc&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;nocompatible&lt;/span&gt;
&lt;span class="k"&gt;filetype&lt;/span&gt; off

&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;rtp&lt;/span&gt;&lt;span class="p"&gt;+=~&lt;/span&gt;&lt;span class="sr"&gt;/.vim/&lt;/span&gt;bundle&lt;span class="sr"&gt;/Vundle.vim/&lt;/span&gt;
&lt;span class="k"&gt;call&lt;/span&gt; vundle#rc&lt;span class="p"&gt;()&lt;/span&gt;

Plugin &lt;span class="s1"&gt;&amp;#39;gmarik/Vundle.vim&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;filetype&lt;/span&gt; plugin indent &lt;span class="k"&gt;on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From there adding additional plug-ins is as easy as adding a &lt;tt class="docutils literal"&gt;Plugin ...&lt;/tt&gt; line
right after the vundle plug-in.&lt;/p&gt;
&lt;p&gt;So adding &lt;a class="reference external" href="https://github.com/bling/vim-airline"&gt;airline&lt;/a&gt; for a fancy status
line, &lt;a class="reference external" href="https://github.com/scrooloose/syntastic"&gt;syntastic&lt;/a&gt; as a syntax checker
and git support with &lt;a class="reference external" href="https://github.com/tpope/vim-fugitive"&gt;fugitive&lt;/a&gt; is as
easy as this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Plugin &lt;span class="s1"&gt;&amp;#39;scrooloose/syntastic&amp;#39;&lt;/span&gt;
Plugin &lt;span class="s1"&gt;&amp;#39;tpope/vim-fugitive&amp;#39;&lt;/span&gt;
Plugin &lt;span class="s1"&gt;&amp;#39;bling/vim-airline&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuring-airline"&gt;
&lt;h2&gt;Configuring airline&lt;/h2&gt;
&lt;p&gt;Out of the box airline does show the status bar only if at least one split is
active:&lt;/p&gt;
&lt;img alt="Vim screen shot with airline" class="align-center" src="/images/vim-airline0.png" style="width: 100%;" /&gt;
&lt;p&gt;Also the default symbols used in the statusline aren't that fancy. Adding &lt;tt class="docutils literal"&gt;set
laststatus=2&lt;/tt&gt; enables the statusline by default and &lt;tt class="docutils literal"&gt;let
g:airline_powerline_fonts = 1&lt;/tt&gt; lets one use the &lt;a class="reference external" href="https://github.com/powerline/fonts"&gt;powerline fonts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Configuring my terminal emulator of choice, urxvt, turned out to be a bit of a
hassle.&lt;/p&gt;
&lt;p&gt;Installing the fonts was easy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/powerline/fonts.git
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fonts
./install.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.Xresources&lt;/span&gt;&lt;/tt&gt; configure urxvt to use a powerline font:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;URxvt.font:&lt;span class="w"&gt; &lt;/span&gt;xft:DejaVu&lt;span class="w"&gt; &lt;/span&gt;Sans&lt;span class="w"&gt; &lt;/span&gt;Mono&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Powerline:size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then reloading the configuration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xrdb&lt;span class="w"&gt; &lt;/span&gt;-merge&lt;span class="w"&gt; &lt;/span&gt;~/.Xresources
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem was that urxvt didn't like that at all and displayed the fonts with
the spacing all messed up. After an hour of googling and trying out different
stuff, it turned out I just needed to kill and restart the urxvtd daemon!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;killall&lt;span class="w"&gt; &lt;/span&gt;urxvtd
%&lt;span class="w"&gt; &lt;/span&gt;urxvtd&lt;span class="w"&gt; &lt;/span&gt;-q&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;-f
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that it worked like a charm and the special symbols did show up nicely:&lt;/p&gt;
&lt;img alt="Vim screen shot with airline and powerline fonts" class="align-center" src="/images/vim-airline1.png" style="width: 100%;" /&gt;
&lt;/div&gt;
</content><category term="2015"></category><category term="Vim"></category><category term="airline"></category><category term="urxvt"></category><category term="ArchLinux"></category></entry><entry><title>Serialization in Rust</title><link href="https://blog.rnstlr.ch/serialization-in-rust.html" rel="alternate"></link><published>2015-04-09T00:00:00+02:00</published><updated>2015-04-09T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2015-04-09:/serialization-in-rust.html</id><summary type="html">&lt;p class="first last"&gt;Using the Rust JSON serialization to implement the Space API&lt;/p&gt;
</summary><content type="html">&lt;p&gt;One of my first projects with Rust is the &lt;a class="reference external" href="https://spaceapi.net/"&gt;spaceapi&lt;/a&gt;
implementation of my local &lt;a class="reference external" href="https://coredump.ch"&gt;hackerspace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find the source for it on &lt;a class="reference external" href="https://github.com/coredump-ch/spaceapi"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="the-space-api"&gt;
&lt;h2&gt;The Space API&lt;/h2&gt;
&lt;p&gt;The Space API is a rather simple JSON API used to expose information about a
hackerspace.  It consist of some static data like the location or some contact
information and some dynamic data like the current state of the space.&lt;/p&gt;
&lt;p&gt;Implementing JSON serialization in Rust is easy when using the &lt;a class="reference external" href="https://doc.rust-lang.org/rustc-serialize/rustc_serialize/json/index.html"&gt;rustc_serialize&lt;/a&gt;
crate.&lt;/p&gt;
&lt;p&gt;Using the &lt;tt class="docutils literal"&gt;#[derive(RustcEncodable)]&lt;/tt&gt; attribute on a type, serializing a
struct is as easy as calling &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;json::encode(&amp;amp;status).unwrap()&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rustc_serialize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rustc_serialize&lt;/span&gt;::&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#[derive(RustcEncodable)]&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;::&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;0.13&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;space&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;coredump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;: &lt;span class="s"&gt;&amp;quot;https://www.coredump.ch/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code will output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;api&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.13&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;space&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;coredump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://www.coredump.ch/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the field names map directly to keys in the JSON output. That
way we can model the Space API objects with structs and have a simple typesafe
solution!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-type-property"&gt;
&lt;h2&gt;The 'type' property&lt;/h2&gt;
&lt;p&gt;Unfortunately &lt;a class="reference external" href="http://spaceapi.net/documentation#documentation-ref-13-root-feeds-blog-type"&gt;parts&lt;/a&gt;
of the Space API contain the property &lt;tt class="docutils literal"&gt;type&lt;/tt&gt; which is a keyword in Rust.
Of course using it as an identifier for a Struct field yields a compile error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#[derive(RustcEncodable)]&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class="literal-block"&gt;
main.rs:7:9: 7:13 error: expected identifier, found keyword `type`
main.rs:7     pub type: String,
                  ^~~~
&lt;/pre&gt;
&lt;p&gt;So we need to rename the field to something like &lt;tt class="docutils literal"&gt;_type&lt;/tt&gt; and change the
serialization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="implementing-tojson"&gt;
&lt;h2&gt;Implementing ToJson&lt;/h2&gt;
&lt;p&gt;My first idea was to implement the &lt;a class="reference external" href="http://doc.rust-lang.org/rustc-serialize/rustc_serialize/json/trait.ToJson.html"&gt;ToJson&lt;/a&gt;
trait for Feed.  Implementing &lt;tt class="docutils literal"&gt;ToJson&lt;/tt&gt; is easy, there is just one method
&lt;tt class="docutils literal"&gt;to_json&lt;/tt&gt; which returns the &lt;tt class="docutils literal"&gt;Json&lt;/tt&gt; object:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;::&lt;span class="n"&gt;ToJson&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;to_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;Json&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BTreeMap&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Json&lt;/span&gt;::&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sadly this means the &lt;tt class="docutils literal"&gt;Feeds&lt;/tt&gt; struct can't hold the Feed struct directly
anymore, but needs it as a &lt;tt class="docutils literal"&gt;Json&lt;/tt&gt; object:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#[derive(RustcEncodable)]&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Feeds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;: &lt;span class="nc"&gt;Json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otherwise the Encodable trait can't be derived anymore, because it's not
implemented for the type Feed.  Since this reduces type safety somewhat (we
could set &lt;tt class="docutils literal"&gt;blog&lt;/tt&gt; field to any Json string), I discarded this solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="implementing-encodable"&gt;
&lt;h2&gt;Implementing Encodable&lt;/h2&gt;
&lt;p&gt;To regain type safety we need to implement the &lt;a class="reference external" href="https://doc.rust-lang.org/rustc-serialize/rustc_serialize/trait.Encodable.html"&gt;Encodable trait&lt;/a&gt;
for Feed.
The required method for Encodable may be a bit intimidating at the first look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;trait&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Encodable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;: &lt;span class="nc"&gt;Encoder&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nb"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically it takes a reference to self and an Encoder and returns an &lt;a class="reference external" href="http://doc.rust-lang.org/nightly/core/result/enum.Result.html"&gt;Result&lt;/a&gt; containing
either &lt;tt class="docutils literal"&gt;OK()&lt;/tt&gt; on success or &lt;tt class="docutils literal"&gt;Err(S)&lt;/tt&gt; on failure.  But how does one use the
encoder?&lt;/p&gt;
&lt;div class="section" id="using-the-generated-code-as-base"&gt;
&lt;h3&gt;Using the generated code as base&lt;/h3&gt;
&lt;p&gt;After some googleing I found out that one can show the macro expanded source
code. It's kinda like the pre-processor output when coming from the C/C++
world.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
rustc -Z unstable-options src/spaceapi.rs --pretty expanded
&lt;/pre&gt;
&lt;p&gt;The expanded code is pretty readable and it was easy to find the corresponding
trait implementation generated by the Rust compiler:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;::&lt;span class="n"&gt;rustc_serialize&lt;/span&gt;::&lt;span class="n"&gt;Encodable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;__S&lt;/span&gt;: ::&lt;span class="n"&gt;rustc_serialize&lt;/span&gt;::&lt;span class="n"&gt;Encoder&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__arg_0&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;-&amp;gt; ::&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;result&lt;/span&gt;::&lt;span class="nb"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__S&lt;/span&gt;::&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_type&lt;/span&gt;: &lt;span class="nc"&gt;ref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__self_0_0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;: &lt;span class="nc"&gt;ref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__self_0_1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;__arg_0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit_struct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Feed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="k"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit_struct_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                                           &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                                                           &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__self_0_0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                                                       &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;::&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;result&lt;/span&gt;::&lt;span class="nb"&gt;Result&lt;/span&gt;::&lt;span class="nb"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__try_var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="n"&gt;__try_var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;::&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;result&lt;/span&gt;::&lt;span class="nb"&gt;Result&lt;/span&gt;::&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__try_var&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                                    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;::&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;result&lt;/span&gt;::&lt;span class="nb"&gt;Result&lt;/span&gt;::&lt;span class="nb"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__try_var&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit_struct_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="k"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                                            &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                                                            &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;__self_0_1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                                                        &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So from there I tried to make the code a bit more readable which resulted in
the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;impl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Encodable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;: &lt;span class="nc"&gt;Encoder&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;encoder&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nb"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;::&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Feed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_type&lt;/span&gt;: &lt;span class="nc"&gt;ref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;: &lt;span class="nc"&gt;ref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p_url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;encoder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit_struct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Feed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="k"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="kr"&gt;try&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit_struct_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="k"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p_type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit_struct_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="k"&gt;usize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nc"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p_url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The final encoded String looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://www.coredump.ch/feed/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Have comments? Discuss on &lt;a class="reference external" href="https://news.ycombinator.com/item?id=9470475"&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="2015"></category><category term="programming"></category><category term="Rust"></category><category term="JSON"></category><category term="hackerspace"></category></entry><entry><title>More Rust compared to C++</title><link href="https://blog.rnstlr.ch/more-rust-compared-to-c.html" rel="alternate"></link><published>2015-02-06T00:00:00+01:00</published><updated>2015-02-06T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2015-02-06:/more-rust-compared-to-c.html</id><summary type="html">&lt;p class="first last"&gt;More about the programming language Rust&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After &lt;a class="reference external" href="http://rnestler.github.io/learning-rust.html"&gt;getting in touch with Rust&lt;/a&gt;, the next thing I was looking
at were pointers and the concept of ownership and borrowing in Rust.&lt;/p&gt;
&lt;div class="section" id="pointers"&gt;
&lt;h2&gt;Pointers&lt;/h2&gt;
&lt;p&gt;Rust has a lot of different pointer types, reminding me of the C++ references,
raw and smart pointers like &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/memory/unique_ptr"&gt;std::unique_ptr&lt;/a&gt;, &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/memory/shared_ptr"&gt;std::shared_ptr&lt;/a&gt;.  For a nice comparison
see &lt;a class="reference external" href="https://github.com/rust-lang/rust-wiki-backup/blob/master/Rust-for-CXX-programmers.rest"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;One of the first pointer type you will meet in Rust is the reference type.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x = {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x = {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In C++ this would look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x = %i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x = %i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is think is nice in Rust is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It's explicit that x will be modified (&lt;tt class="docutils literal"&gt;&amp;amp;mut x&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;It's guaranteed that x is neither dangling nor 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;In C++ references have value syntax. To avoid that I prefer the &lt;a class="reference external" href="https://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Reference_Arguments"&gt;style&lt;/a&gt;
of using pointers for mutable and only &lt;tt class="docutils literal"&gt;const&lt;/tt&gt; reference for immutable data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x = %i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x = %i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way the syntax looks much more like the Rust example, but you can pass 0:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Segmentation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fault&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dumped&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Trying the same with C++ references yields a compile error, because a non
&lt;tt class="docutils literal"&gt;const&lt;/tt&gt; reference can't bind to a temporary (rvalue)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;reference.cpp: In function &amp;#39;int main()&amp;#39;:
reference.cpp:12:11: error: invalid initialization of non-const reference of type &amp;#39;int&amp;amp;&amp;#39; from an rvalue of type &amp;#39;int&amp;#39;
  add_one(0);
           ^
reference.cpp:3:6: note: in passing argument 1 of &amp;#39;void add_one(int&amp;amp;)&amp;#39;
 void add_one(int&amp;amp; num) {
      ^
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Surprising to me, doing the same within Rust works&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nc"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;print!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;adding one to {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot; -&amp;gt; {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output: &lt;tt class="docutils literal"&gt;adding one to 0 &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; 1&lt;/tt&gt;.  Apparently one can bind mutable references
to temporaries in Rust.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="heap-pointers"&gt;
&lt;h3&gt;Heap pointers&lt;/h3&gt;
&lt;p&gt;For managing data on the heap Rust has the &lt;tt class="docutils literal"&gt;Box&amp;lt;T&amp;gt;&lt;/tt&gt; type&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Box&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output: &lt;tt class="docutils literal"&gt;5&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The equivalent in C++ would be&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;memory&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the compiler takes care of freeing the used resources as soon as x
goes out of scope. In the C++ world this is called &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization"&gt;RAII&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ownership-borrowing-and-lifetime"&gt;
&lt;h2&gt;Ownership, Borrowing and Lifetime&lt;/h2&gt;
&lt;p&gt;The Box type is an owning type. Meaning that it owns the resources it is
pointing to. The same is true for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::unique_ptr&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;When passing a Box type to a function the ownership transfers to this function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;: &lt;span class="nb"&gt;Box&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Box&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will result in a compile error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;boxed.rs:10:20: 10:22 error: use of moved value: `*x`
boxed.rs:10     println!(&amp;quot;{}&amp;quot;, * x);
                               ^~
note: in expansion of format_args!
&amp;lt;std macros&amp;gt;:2:43: 2:76 note: expansion site
&amp;lt;std macros&amp;gt;:1:1: 2:78 note: in expansion of println!
boxed.rs:10:5: 10:24 note: expansion site
boxed.rs:9:13: 9:14 note: `x` moved here because it has type `Box&amp;lt;i32&amp;gt;`, which is non-copyable
boxed.rs:9     add_one(x);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because a Box owns the resource, x will become invalid.
If we try same in C++&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;memory&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will result in a segmentation fault:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;% g++ -Wall -std=c++14 cpp_smart_pointers.cpp  -o cpp_smart_pointers
% ./cpp_smart_pointers
5
[1]    28585 segmentation fault (core dumped)  ./cpp_smart_pointers
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because the unique_pointer moved from x into the function argument x remains
invalid and dereferencing it will leave it invalid.  Note that &lt;tt class="docutils literal"&gt;g++&lt;/tt&gt; doesn't
even issue a warning even when compiling this code with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-Wall&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;What I think is nice in the C++ version is the explicit &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::move&lt;/span&gt;&lt;/tt&gt; which
makes it obvious to the reader, that &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; shouldn't be used afterwards.&lt;/p&gt;
&lt;p&gt;The compile errors Rust gives can be intimidating when learning Rust, since it
is not obvious from the code that &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; just moved.&lt;/p&gt;
&lt;p&gt;But Rust's lifetime concept doesn't stop here.  It even tracks down usage of
invalidated references.  Consider the following C++ code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%i, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%i&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Executing this code will output &lt;tt class="docutils literal"&gt;5, 0&lt;/tt&gt; on my machine.  According to the &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/container/vector#Iterator_invalidation"&gt;C++
standard&lt;/a&gt;
&lt;tt class="docutils literal"&gt;push_back&lt;/tt&gt; invalidates any reference to elements (iterators).  So accessing
it triggers undefined behaviour.&lt;/p&gt;
&lt;p&gt;Trying the same in Rust&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;print!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Triggers a compile error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rust_dangling.rs:6:5: 6:6 error: cannot borrow `v` as mutable because it is also borrowed as immutable
rust_dangling.rs:6     v.push(6);
                       ^
rust_dangling.rs:4:14: 4:15 note: previous borrow of `v` occurs here; the immutable borrow prevents subsequent moves or mutable borrows of `v` until the borrow ends
rust_dangling.rs:4     let x = &amp;amp;v[0];
                                ^
rust_dangling.rs:8:2: 8:2 note: previous borrow ends here
rust_dangling.rs:1 fn main() {
...
rust_dangling.rs:8 }
                   ^
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rust tries to tell us, that we can't change the vector, because there is still
a reference to it in scope, namely &lt;tt class="docutils literal"&gt;x&lt;/tt&gt;!
To fix the issue we need to limit the scope of &lt;tt class="docutils literal"&gt;x&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="fm"&gt;print!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Have comments? Discuss on &lt;a class="reference external" href="https://news.ycombinator.com/item?id=9329506"&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content><category term="2015"></category><category term="programming"></category><category term="Rust"></category><category term="C++"></category></entry><entry><title>Learning Rust</title><link href="https://blog.rnstlr.ch/learning-rust.html" rel="alternate"></link><published>2015-02-04T00:00:00+01:00</published><updated>2015-02-04T00:00:00+01:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2015-02-04:/learning-rust.html</id><summary type="html">&lt;p class="first last"&gt;Learning the programming language rust&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Reading the news that Rust reached &lt;a class="reference external" href="http://blog.rust-lang.org/2015/01/09/Rust-1.0-alpha.html"&gt;1.0 Alpha&lt;/a&gt; I decided to take
a deeper look at &lt;a class="reference external" href="http://www.rust-lang.org/"&gt;it&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="getting-rust"&gt;
&lt;h2&gt;Getting Rust&lt;/h2&gt;
&lt;p&gt;Installing Rust under arch is as easy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pacman&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;rust
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above will install the latest version from the &lt;a class="reference external" href="https://www.archlinux.org/packages/community/x86_64/rust/"&gt;community repo&lt;/a&gt;.  If you want the
latest and greatest version you could also try &lt;a class="reference external" href="https://aur.archlinux.org/packages/rust-nightly/"&gt;the nightly build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The lazy people can try it &lt;a class="reference external" href="https://play.rust-lang.org/?code=%2F%2F%20This%20code%20is%20editable%20and%20runnable!%0Afn%20main()%20%7B%0A%20%20%20%20println!(%22Hello%20World!%22%3B%0A%7D"&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hello-world"&gt;
&lt;h2&gt;Hello World!&lt;/h2&gt;
&lt;p&gt;Here comes the obligatory &amp;quot;Hello World!&amp;quot; code in Rust&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="immutability"&gt;
&lt;h2&gt;Immutability&lt;/h2&gt;
&lt;p&gt;Beeing a &lt;a class="reference external" href="http://gamesfromwithin.com/wp-content/uploads/2010/07/const_nazi.mov"&gt;C++ const-nazi&lt;/a&gt; I
really liked that by default all variable bindings are immutable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The example above will give you a compile error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mut.rs:4:5:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;:9&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;re-assignment&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;immutable&lt;span class="w"&gt; &lt;/span&gt;variable&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;x&lt;span class="sb"&gt;`&lt;/span&gt;
mut.rs:4&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;^~~~
mut.rs:3:9:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;:10&lt;span class="w"&gt; &lt;/span&gt;note:&lt;span class="w"&gt; &lt;/span&gt;prior&lt;span class="w"&gt; &lt;/span&gt;assignment&lt;span class="w"&gt; &lt;/span&gt;occurs&lt;span class="w"&gt; &lt;/span&gt;here
mut.rs:3&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;^
error:&lt;span class="w"&gt; &lt;/span&gt;aborting&lt;span class="w"&gt; &lt;/span&gt;due&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;previous&lt;span class="w"&gt; &lt;/span&gt;error
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By using the &amp;quot;mut&amp;quot; keyword we mark the variable as mutable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the code will print &amp;quot;2&amp;quot;&lt;/p&gt;
&lt;p&gt;Rust will also emit a warning when not using variables or an error when trying
to use uninitialized variables.&lt;/p&gt;
&lt;/div&gt;
</content><category term="2015"></category><category term="programming"></category><category term="Rust"></category></entry><entry><title>Run slock before going to sleep</title><link href="https://blog.rnstlr.ch/run-slock-before-going-to-sleep.html" rel="alternate"></link><published>2013-10-25T00:00:00+02:00</published><updated>2013-10-25T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2013-10-25:/run-slock-before-going-to-sleep.html</id><summary type="html">&lt;p class="first last"&gt;How to configure systemd to run slock when going to sleep&lt;/p&gt;
</summary><content type="html">&lt;p&gt;As noted in my previous post, I configured my system to run slock as soon as
the system enters sleep state.  This is how its done.&lt;/p&gt;
&lt;p&gt;First we create a new systemd unit in /etc/systemd/system called
suspend&amp;#64;.service&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;User suspend actions&lt;/span&gt;
&lt;span class="na"&gt;Before&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sleep.target&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;%I&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;simple&lt;/span&gt;
&lt;span class="na"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;DISPLAY=:0&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/slock&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sleep.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So what did we do? We created a unit that runs before sleep.target is reached.
This unit will run as a configurable user by enabling &lt;cite&gt;suspend&amp;#64;$USER.service&lt;/cite&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;# &lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;suspend@&lt;span class="nv"&gt;$USER&lt;/span&gt;.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the /usr/bin/slock runs as $USER.  To be able to communicate with the
X-Server we need to set the DISPLAY variable to :0.&lt;/p&gt;
&lt;p&gt;So now when your system is going to sleep systemd should start slock.&lt;/p&gt;
&lt;p&gt;Sadly this works only for a one user system since the username is hardcoded
when enabling the unit file.  To make it work with multible users one would
need to create a script which determines which user is running the X-Server
then change to this user and lock the screen.&lt;/p&gt;
</content><category term="2013"></category><category term="systemd"></category><category term="slock"></category><category term="suspend"></category></entry><entry><title>Creating this Blog</title><link href="https://blog.rnstlr.ch/creating-this-blog.html" rel="alternate"></link><published>2013-10-23T00:00:00+02:00</published><updated>2013-10-23T00:00:00+02:00</updated><author><name>rnestler</name></author><id>tag:blog.rnstlr.ch,2013-10-23:/creating-this-blog.html</id><summary type="html">&lt;p class="first last"&gt;How and why I created this blog.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Recently a friend of mine asked me how I configured my system so that &lt;a class="reference external" href="http://tools.suckless.org/slock"&gt;slock&lt;/a&gt; locks the screen when I close the lid.&lt;/p&gt;
&lt;p&gt;Since I couldn't remember how I did it, I thought it's time to create a blog
where I can write down stuff like this.&lt;/p&gt;
&lt;p&gt;The same friend recommended me to use &lt;a class="reference external" href="http://getpelican.com/"&gt;pelican&lt;/a&gt; to
create my blog.&lt;/p&gt;
&lt;div class="section" id="setting-up-pelican"&gt;
&lt;h2&gt;Setting up pelican&lt;/h2&gt;
&lt;p&gt;Setting up pelican is quite straight forward. First I created a new developement environment with &lt;a class="reference external" href="http://www.virtualenv.org/"&gt;virtualenv&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;virtualenv&lt;span class="w"&gt; &lt;/span&gt;blogenv
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blogenv
$&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;bin/acivate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then installing pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next step is to create the base structure with the interactive
pelican-quickstart&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;blog&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blog
$&lt;span class="w"&gt; &lt;/span&gt;pelican-quickstart
$&lt;span class="w"&gt; &lt;/span&gt;ls
content/&lt;span class="w"&gt;            &lt;/span&gt;fabfile.py&lt;span class="w"&gt;  &lt;/span&gt;output/&lt;span class="w"&gt;         &lt;/span&gt;publishconf.py
develop_server.sh*&lt;span class="w"&gt;  &lt;/span&gt;Makefile&lt;span class="w"&gt;    &lt;/span&gt;pelicanconf.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thats it! Your pelican installation is finished! To generate your still empty blog is easy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;html
$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;devserver
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that you can preview you blog on &lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="integrating-with-github-pages"&gt;
&lt;h2&gt;Integrating with github pages&lt;/h2&gt;
&lt;p&gt;Since I don't own any webspace I wanted to use the pages feature of &lt;a class="reference external" href="https://help.github.com/articles/user-organization-and-project-pages"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I created two repositories&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;username/username.github.io-source, where I host the pelican sources&lt;/li&gt;
&lt;li&gt;username/username.github.io, where I host the generated output&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pelican supports this approach as seen in &lt;a class="reference external" href="http://docs.getpelican.com/en/3.3.0/tips.html#user-pages"&gt;http://docs.getpelican.com/en/3.3.0/tips.html#user-pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So all you need to do is to install ghp-import&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ghp-import
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then change SITEURL in publishconf.py to &lt;a class="reference external" href="http://username.github.io"&gt;http://username.github.io&lt;/a&gt; and edit the
github target in the Makefile to look like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;ghp-import&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;git@github.com:username.username.io.git&lt;span class="w"&gt; &lt;/span&gt;gh-pages:master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ghp-import will create a branch in the current git repository called gh-pages
and commit any changes in the output directory to it. Then we push this branch
to the master branch in our username.github.io repository.&lt;/p&gt;
&lt;p&gt;So if you type&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;github
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The blog gets published under &lt;a class="reference external" href="http://username.github.io"&gt;http://username.github.io&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="2013"></category><category term="blog"></category></entry></feed>